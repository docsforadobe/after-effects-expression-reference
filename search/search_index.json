{"config":{"lang":["en"],"separator":"[\\s\\-,\\.:!=\\[\\]()\"/]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Use the After Effects expression elements along with standard JavaScript elements to write your expressions. You can use the Expression Language menu at any time to insert methods and attributes into an expression, and you can use the pick whip at any time to insert properties.</p> <ul> <li>For resources on how to get started with expressions, see Resources.</li> <li>For some broad examples, see Examples.</li> <li>For info on changes to the expression engine over the years, see Changelog.</li> </ul>"},{"location":"#navigating-the-docs","title":"Navigating the docs","text":"<p>Within each page, you'll see categories for each logical group of pages, and then specific pages within each category.</p> <p>When you open a page, you'll be presented with:</p> <ul> <li>A brief introduction to that topic (\"This is what the page is about\")</li> <li>Headers for Attributes and Methods<ul> <li>Attributes are accessible bits of information:<ul> <li><code>thisComp.name</code> gets the name of the comp!</li> <li><code>text.sourceText.fontSize</code> gets the font size of the text</li> </ul> </li> <li>Methods are functions that you run, to either get some other info or generate a result:<ul> <li><code>thisComp.layer(\"Banana\")</code> retrieves a layer called Banana, or</li> <li><code>text.sourceText.setFontSize(123)</code> will set the font size to 123</li> </ul> </li> </ul> </li> <li> <p>A list of each expression method or attribute alphabetically sorted under its header, which includes:</p> <ul> <li>The name of the item</li> <li>At least one way of how to access it from an expression (ie if you want to use the \"TextStyle.font\" item, you access it via <code>text.sourceText.style.font</code>)</li> <li>A brief description on what the item does &amp; how it works</li> <li> <p>The type of info an attribute provides, or the type of info a method returns(1)</p> <ol> <li> <p>Some return-value descriptions include a number in square brackets\u2014this number specifies the dimension of the returned property or Array.</p> <p>If a specific dimension is not included, the dimension of the returned Array depends on the dimension of the input.</p> </li> </ol> </li> <li> <p>(Methods only) A list of all arguments/parameters needed to call the method, including optional arguments/parameters(1)</p> <ol> <li> <p>If an argument description contains an equal sign (<code>=</code>) and a value (such as <code>t=time</code> or <code>width=.2</code>), then the argument uses the included default value if you don't specify a different value.</p> <p>Some argument descriptions include a number in square brackets\u2014this number indicates the dimension of the expected property or Array.</p> </li> </ol> </li> <li> <p>And, sometimes, an example showing how to use that item</p> </li> </ul> </li> </ul> <p>Tip</p> <p>The docs also include notes (where applicable) indicating any other warnings, bugs, issues, or tips that may apply to a given item. We've also tried to provide info on when an item was added into After Effects, so that you can ensure it'll work for your project.</p>"},{"location":"#a-note-on-sources","title":"A Note on Sources","text":"<p>Please note that the majority of this document is community-supported and community-generated by volunteers just trying to help out!</p> <p>While we're lucky enough to have some Adobe staff keeping these docs up-to-date with each version of After Effects, their time and energy is also being donated in a volunteer capacity.</p> <p>If you have any questions, comments, or concerns about anything in these docs \u2013 or if you'd like to contribute (no code experience necessary!), propose suggestions, or anything else \u2013 please reach out to the admins at hi@docsforadobe.dev.</p>"},{"location":"general/color-conversion/","title":"Color Conversion","text":"<p>These methods are all around converting colours from one format to another. Think converting a hex code to RGB, so you can use your client's brand colours in an expression in the project, or converting a value to HSL so you can adjust the lightness or saturation procedurally.</p>"},{"location":"general/color-conversion/#methods","title":"Methods","text":""},{"location":"general/color-conversion/#rgbtohsl","title":"rgbToHsl()","text":"<p><code>rgbToHsl(rgbaArray)</code></p>"},{"location":"general/color-conversion/#description","title":"Description","text":"<p>Converts a color in RGBA space to HSLA space.</p> <p>The input is an Array of normalized red, green, blue, and alpha channel values, all in the range of <code>0.0</code> to <code>1.0</code>.</p> <p>The resulting value is an Array of hue, saturation, lightness, and alpha channel values, also in the range of <code>0.0</code> to <code>1.0</code>.</p>"},{"location":"general/color-conversion/#parameters","title":"Parameters","text":"Parameter Type Description <code>rgbaArray</code> Array of numbers (4-dimensional) RGBA values, in the range <code>[0.0..1.0]</code>"},{"location":"general/color-conversion/#returns","title":"Returns","text":"<p>HSLA Array (4-dimensional)</p>"},{"location":"general/color-conversion/#example","title":"Example:","text":"<pre><code>rgbToHsl.effect(\"Change Color\")(\"Color To Change\")\n</code></pre>"},{"location":"general/color-conversion/#hsltorgb","title":"hslToRgb()","text":"<p><code>hslToRgb(hslaArray)</code></p>"},{"location":"general/color-conversion/#description_1","title":"Description","text":"<p>Converts a color in HSLA space to RGBA space.</p> <p>This conversion is the opposite of the conversion performed by the rgbToHsl() method.</p>"},{"location":"general/color-conversion/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>hslaArray</code> Array of numbers (4-dimensional) HSLA values, in the range <code>[0.0..1.0]</code>"},{"location":"general/color-conversion/#returns_1","title":"Returns","text":"<p>RGBA Array (4-dimensional)</p>"},{"location":"general/color-conversion/#hextorgb","title":"hexToRgb()","text":"<p><code>hexToRgb(hexString)</code></p> <p>Note</p> <p>This functionality was added in After Effects 16.0.</p>"},{"location":"general/color-conversion/#description_2","title":"Description","text":"<p>Converts a color in hex triplet space to RGB space, or in hex quartet space to RGBA space.</p> <p>For hex triplets, the alpha channel defaults to 1.0.</p>"},{"location":"general/color-conversion/#parameters_2","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>hexString</code></p> <p>Optional leading characters 0x, 0X, or # will be ignored. Characters beyond 8 digits will be ignored.</p> <p>String</p> <p>Hex triplet (6 digits, no alpha channel) or quartet (8 digits, includes alpha channel) containing only numerals or characters A\u2013F.</p>"},{"location":"general/color-conversion/#returns_2","title":"Returns","text":"<p>Array (4-dimensional)</p>"},{"location":"general/color-conversion/#examples","title":"Examples","text":"<p>Any of the following will return <code>[1.0, 0.0, 1.0, 1.0]</code>:</p> <ul> <li><code>hexToRgb(\"FF00FF\")</code></li> <li><code>hexToRgb(\"#FF00FF\")</code></li> <li><code>hexToRgb(\"0xFF00FF\")</code></li> <li><code>hexToRgb(\"0XFF00FFFF\")</code><ul> <li>Note: This inputs an 8-digit hex quartet; the last two digits set alpha channel to 1.0.</li> </ul> </li> </ul>"},{"location":"general/general/","title":"General","text":"<p>The methods and attributes in this category apply to\u2013and can be used by\u2013nearly every expression in After Effects.</p> <p>These global, top-level elements have been grouped into several categories for the sake of organization.</p> <p>Those categories are:</p> <ul> <li>Global is for broad, commonly-used elements such as the current comp or property; the current comp time, and so on.</li> <li>Time Conversion holds various methods for converting time to and from various other methods.</li> <li>Vector Math provides a suite of methods for working with vectors and arrays.</li> <li>Random Numbers is for generating randomness within your expression.</li> <li>Interpolation is for converting values from one set to another, or using one set of values to drive another set of values.</li> <li>Color Conversion is for changing between colour modes (such as converting RGB values to HSL, or Hex values to RGB)</li> <li>Other Math is for all other assorted math\u2013 namely, converting between degrees and radians for rotation values.</li> </ul>"},{"location":"general/global/","title":"Global","text":"<p>These attributes and methods are global, top-level elements accessible from any expression across your project. They're among the most commonly-used expression elements.</p>"},{"location":"general/global/#attributes","title":"Attributes","text":""},{"location":"general/global/#colordepth","title":"colorDepth","text":"<p><code>colorDepth</code></p>"},{"location":"general/global/#description","title":"Description","text":"<p>Type the project color depth value.</p> <p>For example, <code>colorDepth</code> returns <code>16</code> when the project color depth is 16 bits per channel.</p>"},{"location":"general/global/#type","title":"Type","text":"<p>Number</p>"},{"location":"general/global/#thiscomp","title":"thisComp","text":"<p><code>thisComp</code></p>"},{"location":"general/global/#description_1","title":"Description","text":"<p>Represents the composition containing the expression.</p>"},{"location":"general/global/#type_1","title":"Type","text":"<p>Comp</p>"},{"location":"general/global/#thislayer","title":"thisLayer","text":"<p><code>thisLayer</code></p>"},{"location":"general/global/#description_2","title":"Description","text":"<p>Represents the layer containing the expression.</p> <p>Because <code>thisLayer</code> is the default object, its use is optional.</p> <p>For example, you can start an expression with <code>thisLayer.width</code> or <code>width</code> and get the same result.</p>"},{"location":"general/global/#type_2","title":"Type","text":"<p>Layer, Light, or Camera object</p>"},{"location":"general/global/#thisproject","title":"thisProject","text":"<p><code>thisProject</code></p>"},{"location":"general/global/#description_3","title":"Description","text":"<p>Represents the project which contains the expression.</p>"},{"location":"general/global/#type_3","title":"Type","text":"<p>Project</p>"},{"location":"general/global/#thisproperty","title":"thisProperty","text":"<p><code>thisProperty</code></p>"},{"location":"general/global/#description_4","title":"Description","text":"<p>Represents the property containing the expression.</p> <p>For example, if you write an expression on the Rotation property, you can start an expression with <code>thisProperty</code> to refer to the Rotation property.</p>"},{"location":"general/global/#type_4","title":"Type","text":"<p>Property</p>"},{"location":"general/global/#time","title":"time","text":"<p><code>time</code></p>"},{"location":"general/global/#description_5","title":"Description","text":"<p>Represents the composition time, in seconds, at which the expression is being evaluated.</p>"},{"location":"general/global/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"general/global/#value","title":"value","text":"<p><code>value</code></p>"},{"location":"general/global/#description_6","title":"Description","text":"<p>Represents the value at the current time for the property containing the expression.</p>"},{"location":"general/global/#type_6","title":"Type","text":"<p>A value of the same property type as the property being refrenced.</p>"},{"location":"general/global/#methods","title":"Methods","text":""},{"location":"general/global/#comp","title":"comp()","text":"<p><code>comp(name)</code></p>"},{"location":"general/global/#description_7","title":"Description","text":"<p>Retrieves another composition by name.</p>"},{"location":"general/global/#parameters","title":"Parameters","text":"Parameter Type Description <code>name</code> String The name of the composition to get"},{"location":"general/global/#returns","title":"Returns","text":"<p>Comp</p>"},{"location":"general/global/#footage","title":"footage()","text":"<p><code>footage(name)</code></p>"},{"location":"general/global/#description_8","title":"Description","text":"<p>Retrieves a footage item by name.</p>"},{"location":"general/global/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>name</code> String The name of the footage item to get"},{"location":"general/global/#returns_1","title":"Returns","text":"<p>Footage</p>"},{"location":"general/global/#posterizetime","title":"posterizeTime()","text":"<p><code>posterizeTime(updatesPerSecond)</code></p>"},{"location":"general/global/#description_9","title":"Description","text":"<p>This expression allows you to set the frame rate for a property to be lower than the frame rate of the composition.</p>"},{"location":"general/global/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>updatesPerSecond</code> Number The number of times per second the expression should evaluate"},{"location":"general/global/#returns_2","title":"Returns","text":"<p>Number</p>"},{"location":"general/global/#example","title":"Example","text":"<p>To change a property to a random value 1 time per second:</p> <pre><code>posterizeTime(1);\n\nrandom()\n</code></pre> <p>To change a 2d property (such as Position or Scale) to a random value 3 times per second:</p> <pre><code>posterizeTime(3);\n\nconst newValue = random(0, 100);\n[newValue, newValue];\n</code></pre> <p>To change a property to a random value within a specified range, every 12 frames:</p> <pre><code>const holdFrames = 12;\nconst minValue = 50;\nconst maxValue = 100;\n\nposterizeTime(1 / framesToTime(holdFrames));\n\nconst newValue = random(minValue, maxValue);\nnewValue;\n</code></pre>"},{"location":"general/interpolation/","title":"Interpolation","text":"<p>For all the Interpolation methods, the argument <code>t</code> is often <code>time</code> or <code>value</code>, though it can have other values, instead. If <code>t</code> is <code>time</code>, the interpolation between values happens over a duration. If <code>t</code> is <code>value</code>, then the expression maps one range of values to a new range of values.</p> <p>All the Interpolation methods can also be used to convert from one range of values to another.</p> <p>Chris and Trish Meyer provide additional information and examples for these methods in an article on the ProVideo Coalition website.</p> <p>Ian Haigh provides a script on After Effects Scripts website that you can use to easily apply advanced interpolation method expressions\u2014such as bounces\u2014to properties.</p>"},{"location":"general/interpolation/#methods","title":"Methods","text":""},{"location":"general/interpolation/#lineart-tmin-tmax-value1-value2","title":"linear(t, tMin, tMax, value1, value2)","text":"<p><code>linear(t, tMin, tMax, value1, value2)</code></p>"},{"location":"general/interpolation/#description","title":"Description","text":"<p>Returns <code>value1</code> when <code>t &lt;= tMin</code>. Returns <code>value2</code> when <code>t &gt;= tMax</code>. Returns a linear interpolation between <code>value1</code> and <code>value2</code> when <code>tMin &lt; t &lt; tMax</code>.</p>"},{"location":"general/interpolation/#parameters","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>tMin</code> Number Minimum driver value <code>tMax</code> Number Maximum driver value <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#example","title":"Example","text":"<p>This expression on the Opacity property causes Opacity values to ramp linearly from <code>20%</code> to <code>80%</code> over the time from <code>0</code> seconds to <code>6</code> seconds:</p> <pre><code>linear(time, 0, 6, 20, 80)\n</code></pre> <p>This expression on the Opacity property converts the Opacity values from the range <code>0%</code>-<code>100%</code> to the range <code>20%</code>-<code>80%</code>:</p> <pre><code>linear(value, 0, 100, 20, 80)\n</code></pre>"},{"location":"general/interpolation/#lineart-value1-value2","title":"linear(t, value1, value2)","text":"<p><code>linear(t, value1, value2)</code></p>"},{"location":"general/interpolation/#description_1","title":"Description","text":"<p>Returns a value that linearly interpolates from <code>value1</code> to <code>value2</code> as <code>t</code> ranges from <code>0</code> to <code>1</code>. Returns <code>value1</code> when <code>t &lt;= 0</code>. Returns <code>value2</code> when <code>t &gt;= 1</code>.</p>"},{"location":"general/interpolation/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_1","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easet-tmin-tmax-value1-value2","title":"ease(t, tMin, tMax, value1, value2)","text":"<p><code>ease(t, tMin, tMax, value1, value2)</code></p>"},{"location":"general/interpolation/#description_2","title":"Description","text":"<p>Similar to linear with the same arguments, except that the interpolation eases in and out so that the velocity is <code>0</code> at the start and end points. This method results in a smooth animation.</p>"},{"location":"general/interpolation/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>tMin</code> Number Minimum driver value <code>tMax</code> Number Maximum driver value <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_2","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easet-value1-value2","title":"ease(t, value1, value2)","text":"<p><code>ease(t, value1, value2)</code></p>"},{"location":"general/interpolation/#description_3","title":"Description","text":"<p>Similar to linear with the same arguments, except that the interpolation eases in and out so that the velocity is <code>0</code> at the start and end points. This method results in a smooth animation.</p>"},{"location":"general/interpolation/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_3","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easeint-tmin-tmax-value1-value2","title":"easeIn(t, tMin, tMax, value1, value2)","text":"<p><code>easeIn(t, tMin, tMax, value1, value2)</code></p>"},{"location":"general/interpolation/#description_4","title":"Description","text":"<p>Similar to ease, except that the tangent is <code>0</code> only on the <code>tMin</code> side and interpolation is <code>linear</code> on the <code>tMax</code> side.</p>"},{"location":"general/interpolation/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>tMin</code> Number Minimum driver value <code>tMax</code> Number Maximum driver value <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_4","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easeint-value1-value2","title":"easeIn(t, value1, value2)","text":"<p><code>easeIn(t, value1, value2)</code></p>"},{"location":"general/interpolation/#description_5","title":"Description","text":"<p>Similar to ease, except that the tangent is <code>0</code> only on the <code>value1</code> side and interpolation is <code>linear</code> on the <code>value2</code> side.</p>"},{"location":"general/interpolation/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_5","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easeoutt-tmin-tmax-value1-value2","title":"easeOut(t, tMin, tMax, value1, value2)","text":"<p><code>easeOut(t, tMin, tMax, value1, value2)</code></p>"},{"location":"general/interpolation/#description_6","title":"Description","text":"<p>Similar to ease, except that the tangent is <code>0</code> only on the <code>tMax</code> side and interpolation is <code>linear</code> on the <code>tMin</code> side.</p>"},{"location":"general/interpolation/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>tMin</code> Number Minimum driver value <code>tMax</code> Number Maximum driver value <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_6","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/interpolation/#easeoutt-value1-value2","title":"easeOut(t, value1, value2)","text":"<p><code>easeOut(t, value1, value2)</code></p>"},{"location":"general/interpolation/#description_7","title":"Description","text":"<p>Similar to ease, except that the tangent is <code>0</code> only on the <code>value2</code> side and interpolation is <code>linear</code> on the <code>value1</code> side.</p>"},{"location":"general/interpolation/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Interpolation Driver <code>value1</code> Number or Array Value to interpolate from <code>value2</code> Number or Array Value to interpolate to"},{"location":"general/interpolation/#returns_7","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/other-math/","title":"Other Math","text":"<p>This category holds other math functions not otherwise covered.</p>"},{"location":"general/other-math/#methods","title":"Methods","text":""},{"location":"general/other-math/#degreestoradians","title":"degreesToRadians()","text":"<p><code>degreesToRadians(degrees)</code></p>"},{"location":"general/other-math/#description","title":"Description","text":"<p>Converts degrees to radians.</p>"},{"location":"general/other-math/#parameters","title":"Parameters","text":"Parameter Type Description <code>degrees</code> Number The value (in degrees) to convert to radians"},{"location":"general/other-math/#returns","title":"Returns","text":"<p>Number</p>"},{"location":"general/other-math/#radianstodegrees","title":"radiansToDegrees()","text":"<p><code>radiansToDegrees(radians)</code></p>"},{"location":"general/other-math/#description_1","title":"Description","text":"<p>Converts radians to degrees.</p>"},{"location":"general/other-math/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>radians</code> Number The value (in radians) to convert to degrees"},{"location":"general/other-math/#returns_1","title":"Returns","text":"<p>Number</p>"},{"location":"general/random-numbers/","title":"Random Numbers","text":"<p>These items deal with randomness in expressions.</p> <p>Note</p> <p>The wiggle() method\u2014which is used to randomly vary a property value\u2014is in the Property attributes and methods category.</p>"},{"location":"general/random-numbers/#methods","title":"Methods","text":""},{"location":"general/random-numbers/#gaussrandom","title":"gaussRandom()","text":"<p><code>gaussRandom([maxValOrArray=1])</code></p>"},{"location":"general/random-numbers/#description","title":"Description","text":"<p>When <code>maxValOrArray</code> is a Number, this method returns a random number. Approximately <code>90%</code> of the results are in the <code>0</code> to <code>maxValOrArray</code> range, and the remaining <code>10%</code> are outside this range.</p> <p>When <code>maxValOrArray</code> is an Array, this method returns an Array of random values, with the same dimension as <code>maxValOrArray</code>. <code>90%</code> of the values are in the range from <code>0</code> to <code>maxValOrArray</code>, and the remaining <code>10%</code> are outside this range.</p> <p>The results have a Gaussian (bell-shaped) distribution.</p>"},{"location":"general/random-numbers/#parameters","title":"Parameters","text":"Parameter Type Description <code>maxValOrArray</code> Number or Array Optional. The max value (or array) to generate a random number to, from <code>0</code>. Defaults to <code>1</code>."},{"location":"general/random-numbers/#returns","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/random-numbers/#gaussrandomminvalorarray-maxvalorarray","title":"gaussRandom(minValOrArray, maxValOrArray)","text":"<p><code>gaussRandom(minValOrArray, maxValOrArray)</code></p>"},{"location":"general/random-numbers/#description_1","title":"Description","text":"<p>If <code>minValOrArray</code> and <code>maxValOrArray</code> are Numbers, this method returns a random number. Approximately <code>90%</code> of the results are in the range from <code>minValOrArray</code> to <code>maxValOrArray</code>, and the remaining <code>10%</code> are outside this range.</p> <p>If the arguments are Arrays, this method returns an Array of random numbers with the same dimension as the argument with the greater dimension. For each component, approximately 90% of the results are in the range from the corresponding component of <code>minValOrArray</code> to the corresponding component of <code>maxValOrArray</code>, and the remaining <code>10%</code> are outside this range.</p> <p>The results have a Gaussian (bell-shaped) distribution.</p>"},{"location":"general/random-numbers/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>minValOrArray</code> Number or Array The min value (or array) to generate a random number from. <code>maxValOrArray</code> Number or Array The max value (or array) to generate a random number to."},{"location":"general/random-numbers/#returns_1","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/random-numbers/#noisevalorarray","title":"noise(valOrArray)","text":"<p><code>noise(valOrArray)</code></p>"},{"location":"general/random-numbers/#description_2","title":"Description","text":"<p>Returns a number in the range from <code>-1</code> to <code>1</code>.</p> <p>The noise is not actually random; it is based on Perlin noise, which means that the return values for two input values that are near one another tend to be near one another.</p> <p>This type of noise is useful when you want a sequence of seemingly random numbers that don't vary wildly from one to the other\u2014as is usually the case when animating any apparently random natural motion.</p>"},{"location":"general/random-numbers/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>valOrArray</code> Number or an Array (2- or 3-dimensional) The input value (or array) to use to generate the random number."},{"location":"general/random-numbers/#returns_2","title":"Returns","text":"<p>Number</p>"},{"location":"general/random-numbers/#example","title":"Example","text":"<pre><code>rotation + 360*noise(time)\n</code></pre>"},{"location":"general/random-numbers/#random","title":"random()","text":"<p><code>random([maxValOrArray=1])</code></p>"},{"location":"general/random-numbers/#description_3","title":"Description","text":"<p>If <code>maxValOrArray</code> is a Number, this method returns a number in the range from <code>0</code> to <code>maxValOrArray</code>.</p> <p>If <code>maxValOrArray</code> is an Array, this method returns an Array with the same dimension as <code>maxValOrArray</code>, with each component ranging from <code>0</code> to the corresponding component of <code>maxValOrArray</code>.</p> <p>Note</p> <p>In After Effects CC and CS6, the behavior of random() is changed to be more random when layer IDs are close together. The wiggle() expression is not affected.</p>"},{"location":"general/random-numbers/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>maxValOrArray</code> Number or Array Optional. The max value (or array) to generate a random number to, from <code>0</code>. Defaults to <code>1</code>."},{"location":"general/random-numbers/#returns_3","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/random-numbers/#randomminvalorarray-maxvalorarray","title":"random(minValOrArray, maxValOrArray)","text":"<p><code>random(minValOrArray, maxValOrArray)</code></p>"},{"location":"general/random-numbers/#description_4","title":"Description","text":"<p>If <code>minValOrArray</code> and <code>maxValOrArray</code> are Numbers, this method returns a number in the range from <code>minValOrArray</code> to <code>maxValOrArray</code>.</p> <p>If the arguments are Arrays, this method returns an Array with the same dimension as the argument with the greater dimension, with each component in the range from the corresponding component of <code>minValOrArray</code> to the corresponding component of <code>maxValOrArray</code>.</p> <p>For example, the expression <code>random([100, 200], [300, 400])</code> returns an Array whose first value is in the range <code>100\u2013300</code> and whose second value is in the range <code>200\u2013400</code>. If the dimensions of the two input Arrays don't match, higher-dimension values of the shorter Array are filled out with zeros.</p>"},{"location":"general/random-numbers/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>minValOrArray</code> Number or Array The min value (or array) to generate a random number from. <code>maxValOrArray</code> Number or Array The max value (or array) to generate a random number to."},{"location":"general/random-numbers/#returns_4","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/random-numbers/#seedrandom","title":"seedRandom()","text":"<p><code>seedRandom(offset[, timeless=false])</code></p>"},{"location":"general/random-numbers/#description_5","title":"Description","text":"<p>The <code>random()</code> and <code>gaussRandom()</code> methods use a seed value that controls the sequence of numbers.</p> <p>By default, the seed is computed as a function of a unique layer identifier, the property within the layer, the current time, and an offset value of <code>0</code>.</p> <p>Call <code>seedRandom()</code> to set the offset to something other than 0 to create a different random sequence.</p> <p>The multiplication by <code>100</code> in this example converts the value in the range <code>0\u20131</code> returned by the random method into a Number in the range <code>0\u2013100</code>; this range is more typically useful for the Opacity property, which has values from <code>0%</code> to <code>100%</code>.</p>"},{"location":"general/random-numbers/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>offset</code> Number The value with which to offset the seed. This is also used to control the initial value of the <code>wiggle()</code> function. <code>timeless</code> Boolean Optional. Use <code>true</code> for the timeless argument to not use the current time as input to the random seed. This allows you to generate a random number that doesn't vary depending on the time of evaluation. Defaults to <code>false</code>."},{"location":"general/random-numbers/#returns_5","title":"Returns","text":"<p>None</p>"},{"location":"general/random-numbers/#example_1","title":"Example","text":"<p>This expression on the Opacity property sets the Opacity value to a random value that does not vary with time:</p> <pre><code>seedRandom(123456, true);\nrandom()*100\n</code></pre>"},{"location":"general/time-conversion/","title":"Time Conversion","text":"<p>These methods are all about converting between various time formats.</p> <p>Tip</p> <p>If you want more control over the look of timecode in your footage, use the <code>timeToCurrentFormat()</code> method or other <code>timeTo</code> methods to generate the timecode instead of using the Timecode or Numbers effect.</p>"},{"location":"general/time-conversion/#example","title":"Example","text":"<p>You can easily format and animate the timecode text by creating a text layer, applying whatever text styling you'd like, and adding this expression to the Source Text property:</p> <pre><code>timeToCurrentFormat();\n</code></pre>"},{"location":"general/time-conversion/#methods","title":"Methods","text":""},{"location":"general/time-conversion/#framestotime","title":"framesToTime()","text":"<p><code>framesToTime(frames[, fps=1.0 / thisComp.frameDuration])</code></p>"},{"location":"general/time-conversion/#description","title":"Description","text":"<p>Returns the time corresponding to the frames argument. It doesn't have to be an integer.</p> <p>The inverse of <code>timeToFrames()</code>.</p>"},{"location":"general/time-conversion/#parameters","title":"Parameters","text":"Parameter Type Description <code>frames</code> Number The amount of frames to convert. <code>fps</code> Number Optional. The number of frames per second to use to convert. Defaults to <code>1.0 / thisComp.frameDuration</code> (the frame rate of the current composition)."},{"location":"general/time-conversion/#returns","title":"Returns","text":"<p>Number</p>"},{"location":"general/time-conversion/#timetocurrentformat","title":"timeToCurrentFormat()","text":"<p><code>timeToCurrentFormat([t=time + thisComp.displayStartTime][, fps=1.0 / thisComp.frameDuration][, isDuration=false][, ntscDropFrame=thisComp.ntscDropFrame])</code></p>"},{"location":"general/time-conversion/#description_1","title":"Description","text":"<p>Converts the value of <code>t</code> to a String representing time in the current Project Settings display format.</p>"},{"location":"general/time-conversion/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The time (in seconds) to convert. Defaults to <code>time + thisComp.displayStartTime</code>. <code>fps</code> Number Optional. Defaults to <code>1.0 / thisComp.frameDuration</code> (the frame rate of the current composition). <code>isDuration</code> Boolean Optional. Whether <code>t</code> represents a difference between two times, vs an absolute time. Absolute times are rounded down toward negative infinity; durations are rounded away from zero (up for positive values). Defaults to <code>false</code>. <code>ntscDropFrame</code> Boolean Optional. If <code>false</code>, the result is NTSC non-drop-frame timecode. If <code>true</code>, the result is NTSC drop-frame timecode. Defaults to <code>thisComp.ntscDropFrame</code>. <p>Note</p> <p>The <code>ntscDropFrame</code> argument was added in After Effects CS5.5.</p>"},{"location":"general/time-conversion/#returns_1","title":"Returns","text":"<p>String</p>"},{"location":"general/time-conversion/#timetofeetandframes","title":"timeToFeetAndFrames()","text":"<p><code>timeToFeetAndFrames([t=time + thisComp.displayStartTime][, fps=1.0 / thisComp.frameDuration][, framesPerFoot=16][, isDuration=false])</code></p>"},{"location":"general/time-conversion/#description_2","title":"Description","text":"<p>Converts the value of <code>t</code> to a String representing feet of film and frames.</p>"},{"location":"general/time-conversion/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The time (in seconds) to convert. Defaults to <code>time + thisComp.displayStartTime</code>. <code>framesPerFoot</code> Number Optional. Specifies the number of frames in one foot of film. Defaults to <code>16</code> (the most common rate for 35mm footage). <code>isDuration</code> Boolean Optional. Whether <code>t</code> represents a difference between two times, vs an absolute time. Absolute times are rounded down toward negative infinity; durations are rounded away from zero (up for positive values). Defaults to <code>false</code>."},{"location":"general/time-conversion/#returns_2","title":"Returns","text":"<p>String</p>"},{"location":"general/time-conversion/#timetoframes","title":"timeToFrames()","text":"<p><code>timeToFrames([t=time + thisComp.displayStartTime][, fps=1.0 / thisComp.frameDuration][, isDuration=false])</code></p>"},{"location":"general/time-conversion/#description_3","title":"Description","text":"<p>Converts the value of <code>t</code> (some amount of time, in seconds) to an integer number of frames.</p>"},{"location":"general/time-conversion/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The time (in seconds) to convert. Defaults to <code>time + thisComp.displayStartTime</code>. <code>fps</code> Number Optional. The number of frames per second to use to convert. Defaults to <code>1.0 / thisComp.frameDuration</code> (the frame rate of the current composition). <code>isDuration</code> Boolean Optional. Whether <code>t</code> represents a difference between two times, vs an absolute time. Absolute times are rounded down toward negative infinity; durations are rounded away from zero (up for positive values). Defaults to <code>false</code>."},{"location":"general/time-conversion/#returns_3","title":"Returns","text":"<p>Number</p>"},{"location":"general/time-conversion/#timetontsctimecode","title":"timeToNTSCTimecode()","text":"<p><code>timeToNTSCTimecode([t=time + thisComp.displayStartTime][, ntscDropFrame=false][, isDuration=false])</code></p>"},{"location":"general/time-conversion/#description_4","title":"Description","text":"<p>Converts <code>t</code> to a String representing NTSC timecode.</p>"},{"location":"general/time-conversion/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The time (in seconds) to convert. Defaults to <code>time + thisComp.displayStartTime</code>. <code>ntscDropFrame</code> Boolean Optional. If <code>false</code>, the result is NTSC non-drop-frame timecode. If <code>true</code>, the result is NTSC drop-frame timecode. Defaults to <code>false</code>. <code>isDuration</code> Boolean Optional. Whether <code>t</code> represents a difference between two times, vs an absolute time. Absolute times are rounded down toward negative infinity; durations are rounded away from zero (up for positive values). Defaults to <code>false</code>."},{"location":"general/time-conversion/#returns_4","title":"Returns","text":"<p>String</p>"},{"location":"general/time-conversion/#timetotimecode","title":"timeToTimecode()","text":"<p><code>timeToTimecode([t=time + thisComp.displayStartTime][, timecodeBase=30][, isDuration=false])</code></p>"},{"location":"general/time-conversion/#description_5","title":"Description","text":"<p>Converts the value of <code>t</code> to a String representing timecode.</p>"},{"location":"general/time-conversion/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The time (in seconds) to convert. Defaults to <code>time + thisComp.displayStartTime</code>. <code>timecodeBase</code> Number Optional. Specifies the number of frames in one second. Defaults to <code>30</code>. <code>isDuration</code> Boolean Optional. Whether <code>t</code> represents a difference between two times, vs an absolute time. Absolute times are rounded down toward negative infinity; durations are rounded away from zero (up for positive values). Defaults to <code>false</code>."},{"location":"general/time-conversion/#returns_5","title":"Returns","text":"<p>String</p>"},{"location":"general/vector-math/","title":"Vector Math","text":"<p>Vector Math functions are global methods that perform operations on arrays, treating them as mathematical vectors.</p> <p>Unless otherwise specified, Vector Math methods are lenient about dimensions and return a value that is the dimension of the largest input Array object, filling in missing elements with zeros.</p> <p>Unlike built-in JavaScript methods, such as <code>Math.sin</code>, these methods are not used with the <code>Math</code> prefix.</p>"},{"location":"general/vector-math/#example","title":"Example","text":"<p>This expression returns <code>[11, 22, 3]</code>:</p> <pre><code>add([10, 20], [1, 2, 3])\n</code></pre>"},{"location":"general/vector-math/#methods","title":"Methods","text":""},{"location":"general/vector-math/#add","title":"add()","text":"<p><code>add(vec1, vec2)</code></p>"},{"location":"general/vector-math/#description","title":"Description","text":"<p>Adds two vectors.</p>"},{"location":"general/vector-math/#parameters","title":"Parameters","text":"Parameter Type Description <code>vec1</code> Array First vector to add. <code>vec2</code> Array Second vector to add."},{"location":"general/vector-math/#returns","title":"Returns","text":"<p>Array</p>"},{"location":"general/vector-math/#clamp","title":"clamp()","text":"<p><code>clamp(value, limit1, limit2)</code></p>"},{"location":"general/vector-math/#description_1","title":"Description","text":"<p>The value of each component of <code>value</code> is constrained to fall between the values of the corresponding values of <code>limit1</code> and <code>limit2</code>.</p>"},{"location":"general/vector-math/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>value</code> Number or Array Value to clamp. <code>limit1</code> Number or Array Minimum amount to clamp <code>value</code> to. <code>limit2</code> Number or Array Maximum amount to clamp <code>value</code> to."},{"location":"general/vector-math/#returns_1","title":"Returns","text":"<p>Number or Array</p>"},{"location":"general/vector-math/#example_1","title":"Example","text":"<p>Ensure that a wiggled amount never exceeds the 0-100 range:</p> <pre><code>const wiggled = wiggle(0.5, 500);\nclamp(wiggled, 0, 500);\n</code></pre>"},{"location":"general/vector-math/#cross","title":"cross()","text":"<p><code>cross(vec1, vec2)</code></p>"},{"location":"general/vector-math/#description_2","title":"Description","text":"<p>Returns the vector cross product of <code>vec1</code> and <code>vec2</code>.</p> <p>Refer to a math reference or JavaScript guide for more information.</p>"},{"location":"general/vector-math/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>vec1</code> Array (2- or 3-dimensional) First vector to calculate cross product of. <code>vec2</code> Array (2- or 3-dimensional) Second vector to calculate cross product of."},{"location":"general/vector-math/#returns_2","title":"Returns","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"general/vector-math/#div","title":"div()","text":"<p><code>div(vec, amount)</code></p>"},{"location":"general/vector-math/#description_3","title":"Description","text":"<p>Divides every element of the vector by the amount.</p>"},{"location":"general/vector-math/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array The vector to divide <code>amount</code> Number The amount to divide by"},{"location":"general/vector-math/#returns_3","title":"Returns","text":"<p>Array</p>"},{"location":"general/vector-math/#dot","title":"dot()","text":"<p><code>dot(vec1, vec2)</code></p>"},{"location":"general/vector-math/#description_4","title":"Description","text":"<p>Returns the dot (inner) product of the vector arguments.</p>"},{"location":"general/vector-math/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>vec1</code> Array First vector to calculate dot product of. <code>vec2</code> Array Second vector to calculate dot product of."},{"location":"general/vector-math/#returns_4","title":"Returns","text":"<p>Number</p>"},{"location":"general/vector-math/#length","title":"length()","text":"<p><code>length(vec[, point2])</code></p>"},{"location":"general/vector-math/#description_5","title":"Description","text":"<p>Returns the length of vector <code>vec</code>.</p> <p>If a second argument is provided, instead treats the first argument as a point and returns the distance between the two points.</p> <p>Tip</p> <p>Using <code>length()</code> with two arguments is the same as <code>length(sub(vec, point2))</code>.</p>"},{"location":"general/vector-math/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array The vector to normalize, or the first point to measure from. <code>point2</code> Array Optional. The second point to measure to."},{"location":"general/vector-math/#returns_5","title":"Returns","text":"<p>Number</p>"},{"location":"general/vector-math/#example_2","title":"Example","text":"<p>For example, add this expression to the Focus Distance property of a camera to lock the focal plane to the camera's point of interest so that the point of interest is in focus:</p> <pre><code>length(position, pointOfInterest)\n</code></pre>"},{"location":"general/vector-math/#lookat","title":"lookAt()","text":"<p><code>lookAt(fromPoint, atPoint)</code></p>"},{"location":"general/vector-math/#description_6","title":"Description","text":"<p>Orients a layer to look at a given point, from a given point.</p> <p>The return value can be used as an expression for the Orientation property, making the z-axis of the layer point at atPoint.</p> <p>This method is especially useful for cameras and lights.</p> <p>Tip</p> <p>If you use this expression on a camera, turn off auto-orientation.</p>"},{"location":"general/vector-math/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>fromPoint</code> Array (3-dimensional) The location (in world space) of the layer to orient. <code>atPoint</code> Array (3-dimensional) The point (in world space) you want to point the layer at."},{"location":"general/vector-math/#returns_6","title":"Returns","text":"<p>Array (3-dimensional)</p>"},{"location":"general/vector-math/#example_3","title":"Example","text":"<p>This expression on the Orientation property of a spot light makes the light point at the anchor point of layer number 1 in the same composition:</p> <pre><code>lookAt(position, thisComp.layer(1).position)\n</code></pre>"},{"location":"general/vector-math/#mul","title":"mul()","text":"<p><code>mul(vec, amount)</code></p>"},{"location":"general/vector-math/#description_7","title":"Description","text":"<p>Multiplies every element of the vector by the amount.</p>"},{"location":"general/vector-math/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array The vector to multiply <code>amount</code> Number The amount to multiply by"},{"location":"general/vector-math/#returns_7","title":"Returns","text":"<p>Array</p>"},{"location":"general/vector-math/#normalize","title":"normalize()","text":"<p><code>normalize(vec)</code></p>"},{"location":"general/vector-math/#description_8","title":"Description","text":"<p>Normalizes the vector so that its length is <code>1.0</code>.</p> <p>Using the normalize method is a short way of performing the operation <code>div(vec, length(vec))</code>.</p>"},{"location":"general/vector-math/#parameters_8","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array The vector to normalize"},{"location":"general/vector-math/#returns_8","title":"Returns","text":"<p>Array</p>"},{"location":"general/vector-math/#sub","title":"sub()","text":"<p><code>sub(vec1, vec2)</code></p>"},{"location":"general/vector-math/#description_9","title":"Description","text":"<p>Subtracts two vectors.</p>"},{"location":"general/vector-math/#parameters_9","title":"Parameters","text":"Parameter Type Description <code>vec1</code> Array The first vector <code>vec2</code> Array The second vector"},{"location":"general/vector-math/#returns_9","title":"Returns","text":"<p>Array</p>"},{"location":"introduction/changelog/","title":"Changelog","text":"<p>What's new and changed for expressions?</p>"},{"location":"introduction/changelog/#after-effects-250-october-2024","title":"After Effects 25.0 (October 2024)","text":"<p>Added many new text style properties and methods for both characters and paragraphs, as well as the ability to control per-character styling through expressions.</p> <ul> <li>New attributes of .sourceText:<ul> <li>Added: SourceText.isPointText</li> <li>Added: SourceText.isParagraphText</li> <li>Added: SourceText.isHorizontalText</li> <li>Added: SourceText.isVerticalText</li> </ul> </li> <li>New per-character style properties and methods:<ul> <li>Added: TextStyle.replaceText()</li> <li>Added: TextStyle.baselineDirection</li> <li>Added: TextStyle.setBaselineDirection()</li> <li>Added: TextStyle.baselineOption</li> <li>Added: TextStyle.setBaselineOption()</li> <li>Added: TextStyle.digitSet</li> <li>Added: TextStyle.setDigitSet()</li> <li>Added: TextStyle.isLigature</li> <li>Added: TextStyle.setLigature()</li> <li>Added: TextStyle.tsume</li> <li>Added: TextStyle.setTsume()</li> <li>Added: TextStyle.verticalScaling</li> <li>Added: TextStyle.setVerticalScaling()</li> <li>Added: TextStyle.horizontalScaling</li> <li>Added: TextStyle.setHorizontalScaling()</li> <li>Added: TextStyle.lineJoin</li> <li>Added: TextStyle.setLineJoin()</li> </ul> </li> <li>New paragraph style properties and methods:<ul> <li>Added: TextStyle.direction</li> <li>Added: TextStyle.setDirection()</li> <li>Added: TextStyle.isEveryLineComposer</li> <li>Added: TextStyle.setEveryLineComposer()</li> <li>Added: TextStyle.firstLineIndent</li> <li>Added: TextStyle.setFirstLineIndent()</li> <li>Added: TextStyle.isHangingRoman</li> <li>Added: TextStyle.setHangingRoman()</li> <li>Added: TextStyle.justification</li> <li>Added: TextStyle.setJustification()</li> <li>Added: TextStyle.leadingType</li> <li>Added: TextStyle.setLeadingType()</li> <li>Added: TextStyle.leftMargin</li> <li>Added: TextStyle.setLeftMargin()</li> <li>Added: TextStyle.rightMargin</li> <li>Added: TextStyle.setRightMargin()</li> <li>Added: TextStyle.spaceAfter</li> <li>Added: TextStyle.setSpaceAfter()</li> <li>Added: TextStyle.spaceBefore</li> <li>Added: TextStyle.setSpaceBefore()</li> </ul> </li> <li>Existing style methods updated to allow per-character styles:<ul> <li>Changed: TextStyle.setFontSize()</li> <li>Changed: TextStyle.setFont()</li> <li>Changed: TextStyle.setFauxBold()</li> <li>Changed: TextStyle.setFauxItalic()</li> <li>Changed: TextStyle.setAllCaps()</li> <li>Changed: TextStyle.setSmallCaps()</li> <li>Changed: TextStyle.setTracking()</li> <li>Changed: TextStyle.setLeading()</li> <li>Changed: TextStyle.setAutoLeading()</li> <li>Changed: TextStyle.setBaselineShift()</li> <li>Changed: TextStyle.setApplyFill()</li> <li>Changed: TextStyle.setFillColor()</li> <li>Changed: TextStyle.setApplyStroke()</li> <li>Changed: TextStyle.setStrokeColor()</li> <li>Changed: TextStyle.setStrokeWidth()</li> </ul> </li> </ul>"},{"location":"introduction/changelog/#after-effects-177-feb-2021","title":"After Effects 17.7 (Feb 2021)","text":"<ul> <li>Fixed: An issue where expression edits made in the Graph Editor were not applied consistently.</li> </ul>"},{"location":"introduction/changelog/#after-effects-176-jan-2021","title":"After Effects 17.6 (Jan 2021)","text":"<ul> <li>Fixed: An issue that could cause an expression to be replaced instead of appending when using expression or property pick-whip.</li> </ul>"},{"location":"introduction/changelog/#after-effects-1712-jul-2020","title":"After Effects 17.1.2 (Jul 2020)","text":"<ul> <li>Fixed: An issue where Markers could not be referenced by name in the JavaScript Expressions Engine.</li> </ul>"},{"location":"introduction/changelog/#after-effects-171-may-19-2020","title":"After Effects 17.1 (May 19 2020)","text":"<ul> <li>Fixed: An issue with Expression editor to auto-complete 'timeToFrames' function.</li> </ul>"},{"location":"introduction/changelog/#after-effects-1705-mar-2020","title":"After Effects 17.0.5 (Mar 2020)","text":"<ul> <li>Fixed: An issue where the Link Focus to Layer command produced an expression that did not work with the JavaScript expression engine.</li> </ul>"},{"location":"introduction/changelog/#after-effects-1702-jan-2020","title":"After Effects 17.0.2 (Jan 2020)","text":"<ul> <li>Fixed: An issue where wrong line numbers would be displayed related to errors in JavaScript expressions.</li> </ul>"},{"location":"introduction/changelog/#after-effects-170-jan-24-2020","title":"After Effects 17.0 (Jan 24 2020)","text":"<ul> <li>Implemented Dropdown Menu Expression Control</li> <li>Expression Editor improvements:<ul> <li>You can now use the new scrolling functionality to prevent the scroll from adjusting incorrectly when the box is resized by typing the return character.</li> <li>Prevent numbers from matching in an autocomplete list if the variable begins with a number. Smarter autocomplete prevents from overriding closing brackets and quotes.</li> <li>You can now scale font size for Hi-DPI displays.</li> <li>Graph editor now commits changes in preferences for all the open graph editors.</li> <li>If you enable syntax highlight, the folding icon buttons in the UI now respect the default and background color, or the line numbers color and background color.</li> </ul> </li> <li>Expression performance improvements:<ul> <li>After Effects now attempts to detect an expression that does not change throughout a comp and calculates the expression only once. Load your favorite expression-filled comp and experience the improved performance.</li> <li>Any expression using posterizeTime() now calculates only once for the entire comp, not on every frame.</li> </ul> </li> <li>Added: Extended expressions access to Text properties.<ul> <li>Added: Text.Font...</li> <li>Added: Source Text</li> <li>Added: Text Style</li> </ul> </li> </ul>"},{"location":"introduction/changelog/#after-effects-1613-sep-2019","title":"After Effects 16.1.3 (Sep 2019)","text":"<ul> <li>Fixed: Indentation of curly braces on new lines could be incorrect in the Expressions editor.</li> </ul>"},{"location":"introduction/changelog/#after-effects-1612-june-2019","title":"After Effects 16.1.2 (June 2019)","text":"<ul> <li>Fixed: After Effects crashes when you close a project that has an expression containing an error.</li> <li>Fixed: Expression error messages could be truncated in the error ribbon if there were multiple lines of error text to show.</li> <li>Fixed: The property, this_Layer had stopped working when using the Legacy ExtendScript expression engine.</li> <li>Fixed: Crash when switching the project level expression engine from JavaScript to Legacy ExtendScript.</li> <li>Fixed: Crash with expressions that contain calls to Date.toLocaleString().</li> <li>Fixed: Crash when editing expressions in the Graph Editor expression field when AutoComplete is disabled.</li> </ul>"},{"location":"introduction/changelog/#after-effects-161-cc-19-apr-2-2019","title":"After Effects 16.1 (CC 19) (Apr 2 2019)","text":"<ul> <li>Implemented new expression editor</li> <li>Fixed: The JavaScript expressions engine does not generate the same random number results as the Legacy ExtendScript engine.</li> <li>Fixed: When an expression references the name of a layer in a string or in a Source Text property, the name of the layer is not returned. Instead, it returns [Object].</li> <li>Fixed: The sampleImage() expression method returns the wrong value if the post-expression value of the property is read by a ScriptUI panel.</li> <li>Fixed: Applying the createPath() expression via the Expression Language menu autofills the (is_Closed) parameter as deprecated snake case instead of camel caseisClosed.</li> <li>Fixed: Renaming an effect that is referenced by an expression causes the expression to incorrectly update references to that effect properties when those properties have the same name as the effect.</li> <li>Fixed: The Link Focus Distance to Layer, Link Focus Distance to Point of Interest, Create Stereo 3D Rig, and Create Orbit Null commands create expressions that are incompatible with the JavaScript expression engine.</li> <li>Fixed: Specific complex, multi-composition expressions cause fast flickering of the expression error warning banner and icons. Note that to fix this, there is a small slowdown in expression evaluation speed for these expressions.</li> </ul>"},{"location":"introduction/changelog/#after-effects-160-cc-19-oct-15-2018","title":"After Effects 16.0 (CC 19) (Oct 15 2018)","text":"<ul> <li>Implemented new Javascript engine</li> <li>Added: hexToRgb</li> <li>Added: marker protectedRegion property</li> </ul>"},{"location":"introduction/changelog/#after-effects-1512-jul-16-2018","title":"After Effects 15.1.2 (Jul 16 2018)","text":"<ul> <li>Fixed: If your project contains multiple master properties by the same name, the expressions that refer to the master properties evaluate incorrectly.</li> <li>Fixed: The Property Link pick whip incorrectly writes a self-referential expression for the other selected properties.</li> </ul>"},{"location":"introduction/changelog/#after-effects-151-apr-3-2018","title":"After Effects 15.1 (Apr 3 2018)","text":"<ul> <li>Added: Property Link pick whip</li> <li>Added: Support for custom expression function libraries</li> <li>Added: Expression access to Project<ul> <li>Added: Project.fullPath</li> <li>Added: Project.bitsPerChannel</li> <li>Added: Project.linearBlending</li> </ul> </li> </ul>"},{"location":"introduction/changelog/#after-effects-150-cc-oct-18-2017","title":"After Effects 15.0 (CC) (Oct 18 2017)","text":"<ul> <li>Added: Expression access to data in JSON files<ul> <li>Added: footage sourceText attribute</li> <li>Added: footage sourceData attribute</li> <li>Added: footage dataValue method</li> <li>Added: footage dataKeyCount method</li> <li>Added: footage dataKeyTimes method</li> <li>Added: footage dataKeyValues method</li> </ul> </li> <li>Added: Expression access to path points on masks, Bezier shapes, and brush strokes<ul> <li>Added: path points method</li> <li>Added: path inTangents method</li> <li>Added: path outTangents method</li> <li>Added: path isClosed method</li> <li>Added: path pointOnPath method</li> <li>Added: path tangentOnPath method</li> <li>Added: path normalOnPath method</li> <li>Added: path createPath method</li> </ul> </li> </ul>"},{"location":"introduction/changelog/#after-effects-136-cc-2015-nov-30-2015","title":"After Effects 13.6 (CC 2015) (Nov 30 2015)","text":"<ul> <li>Improved performance of expressions on time-remapped layers. This also reduces rendering time for audio on time-remapped layers with expressions.</li> <li>Fixed: Changing the source text of a text layer no longer causes expressions to fail when the name of the text layer was referenced.</li> <li>Fixed: After Effects no longer crashes when the graph editor is displayed while processing an time remapping expression.</li> </ul>"},{"location":"introduction/changelog/#after-effects-135-cc-2015-jun-15-2015","title":"After Effects 13.5 (CC 2015) (Jun 15 2015)","text":"<ul> <li>More efficient expression evaluation</li> <li>Added: Expression warning banner</li> </ul>"},{"location":"introduction/changelog/#after-effects-132-cc-20142-dec-16-2014","title":"After Effects 13.2 (CC 2014.2) (Dec 16 2014)","text":"<ul> <li>Added: sourceRectAtTime() method</li> <li>Fixed: sampleImage() in an expression no longer disables multiprocessing</li> </ul>"},{"location":"introduction/changelog/#after-effects-121-cc-sep-8-2013","title":"After Effects 12.1 (CC) (Sep 8 2013)","text":"<ul> <li>Added iris and highlight properties for camera layers to the expression language menu</li> <li> <ul> <li>Added: Camera.irisShape</li> <li>Added: Camera.irisRotation</li> <li>Added: Camera.irisRoundness</li> <li>Added: Camera.irisAspectRatio</li> <li>Added: Camera.irisDiffractionFringe</li> <li>Added: Camera.highlightGain</li> <li>Added: Camera.highlightThreshold</li> <li>Added: Camera.highlightSaturation</li> </ul> </li> </ul>"},{"location":"introduction/changelog/#after-effects-105-cs55-apr-11-2011","title":"After Effects 10.5 (CS5.5) (Apr 11 2011)","text":"<ul> <li>Added: Footage.ntscDropFrame</li> <li>Added: ntscDropFrame argument to timeToCurrentFormat()</li> <li>Added: Layer.sourceTime()</li> </ul>"},{"location":"introduction/changelog/#after-effects-55-jan-7-2002","title":"After Effects 5.5 (Jan 7 2002)","text":"<ul> <li>Added: Looping via expressions</li> <li>Added: Expression controllers</li> </ul>"},{"location":"introduction/changelog/#after-effects-50-apr-2001","title":"After Effects 5.0 (Apr 2001)","text":"<ul> <li>Expressions first added</li> </ul>"},{"location":"introduction/examples/","title":"Examples","text":"<p>Note</p> <p>Many of the examples in this section are based on expressions provided by Dan Ebberts.</p>"},{"location":"introduction/examples/#get-this-projects-aep-name-ae-151-only","title":"Get this project's AEP name (AE 15.1+ only)","text":"<p>While there is no method to directly access your AEP's name, you CAN get the full path to the AEP.</p> <p>With some string manipulation, you can derive the aep name from this:</p> <pre><code>var aepName = thisProject.fullPath.split($.os.indexOf(\"Windows\") &gt; -1 ? \"\\\\\" : \"/\").pop();\n</code></pre> <p>If you wanted to write \"Unsaved\" in that case, you can use the following expression:</p> <pre><code>var aepName = thisProject.fullPath.split($.os.indexOf(\"Windows\") &gt; -1 ? \"\\\\\" : \"/\").pop();\naepName = aepName === \"\" ? \"Unsaved\" : aepName;\n</code></pre>"},{"location":"introduction/examples/#make-a-layer-revolve-in-a-circle","title":"Make a layer revolve in a circle","text":"<p>You can create an expression without using properties from other layers. For example, you can make a layer revolve in a perfect circle.</p> <ol> <li>Select a layer, press P to reveal its Position property in the Timeline panel, and Alt-click (Windows) or Option-click (Mac OS) the stopwatch to the left of the property name.</li> <li>Enter the following in the expression field:     <pre><code>[(thisComp.width/2), (thisComp.height/2)] + [Math.sin(time)*50, -Math.cos(time)*50]\n</code></pre></li> </ol>"},{"location":"introduction/examples/#rotate-the-hands-of-a-clock","title":"Rotate the hands of a clock","text":"<p>You can use the pick whip to link rotation values between layers to animate the hands on a clock\u2014as the hour hand moves from hour to hour, the minute hand rotates the full circumference of the clock face. This type of animation would take a long time to create if you had to set each keyframe for both hand layers, but with the pick whip, you can do it in a matter of minutes.</p> <ol> <li>Import or create two long, narrow solid-color layers: an hour hand and a minute hand.</li> <li>Set the anchor points at the ends of the layers.</li> <li>Move the layers so that the anchor points are at the center of the composition.</li> <li>Set Rotation keyframes for the hour hand.</li> <li>Select the Rotation property for the minute hand and choose <code>Animation &gt; Add Expression.</code></li> <li>Drag the pick whip to the Rotation property for the hour hand. The following expression appears:     <pre><code>thisComp.layer(\"hour hand\").rotation\n</code></pre></li> <li>To make the minute hand rotate 12 times as fast as the hour hand, add <code>* 12</code> at the end of the expression as follows:     <pre><code>thisComp.layer(\"hour hand\").rotation * 12\n</code></pre></li> </ol>"},{"location":"introduction/examples/#position-one-layer-between-two-others","title":"Position one layer between two others","text":"<p>This example expression positions and maintains one layer at a balanced distance between two other layers.</p> <ol> <li>Start with three layers.</li> <li>Animate the positions of the first two layers in the Timeline panel.</li> <li>Select the third layer, press P to reveal the Position property, and Alt-click (Windows) or Option-click (Mac OS) the stopwatch button to the left of the property name.</li> <li>Enter the following in the expression field:     <pre><code>(thisComp.layer(1).position + thisComp.layer(2).position)/2\n</code></pre></li> </ol>"},{"location":"introduction/examples/#create-a-trail-of-images","title":"Create a trail of images","text":"<p>This example expression instructs a layer to be at the same position as the next higher layer in the Timeline panel, but delayed by a specified amount of time (in this case, 0.5 seconds). You can set similar expressions for the other geometric properties.</p> <ol> <li>Start with two solid-color layers that are scaled to approximately 30% of the composition size. (See Solid-color layers and solid-color footage items.)</li> <li>Animate the position of the first layer.</li> <li>Select the second layer, press P to reveal the Position property, and Alt-click (Windows) or Option-click (Mac OS) the stopwatch button to the left of the property name.</li> <li>Enter the following in the expression field:     <pre><code>thisComp.layer(thisLayer, -1).position.valueAtTime(time - .5)\n</code></pre></li> <li>Duplicate the last layer five times by selecting it and pressing Ctrl+D (Windows) or Command+D (Mac OS) five times.</li> </ol> <p>All layers follow the same path, and each is delayed 0.5 seconds from the previous.</p> <p>Note</p> <p>Dan Ebberts provides more examples and techniques for creating trails of images on his MotionScript.</p>"},{"location":"introduction/examples/#create-a-bulge-between-two-layers","title":"Create a bulge between two layers","text":"<p>This example expression synchronizes the Bulge Center argument of the Bulge effect in one layer with the position of another layer. For example, you can create an effect that looks like a magnifying glass moving over a layer, with the contents under the magnifying glass bulging as the lens (that is, the overlying layer) moves. This expression uses the fromWorld method, which makes the expression work correctly regardless of whether you move the magnifying glass layer or the underlying layer. You can rotate or scale the underlying layer, and the expression stays intact.</p> <p>You can also use other effects, such as Ripple, with this expression.</p> <ol> <li>Start with two layers. Make one layer a magnifying glass or similar object with a hole in the middle and name it Magnifier. (See Creating layers.)</li> <li>Animate the position of the magnifying glass layer. (See Motion paths.)</li> <li>Apply the Bulge effect to the other layer. (See Apply an effect or animation preset.)</li> <li>Select the Bulge Center property of the Bulge effect in the Timeline panel and choose Animation &gt; Add Expression, or Alt-click (Windows) or Option-click (Mac OS) the stopwatch button for the property.</li> <li>Select the default expression text and type the following:     <pre><code>fromWorld(thisComp.layer(\"Magnifier\").position)\n</code></pre></li> </ol>"},{"location":"introduction/examples/#fade-opacity-of-a-3d-layer-based-on-distance-from-camera","title":"Fade opacity of a 3D layer based on distance from camera","text":"<p>Apply the following expression to the Opacity property of a 3D layer:</p> <pre><code>startFade = 500; // Start fade 500 pixels from camera.\nendFade = 1500;  // End fade 1500 pixels from camera.\n\ntry { // Check whether there's a camera\nC = thisComp.activeCamera.toWorld([0,0,0]);\n} catch (err) { // No camera, so assume 50mm\nw = thisComp.width * thisComp.pixelAspect;\nz = (w/2)/Math.tan(degreesToRadians(19.799));\nC = [0,0,-z];\n}\n\nP = toWorld(anchorPoint);\nd = length(C,P);\n\nlinear(d,startFade,endFade,100,0)\n</code></pre> <p>The fade starts at a distance of <code>500</code> pixels from the camera and is complete at <code>1500</code> pixels from the camera. The linear interpolation method is used to map distance values to opacity values.</p>"},{"location":"introduction/examples/#make-a-3d-layer-invisible-if-facing-away-from-camera","title":"Make a 3D layer invisible if facing away from camera","text":"<p>Apply the following expression to the Opacity property of a 3D layer:</p> <pre><code>if (toCompVec([0, 0, 1])[2] &gt; 0 ) value else 0\n</code></pre> <p>Note</p> <p>Dan Ebberts explains this expression on his site.</p>"},{"location":"introduction/examples/#flip-layer-horizontally-if-facing-away-from-camera","title":"Flip layer horizontally if facing away from camera","text":"<p>Apply the following expression to the Scale property of a 3D layer:</p> <pre><code>if (toCompVec([0, 0, 1])[2] &gt; 0 ) value else [-value[0], value[1], value[2]]\n</code></pre>"},{"location":"introduction/examples/#animate-scale-at-each-layer-marker","title":"Animate scale at each layer marker","text":"<p>Apply the following expression to a Scale property to make a layer wobble at each marker:</p> <pre><code>n = 0;\nt = 0;\n\nif (marker.numKeys &gt; 0){\n    n = marker.nearestKey(time).index;\n    if (marker.key(n).time &gt; time) n--;\n}\n\nif (n &gt; 0) t = time - marker.key(n).time;\n\namp = 15;\nfreq = 5;\ndecay = 3.0;\n\nangle = freq * 2 * Math.PI * t;\nscaleFact = (100 + amp * Math.sin(angle) / Math.exp(decay * t)) / 100;\n[value[0] * scaleFact, value[1] / scaleFact];\n</code></pre>"},{"location":"introduction/examples/#start-or-stop-wiggle-at-specific-time","title":"Start or stop wiggle at specific time","text":"<p>You can use any expression in place of the wiggle expression used here, to begin and end the influence of any expression at a specific time.</p> <p>Apply the following expression to a property to wiggle it beginning at time 2 seconds:</p> <pre><code>timeToStart = 2;\nif (time &gt; timeToStart) {\nwiggle(3,25);\n} else {\n    value;\n}\n</code></pre> <p>Apply the following expression to a property to stop wiggling it at time 4 seconds:</p> <pre><code>timeToStop = 4;\n\nif (time &gt; timeToStop) {\n        value;\n} else {\n        wiggle(3,25);\n}\n</code></pre> <p>Apply the following expression to a property to start wiggling it at time 2 seconds and stop wiggling it at time 4 seconds:</p> <pre><code>timeToStart = 2;\ntimeToStop = 4;\n\nif ((time &gt; timeToStart) &amp;&amp; (time &lt; timeToStop)) {\n    wiggle(3,25);\n} else {\n    value;\n}\n</code></pre>"},{"location":"introduction/examples/#match-camera-focal-plane-to-another-layer","title":"Match camera focal plane to another layer","text":"<p>Apply the following expression to the Focus Distance property of a camera layer to have its focus distance match the distance to the anchor point of a layer named \"target\":</p> <pre><code>target = thisComp.layer(\"target\");\nV1 = target.toWorld(target.anchorPoint) - toWorld([0,0,0]);\nV2 = toWorldVec([0,0,1]);\ndot(V1,V2);\n</code></pre> <p>Note</p> <p>Dan Ebberts explains this expression example in detail on his website.</p>"},{"location":"introduction/resources/","title":"Resources","text":"<p>Note</p> <p>Have suggestions for new resources to add here? Please reach out! Happy to add your site, book, training channel, etc.</p> <p>Dan Ebberts provides example expressions and tutorials for learning how to work with expressions on his MotionScript website. For example, Dan provides an excellent page about collision detection.</p> <p>The AE Enhancers forum provides many examples and much useful information about expressions, as well as scripts and animation presets. In this post on the AE Enhancers forum, Paul Tuersley provides a tutorial and example project that show how to use expressions to animate several layers in a swarm.</p> <p>Rick Gerard provides an example on Rick's site that demonstrates rolling a square object along a floor so that the sides stay in contact with the floor plane.</p> <p>Chris Zwar provides an example project on chriszwar.com for automatically arranging still images or videos into a grid (like a video wall). You can easily adjust position and spacing with sliders that are connected to a system of expressions. There are three compositions in the project\u2014one for stills, one for videos, and one to create an auto-storyboard in which a video is sampled at user-defined intervals and aligned into a grid.</p> <p>JJ Gifford's website provides several example projects that demonstrate how to use expressions.</p>"},{"location":"layer/general/","title":"Layer General","text":"<p><code>thisLayer</code></p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer</code> as a sample on how to call these items, however note that any method that returns a Layer will work.</p>"},{"location":"layer/general/#attributes","title":"Attributes","text":""},{"location":"layer/general/#layeractive","title":"Layer.active","text":"<p><code>thisLayer.active</code></p>"},{"location":"layer/general/#description","title":"Description","text":"<p>Returns <code>true</code> if the Video switch is on for the layer and the current time is in the range from the In point of the layer to the Out point of the layer; <code>false</code> otherwise.</p>"},{"location":"layer/general/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"layer/general/#layeraudioactive","title":"Layer.audioActive","text":"<p><code>thisLayer.audioActive</code></p>"},{"location":"layer/general/#description_1","title":"Description","text":"<p>Returns <code>true</code> if the Audio switch is on for the layer and the current time is in the range from the In point of the layer to the Out point of the layer; <code>false</code> otherwise.</p>"},{"location":"layer/general/#type_1","title":"Type","text":"<p>Boolean</p>"},{"location":"layer/general/#layerenabled","title":"Layer.enabled","text":"<p><code>thisLayer.enabled</code></p>"},{"location":"layer/general/#description_2","title":"Description","text":"<p>Whether the layer is enabled.</p>"},{"location":"layer/general/#type_2","title":"Type","text":"<p>Boolean. <code>true</code> if the Video switch is on for the layer; <code>false</code> otherwise.</p>"},{"location":"layer/general/#layerhasaudio","title":"Layer.hasAudio","text":"<p><code>thisLayer.hasAudio</code></p>"},{"location":"layer/general/#description_3","title":"Description","text":"<p>Whether the layer has audio.</p>"},{"location":"layer/general/#type_3","title":"Type","text":"<p>Boolean. <code>true</code> if the layer has audio or <code>false</code> if it doesn't.</p>"},{"location":"layer/general/#layerhasparent","title":"Layer.hasParent","text":"<p><code>thisLayer.hasParent</code></p>"},{"location":"layer/general/#description_4","title":"Description","text":"<p>Use the <code>hasParent</code> attribute to determine if a layer has a parent layer. You can use this attribute even if the layer has no parent layer at present.</p>"},{"location":"layer/general/#type_4","title":"Type","text":"<p>Boolean. <code>true</code> if the layer has a parent, <code>false</code> if it doesn't.</p>"},{"location":"layer/general/#example","title":"Example","text":"<p>The following expression indicates that the layer to which you apply it wiggles based on the position of the parent. If the layer has no parent, then it wiggles based on its own position.</p> <p>If the layer is given a parent later, then the behavior of the layer changes accordingly:</p> <pre><code>idx = index;\nif (hasParent) {\n        idx = parent.index;\n}\nthisComp.layer(idx).position.wiggle(5,20)\n</code></pre>"},{"location":"layer/general/#layerhasvideo","title":"Layer.hasVideo","text":"<p><code>thisLayer.hasVideo</code></p>"},{"location":"layer/general/#description_5","title":"Description","text":"<p>Whether the layer has video.</p>"},{"location":"layer/general/#type_5","title":"Type","text":"<p>Boolean. <code>true</code> if the layer has audio or <code>false</code> if it doesn't.</p>"},{"location":"layer/general/#layerheight","title":"Layer.height","text":"<p><code>thisLayer.height</code></p>"},{"location":"layer/general/#description_6","title":"Description","text":"<p>Returns the height of the layer, in pixels.</p> <p>If the layer has a source, this is the same as either the source comp height or the source footage height (as applicable).</p>"},{"location":"layer/general/#type_6","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#layerindex","title":"Layer.index","text":"<p><code>thisLayer.index</code></p>"},{"location":"layer/general/#description_7","title":"Description","text":"<p>Returns the index number of the layer in the composition.</p>"},{"location":"layer/general/#type_7","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#layerinpoint","title":"Layer.inPoint","text":"<p><code>thisLayer.inPoint</code></p>"},{"location":"layer/general/#description_8","title":"Description","text":"<p>Returns the In point of the layer, in seconds.</p> <p>Note</p> <p>In general, the value of outPoint is greater than the value of inPoint. However, if a layer is reversed in time, the value of inPoint is greater than the value of outPoint. Similarly, the value of startTime can be greater than the value of inPoint.</p>"},{"location":"layer/general/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#layeroutpoint","title":"Layer.outPoint","text":"<p><code>thisLayer.outPoint</code></p>"},{"location":"layer/general/#description_9","title":"Description","text":"<p>Returns the Out point of the layer, in seconds.</p>"},{"location":"layer/general/#type_9","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#layerparent","title":"Layer.parent","text":"<p><code>thisLayer.parent</code></p>"},{"location":"layer/general/#description_10","title":"Description","text":"<p>Returns the parent Layer object of the layer, if it has one.</p> <p>You can check whether a layer has a parent with the <code>Layer.hasParent</code> attribute.</p>"},{"location":"layer/general/#type_10","title":"Type","text":"<p>Layer, Light, or Camera object</p>"},{"location":"layer/general/#example_1","title":"Example","text":"<pre><code>position[0] + parent.width\n</code></pre>"},{"location":"layer/general/#layerstarttime","title":"Layer.startTime","text":"<p><code>thisLayer.startTime</code></p>"},{"location":"layer/general/#description_11","title":"Description","text":"<p>Returns the start time of the layer, in seconds.</p>"},{"location":"layer/general/#type_11","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#layerwidth","title":"Layer.width","text":"<p><code>thisLayer.width</code></p>"},{"location":"layer/general/#description_12","title":"Description","text":"<p>Returns the width of the layer, in pixels.</p> <p>If the layer has a source, this is the same as either the source comp width or the source footage width (as applicable).</p>"},{"location":"layer/general/#type_12","title":"Type","text":"<p>Number</p>"},{"location":"layer/general/#methods","title":"Methods","text":""},{"location":"layer/general/#layersampleimage","title":"Layer.sampleImage()","text":"<p><code>thisLayer.sampleImage(point[, radius=[0.5, 0.5]][, postEffect=true][, t=time])</code></p>"},{"location":"layer/general/#description_13","title":"Description","text":"<p>Samples the color and alpha channel values of a layer and returns the average alpha-weighted value of the pixels within the specified distance of the point as an array: <code>[red, green, blue, alpha]</code>.</p> <p>Note</p> <p>Using <code>sampleImage()</code> in an expression no longer disables multiprocessing.</p>"},{"location":"layer/general/#parameters","title":"Parameters","text":"Parameter Type Description <code>point</code> 2-dimensional Number array Required. The point at which to sample, im layer space. The point <code>[0, 0]</code> is the center of the upper-left pixel in the layer. <code>radius</code> 2-dimensional Number array Optional. Specifies the horizontal and vertical distance from the sample center to the edges of the sampled rectangle. The default value samples one pixel. Defaults to <code>[0.5, 0.5]</code>. <code>postEffect</code> Boolean Optional. If <code>true</code>, to sample the values after layer masks and effects directly applied to the layer have been rendered. If <code>false</code>, sample values before layer masks and effects. Defaults to <code>true</code>. <code>t</code> Number Optional. Defaults to <code>time</code>."},{"location":"layer/general/#type_13","title":"Type","text":"<p>Array (4-dimensional)</p>"},{"location":"layer/general/#examples","title":"Examples","text":"<p>This samples a rectangle 4 pixels wide and 3 pixels high, centered around a point 100 pixels down and to the right of the upper-left corner of the layer:</p> <pre><code>thisComp.layer(1).sampleImage([100, 100], [2, 1.5])\n</code></pre>"},{"location":"layer/layer-space-transforms/","title":"Layer Space Transforms","text":"<p><code>thisLayer</code></p> <p>Use layer space transform methods to transform values from one space to another, such as from layer space to world space.</p> <p>Composition (comp) and world space are the same for 2D layers. For 3D layers, however, composition space is relative to the active camera, and world space is independent of the camera.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer</code> as a sample on how to call these items, however note that any method that returns a Layer will work.</p>"},{"location":"layer/layer-space-transforms/#from-to-methods","title":"\"From\" &amp; \"To\" Methods","text":"<p>The <code>from</code> methods transform values from the named space (composition or world) to the layer space.</p> <p>The <code>to</code> methods transform values from the layer space to the named space (composition or world). Each transform method takes an optional argument to determine the time at which the transform is computed; however, you can almost always use the current (default) time.</p>"},{"location":"layer/layer-space-transforms/#vec-methods","title":"\"Vec\" Methods","text":"<p>Use <code>Vec</code> transform methods when transforming a direction vector, such as the difference between two position values.</p> <p>Use the plain (non-<code>Vec</code>) transform methods when transforming a point, such as position.</p>"},{"location":"layer/layer-space-transforms/#methods","title":"Methods","text":""},{"location":"layer/layer-space-transforms/#tocomp","title":"toComp()","text":"<p><code>thisLayer.toComp(point[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description","title":"Description","text":"<p>Transforms a point from layer space to composition space.</p>"},{"location":"layer/layer-space-transforms/#parameters","title":"Parameters","text":"Parameter Type Description <code>point</code> Array (2- or 3-dimensional) The point to convert <code>t</code> Number Optional. The time at which to sample the point at. Defaults to <code>time</code>."},{"location":"layer/layer-space-transforms/#type","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#fromcomp","title":"fromComp()","text":"<p><code>thisLayer.fromComp(point[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_1","title":"Description","text":"<p>Transforms a point from composition space to layer space. The resulting point in a 3D layer may have a nonzero value even though it is in layer space.</p>"},{"location":"layer/layer-space-transforms/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>point</code> Array (2- or 3-dimensional) The point to convert <code>t</code> Number Optional. The time at which to sample the point at. Defaults to <code>time</code>."},{"location":"layer/layer-space-transforms/#type_1","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example","title":"Example","text":"<pre><code>fromComp(thisComp.layer(2).position)\n</code></pre>"},{"location":"layer/layer-space-transforms/#toworld","title":"toWorld()","text":"<p><code>thisLayer.toWorld(point[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_2","title":"Description","text":"<p>Transforms a point from layer space to view-independent world space.</p> <p>Tip</p> <p>Dan Ebberts provides an expression on his MotionScript website that uses the <code>toWorld</code> method to auto-orient a layer along only one axis. This is useful, for example, for having characters turn from side to side to follow the camera while remaining upright.</p> <p>Tip</p> <p>Rich Young provides a set of expressions on his AE Portal website that use the toWorld method link a camera and light to a layer with the CC Sphere effect.</p>"},{"location":"layer/layer-space-transforms/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>point</code> Array (2- or 3-dimensional) The point to convert <code>t</code> Number Optional. The time at which to sample the point at. Defaults to <code>time</code>."},{"location":"layer/layer-space-transforms/#type_2","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_1","title":"Example","text":"<pre><code>toWorld.effect(\"Bulge\")(\"Bulge Center\")\n</code></pre>"},{"location":"layer/layer-space-transforms/#fromworld","title":"fromWorld()","text":"<p><code>thisLayer.fromWorld(point[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_3","title":"Description","text":"<p>Transforms a point from world space to layer space.</p>"},{"location":"layer/layer-space-transforms/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>point</code> Array (2- or 3-dimensional) The point to convert <code>t</code> Number Optional. The time at which to sample the point at. Defaults to <code>time</code>."},{"location":"layer/layer-space-transforms/#type_3","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_2","title":"Example","text":"<pre><code>fromWorld(thisComp.layer(2).position)\n</code></pre>"},{"location":"layer/layer-space-transforms/#tocompvec","title":"toCompVec()","text":"<p><code>thisLayer.toCompVec(vec[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_4","title":"Description","text":"<p>Transforms a vector from layer space to composition space.</p>"},{"location":"layer/layer-space-transforms/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array (2- or 3-dimensional) <code>t</code> Number"},{"location":"layer/layer-space-transforms/#type_4","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_3","title":"Example","text":"<pre><code>toCompVec([1, 0])\n</code></pre>"},{"location":"layer/layer-space-transforms/#fromcompvec","title":"fromCompVec()","text":"<p><code>thisLayer.fromCompVec(vec[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_5","title":"Description","text":"<p>Transforms a vector from composition space to layer space.</p>"},{"location":"layer/layer-space-transforms/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array (2- or 3-dimensional) <code>t</code> Number"},{"location":"layer/layer-space-transforms/#type_5","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_4","title":"Example:","text":"<p>For a 2D layer:</p> <pre><code>const dir = sub(position, thisComp.layer(2).position);\nfromCompVec(dir)\n</code></pre>"},{"location":"layer/layer-space-transforms/#toworldvec","title":"toWorldVec()","text":"<p><code>thisLayer.toWorldVec(vec[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_6","title":"Description","text":"<p>Transforms a vector from layer space to world space.</p>"},{"location":"layer/layer-space-transforms/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array (2- or 3-dimensional) <code>t</code> Number"},{"location":"layer/layer-space-transforms/#type_6","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_5","title":"Example","text":"<p>Transform two different \"Bulge Center\" properties from the layer space of the layer the effect is applied to, to the world space of the comp the layers live in:</p> <pre><code>const p1 = effect(\"Eye Bulge 1\")(\"Bulge Center\");\nconst p2 = effect(\"Eye Bulge 2\")(\"Bulge Center\");\n\ntoWorld(sub(p1, p2))\n</code></pre>"},{"location":"layer/layer-space-transforms/#fromworldvec","title":"fromWorldVec()","text":"<p><code>thisLayer.fromWorldVec(vec[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_7","title":"Description","text":"<p>Transforms a vector from world space to layer space.</p>"},{"location":"layer/layer-space-transforms/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>vec</code> Array (2- or 3-dimensional) <code>t</code> Number"},{"location":"layer/layer-space-transforms/#type_7","title":"Type","text":"<p>Array (2- or 3-dimensional)</p>"},{"location":"layer/layer-space-transforms/#example_6","title":"Example","text":"<p>Convert layer #2's position from world space to this layer's space:</p> <pre><code>fromWorld(thisComp.layer(2).position)\n</code></pre>"},{"location":"layer/layer-space-transforms/#fromcomptosurface","title":"fromCompToSurface()","text":"<p><code>thisLayer.fromCompToSurface(point[, t=time])</code></p>"},{"location":"layer/layer-space-transforms/#description_8","title":"Description","text":"<p>Projects a point located in composition space to a point on the surface of the layer (zero z-value) at the location where it appears when viewed from the active camera. This method is useful for setting effect control points.</p> <p>Note</p> <p>Use with 3D layers only.</p>"},{"location":"layer/layer-space-transforms/#parameters_8","title":"Parameters","text":"Parameter Type Description <code>point</code> Array (2- or 3-dimensional) The point to convert <code>t</code> Number Optional. The time at which to sample the point at. Defaults to <code>time</code>."},{"location":"layer/layer-space-transforms/#type_8","title":"Type","text":"<p>Array (2-dimensional)</p>"},{"location":"layer/layer/","title":"Layer","text":"<p>As Layers are the foundation of most things in After Effects, this category is large and has been split into smaller pages for various focuses.</p> <p>These pages reflect the organization of the Expression fly-out menu within After Effects.</p> <p>Info</p> <p>Layer is the base class for Camera and Light, so Layer attributes and methods are available when working with those layer types (except when noted).</p> <p>Layer is also a subclass of PropertyGroup, so all methods of PropertyGroup, in addition to those listed in the below pages, are available when working with Layer.</p> <p>Those categories are:</p> <ul> <li>Layer Sub-objects is for items that give you other objects based on the current layer; things like the source (for precomps or footage), effects, masks, sourceRect, etc.</li> <li>Layer General holds general info about the layer; width and height, whether the layer has audio or video, the layer's start and end points, etc. With few exceptions, typically don't change over the duration of the comp.</li> <li>Layer Properties is generally for more dynamic properties; the layer's transform data (position, scale, rotation, etc), its audio or time remap, info about markers, and so on.</li> <li>Layer Space Transforms contains info on how to convert values from one \"space\" to another, such as from layer space to world space.</li> <li>Layer 3D is all about the 3d properties of layers. 3d rotation values, material properties, and more live here.</li> </ul>"},{"location":"layer/properties/","title":"Layer Properties","text":"<p><code>thisLayer</code></p> <p>When you add masks, effects, paint, or text to a layer, After Effects adds new properties to the Timeline panel. There are too many of these properties to list here, so use the pick whip to learn the syntax for referring to them in your expressions.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer</code> as a sample on how to call these items, however note that any method that returns a Layer will work.</p>"},{"location":"layer/properties/#attributes","title":"Attributes","text":""},{"location":"layer/properties/#layeranchorpoint","title":"Layer.anchorPoint","text":"<p><code>thisLayer.anchorPoint</code></p>"},{"location":"layer/properties/#description","title":"Description","text":"<p>Returns the anchor point value of the layer in the coordinate system of the layer (layer space).</p>"},{"location":"layer/properties/#type","title":"Type","text":"<p>Array of Numbers (2- or 3-dimensional)</p>"},{"location":"layer/properties/#layeraudiolevels","title":"Layer.audioLevels","text":"<p><code>thisLayer.audioLevels</code></p>"},{"location":"layer/properties/#description_1","title":"Description","text":"<p>Returns the value of the Audio Levels property of the layer, in decibels. This value is a 2D value; the first value represents the left audio channel, and the second value represents the right. The value is not the amplitude of the audio track of the source material. Instead, it is the value of the Audio Levels property, which may be affected by keyframes.</p>"},{"location":"layer/properties/#type_1","title":"Type","text":"<p>Array of Numbers (2-dimensional)</p>"},{"location":"layer/properties/#layermarker","title":"Layer.marker","text":"<p><code>thisLayer.marker</code></p>"},{"location":"layer/properties/#description_2","title":"Description","text":"<p>Returns a given layer's Marker property.</p>"},{"location":"layer/properties/#type_2","title":"Type","text":"<p>Marker Property</p>"},{"location":"layer/properties/#layername","title":"Layer.name","text":"<p><code>thisLayer.name</code></p>"},{"location":"layer/properties/#description_3","title":"Description","text":"<p>Returns the name of the layer.</p>"},{"location":"layer/properties/#type_3","title":"Type","text":"<p>String</p>"},{"location":"layer/properties/#layeropacity","title":"Layer.opacity","text":"<p><code>thisLayer.opacity</code></p>"},{"location":"layer/properties/#description_4","title":"Description","text":"<p>Returns the opacity value for the layer, expressed as a percentage.</p>"},{"location":"layer/properties/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"layer/properties/#layerposition","title":"Layer.position","text":"<p><code>thisLayer.position</code></p>"},{"location":"layer/properties/#description_5","title":"Description","text":"<p>Returns the position value of the layer, in world space if the layer has no parent. If the layer has a parent, it returns the position value of the layer in the coordinate system of the parent layer (in the layer space of the parent layer).</p>"},{"location":"layer/properties/#type_5","title":"Type","text":"<p>Array of Numbers (2- or 3-dimensional)</p>"},{"location":"layer/properties/#layerrotation","title":"Layer.rotation","text":"<p><code>thisLayer.rotation</code></p>"},{"location":"layer/properties/#description_6","title":"Description","text":"<p>Returns the rotation value of the layer in degrees. For a 3D layer, it returns the z rotation value in degrees.</p>"},{"location":"layer/properties/#type_6","title":"Type","text":"<p>Number</p>"},{"location":"layer/properties/#layerscale","title":"Layer.scale","text":"<p><code>thisLayer.scale</code></p>"},{"location":"layer/properties/#description_7","title":"Description","text":"<p>Returns the scale value of the layer, expressed as a percentage.</p>"},{"location":"layer/properties/#type_7","title":"Type","text":"<p>Array of Numbers (2- or 3-dimensional)</p>"},{"location":"layer/properties/#layertimeremap","title":"Layer.timeRemap","text":"<p><code>thisLayer.timeRemap</code></p>"},{"location":"layer/properties/#description_8","title":"Description","text":"<p>Returns the value of the Time Remap property, in seconds, if Time Remap is enabled.</p>"},{"location":"layer/properties/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"layer/sub-objects/","title":"Layer Sub-objects","text":"<p><code>thisLayer</code></p> <p>This category describes items that give you other objects based on the current layer; things like the source (for precomps or footage), effects, masks, sourceRect, etc.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer</code> as a sample on how to call these items, however note that any method that returns a Layer will work.</p> <p>Note</p> <p>For After Effects CC and CS6, the Expression language menu, the \"Layer Sub-objects\", \"Layer General\", \"Layer Properties\", \"Layer 3D\", and \"Layer Space Transforms\" have been arranged into a \"Layer\" submenu.</p>"},{"location":"layer/sub-objects/#attributes","title":"Attributes","text":""},{"location":"layer/sub-objects/#layersource","title":"Layer.source","text":"<p><code>thisLayer.source</code></p>"},{"location":"layer/sub-objects/#description","title":"Description","text":"<p>Returns the source Comp or Footage object for the layer.</p> <p>Default time is adjusted to the time in the source.</p> <p>Example:</p> <pre><code>source.layer(1).position\n</code></pre>"},{"location":"layer/sub-objects/#type","title":"Type","text":"<p>Comp or Footage</p>"},{"location":"layer/sub-objects/#methods","title":"Methods","text":""},{"location":"layer/sub-objects/#layereffect","title":"Layer.effect()","text":"<p><code>thisLayer.effect(name)</code></p> <p><code>thisLayer.effect(index)</code></p>"},{"location":"layer/sub-objects/#description_1","title":"Description","text":"<p>The <code>name</code> value will have After Effects find the effect by its name in the Effect Controls panel. The name can be the default name or a user-defined name. If multiple effects have the same name, the effect closest to the top of the Effect Controls panel is used.</p> <p>The <code>index</code> value will have After Effects finds the effect by its index in the Effect Controls panel, starting at <code>1</code> and counting from the top.</p>"},{"location":"layer/sub-objects/#parameters","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>name</code></p> <p><code>index</code></p> <p>String</p> <p>Number</p> <p>Effect name or index to get.</p>"},{"location":"layer/sub-objects/#returns","title":"Returns","text":"<p>Effect</p>"},{"location":"layer/sub-objects/#example","title":"Example","text":"<p>Get the \"Blurriness\" effect by name:</p> <pre><code>thisLayer.effect(\"Fast Blur\")\n</code></pre> <p>Get the first effect on the layer:</p> <pre><code>thisLayer.effect(1)\n</code></pre>"},{"location":"layer/sub-objects/#layermask","title":"Layer.mask()","text":"<p><code>thisLayer.mask(name)</code></p> <p><code>thisLayer.mask(index)</code></p>"},{"location":"layer/sub-objects/#description_2","title":"Description","text":"<p>The <code>name</code> value can be the default name or a user-defined name. If multiple masks have the same name, the first (topmost) mask is used.</p> <p>The <code>index</code> value will have After Effects finds the mask by its index in the Timeline panel, starting at <code>1</code> and counting from the top.</p>"},{"location":"layer/sub-objects/#parameters_1","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>name</code></p> <p><code>index</code></p> <p>String</p> <p>Number</p> <p>Effect name or index to get.</p>"},{"location":"layer/sub-objects/#returns_1","title":"Returns","text":"<p>Effect</p>"},{"location":"layer/sub-objects/#example_1","title":"Example","text":"<p>Get the mask \"Mask 1\" by name:</p> <pre><code>thisLayer.mask(\"Mask 1\")\n</code></pre> <p>Get the first mask on the layer:</p> <pre><code>thisLayer.mask(1)\n</code></pre>"},{"location":"layer/sub-objects/#layersourcerectattime","title":"Layer.sourceRectAtTime()","text":"<p><code>thisLayer.sourceRectAtTime(t = time, includeExtents = false)</code></p> <p>Note</p> <p>This functionality was added in After Effects 13.2 Paragraph text extents was added in After Effects 15.1.</p>"},{"location":"layer/sub-objects/#description_3","title":"Description","text":"<p>Returns the bounding box of the layer (or the layer's source).</p>"},{"location":"layer/sub-objects/#parameters_2","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>t</code></p> <p>Number</p> <p>Optional. The specified time (in comp seconds) to apply the smoothing filter to. Defaults to <code>time</code> (the current comp time, in seconds).</p> <p><code>includeExtents</code></p> <p>Boolean</p> <p>Optional. Only applies to shape layers and paragraph text layers. Defaults to <code>false</code>.</p> <ul> <li>For shape layers: Increases the size of the layer bounds as necessary.</li> <li>For paragraph text layers: Returns the bounds of the paragraph box</li> </ul>"},{"location":"layer/sub-objects/#returns_2","title":"Returns","text":"<p>An object with four attributes: <code>{top, left, width, height}</code></p>"},{"location":"layer/sub-objects/#example_2","title":"Example","text":"<pre><code>myTextLayer.sourceRectAtTime().width\n</code></pre>"},{"location":"layer/sub-objects/#layersourcetime","title":"Layer.sourceTime()","text":"<p><code>thisLayer.sourceTime([t=time])</code></p> <p>Note</p> <p>This functionality was added in After Effects CS5.5</p>"},{"location":"layer/sub-objects/#description_4","title":"Description","text":"<p>Returns the layer source corresponding to time <code>t</code>.</p>"},{"location":"layer/sub-objects/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The specified time (in comp seconds) to apply the smoothing filter to. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"layer/sub-objects/#returns_3","title":"Returns","text":"<p>Number</p>"},{"location":"layer/threed/","title":"Layer 3D","text":"<p><code>thisLayer</code></p> <p>These attributes are related to the 3d properties of layers.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer</code> as a sample on how to call these items, however note that any method that returns a Layer will work.</p>"},{"location":"layer/threed/#attributes","title":"Attributes","text":""},{"location":"layer/threed/#layeracceptslights","title":"Layer.acceptsLights","text":"<p><code>thisLayer.acceptsLights</code></p>"},{"location":"layer/threed/#description","title":"Description","text":"<p>Returns a value of <code>1</code> if the layer accepts lights.</p>"},{"location":"layer/threed/#type","title":"Type","text":"<p>Boolean Number</p>"},{"location":"layer/threed/#layeracceptsshadows","title":"Layer.acceptsShadows","text":"<p><code>thisLayer.acceptsShadows</code></p>"},{"location":"layer/threed/#description_1","title":"Description","text":"<p>Returns a value of <code>1</code> if the layer accepts shadows and <code>2</code> if the property is set to <code>Only</code>.</p>"},{"location":"layer/threed/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerambient","title":"Layer.ambient","text":"<p><code>thisLayer.ambient</code></p>"},{"location":"layer/threed/#description_2","title":"Description","text":"<p>Returns the ambient component value as a percentage.</p>"},{"location":"layer/threed/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layercastsshadows","title":"Layer.castsShadows","text":"<p><code>thisLayer.castsShadows</code></p>"},{"location":"layer/threed/#description_3","title":"Description","text":"<p>Returns a value of <code>1.0</code> if the layer casts shadows and <code>2</code> if the property is set to <code>Only</code>.</p>"},{"location":"layer/threed/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerdiffuse","title":"Layer.diffuse","text":"<p><code>thisLayer.diffuse</code></p>"},{"location":"layer/threed/#description_4","title":"Description","text":"<p>Returns the diffuse component value as a percentage.</p>"},{"location":"layer/threed/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerlighttransmission","title":"Layer.lightTransmission","text":"<p><code>thisLayer.lightTransmission</code></p>"},{"location":"layer/threed/#description_5","title":"Description","text":"<p>Returns the value of the Light Transmission property for a 3D layer.</p>"},{"location":"layer/threed/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layermetal","title":"Layer.metal","text":"<p><code>thisLayer.metal</code></p>"},{"location":"layer/threed/#description_6","title":"Description","text":"<p>Returns the metal component value as a percentage.</p>"},{"location":"layer/threed/#type_6","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerorientation","title":"Layer.orientation","text":"<p><code>thisLayer.orientation</code></p>"},{"location":"layer/threed/#description_7","title":"Description","text":"<p>Returns the 3D orientation value, in degrees, for a 3D layer.</p>"},{"location":"layer/threed/#type_7","title":"Type","text":"<p>Array (3-dimensional)</p>"},{"location":"layer/threed/#layerrotationx","title":"Layer.rotationX","text":"<p><code>thisLayer.rotationX</code></p>"},{"location":"layer/threed/#description_8","title":"Description","text":"<p>Returns the x rotation value, in degrees, for a 3D layer.</p>"},{"location":"layer/threed/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerrotationy","title":"Layer.rotationY","text":"<p><code>thisLayer.rotationY</code></p>"},{"location":"layer/threed/#description_9","title":"Description","text":"<p>Returns the y rotation value, in degrees, for a 3D layer.</p>"},{"location":"layer/threed/#type_9","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerrotationz","title":"Layer.rotationZ","text":"<p><code>thisLayer.rotationZ</code></p>"},{"location":"layer/threed/#description_10","title":"Description","text":"<p>Returns the z rotation value, in degrees, for a 3D layer.</p>"},{"location":"layer/threed/#type_10","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layershininess","title":"Layer.shininess","text":"<p><code>thisLayer.shininess</code></p>"},{"location":"layer/threed/#description_11","title":"Description","text":"<p>Returns the shininess component value as a percentage.</p>"},{"location":"layer/threed/#type_11","title":"Type","text":"<p>Number</p>"},{"location":"layer/threed/#layerspecular","title":"Layer.specular","text":"<p><code>thisLayer.specular</code></p>"},{"location":"layer/threed/#description_12","title":"Description","text":"<p>Returns the specular component value as a percentage.</p>"},{"location":"layer/threed/#type_12","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/","title":"Camera","text":"<p><code>thisLayer.cameraOption</code></p> <p>This category is for items specific to Camera Layers.</p> <p>Info</p> <p>Camera is a subclass of the Layer object. All methods and attributes of Layer are available when working with Camera, except:</p> <ul> <li><code>source</code></li> <li><code>effect</code></li> <li><code>mask</code></li> <li><code>width</code></li> <li><code>height</code></li> <li><code>anchorPoint</code></li> <li><code>scale</code></li> <li><code>opacity</code></li> <li><code>audioLevels</code></li> <li><code>timeRemap</code></li> <li>all the 3d material properties</li> </ul>"},{"location":"objects/camera/#attributes","title":"Attributes","text":""},{"location":"objects/camera/#cameraactive","title":"Camera.active","text":"<p><code>thisLayer.cameraOption.active</code></p>"},{"location":"objects/camera/#description","title":"Description","text":"<p>Returns <code>true</code> if:</p> <ol> <li>The camera is the active camera for the composition at the current time: the video switch for the camera layer is on,</li> <li>the current time is in the range from the in point of the camera layer to the out point of the camera layer, and</li> <li>The camera is the first (topmost) such camera layer listed in the timeline panel</li> </ol> <p>Returns <code>false</code> otherwise.</p>"},{"location":"objects/camera/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/camera/#cameraaperture","title":"Camera.aperture","text":"<p><code>thisLayer.cameraOption.aperture</code></p>"},{"location":"objects/camera/#description_1","title":"Description","text":"<p>Returns the aperture value of a camera, in pixels.</p>"},{"location":"objects/camera/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerablurlevel","title":"Camera.blurLevel","text":"<p><code>thisLayer.cameraOption.blurLevel</code></p>"},{"location":"objects/camera/#description_2","title":"Description","text":"<p>Returns the blur level value of a camera as a percentage.</p>"},{"location":"objects/camera/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#cameradepthoffield","title":"Camera.depthOfField","text":"<p><code>thisLayer.cameraOption.depthOfField</code></p>"},{"location":"objects/camera/#description_3","title":"Description","text":"<p>Returns <code>1</code> if the Depth Of Field property of a camera is on, or returns <code>0</code> if the Depth Of Field property is off.</p>"},{"location":"objects/camera/#type_3","title":"Type","text":"<p>Boolean Number</p>"},{"location":"objects/camera/#camerafocusdistance","title":"Camera.focusDistance","text":"<p><code>thisLayer.cameraOption.focusDistance</code></p>"},{"location":"objects/camera/#description_4","title":"Description","text":"<p>Returns the focus distance value of a camera, in pixels.</p>"},{"location":"objects/camera/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerahighlightgain","title":"Camera.highlightGain","text":"<p><code>thisLayer.cameraOption.highlightGain</code></p>"},{"location":"objects/camera/#description_5","title":"Description","text":"<p>Returns the camera highlight gain, from 1 to 100.</p>"},{"location":"objects/camera/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerahighlightsaturation","title":"Camera.highlightSaturation","text":"<p><code>thisLayer.cameraOption.highlightSaturation</code></p>"},{"location":"objects/camera/#description_6","title":"Description","text":"<p>Returns the camera highlight saturation, from <code>1</code> to <code>100</code>.</p>"},{"location":"objects/camera/#type_6","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerahighlightthreshold","title":"Camera.highlightThreshold","text":"<p><code>thisLayer.cameraOption.highlightThreshold</code></p>"},{"location":"objects/camera/#description_7","title":"Description","text":"<p>Returns the camera highlight threshhold.</p> <ul> <li>In an 8-bit comp, this value ranges from <code>0</code> to <code>100</code></li> <li>In a 16-bit comp, this value ranges from <code>0</code> to <code>32768</code></li> <li>In a 32-bit comp, this value ranges from <code>0</code> to <code>1.0</code></li> </ul>"},{"location":"objects/camera/#type_7","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerairisaspectratio","title":"Camera.irisAspectRatio","text":"<p><code>thisLayer.cameraOption.irisAspectRatio</code></p>"},{"location":"objects/camera/#description_8","title":"Description","text":"<p>Returns the camera iris aspect ratio, from 1 to 100.</p>"},{"location":"objects/camera/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerairisdiffractionfringe","title":"Camera.irisDiffractionFringe","text":"<p><code>thisLayer.cameraOption.irisDiffractionFringe</code></p>"},{"location":"objects/camera/#description_9","title":"Description","text":"<p>Returns the camera iris diffraction fringe, from 1 to 100.</p>"},{"location":"objects/camera/#type_9","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerairisrotation","title":"Camera.irisRotation","text":"<p><code>thisLayer.cameraOption.irisRotation</code></p>"},{"location":"objects/camera/#description_10","title":"Description","text":"<p>Returns the iris rotation value, in degrees.</p>"},{"location":"objects/camera/#type_10","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerairisroundness","title":"Camera.irisRoundness","text":"<p><code>thisLayer.cameraOption.irisRoundness</code></p>"},{"location":"objects/camera/#description_11","title":"Description","text":"<p>Returns the camera iris roundness value as a percentage.</p>"},{"location":"objects/camera/#type_11","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerairisshape","title":"Camera.irisShape","text":"<p><code>thisLayer.cameraOption.irisShape</code></p>"},{"location":"objects/camera/#description_12","title":"Description","text":"<p>Returns the iris shape value from 1-10, corresponding to the selected dropdown value.</p> <p>Note</p> <p>Value <code>2</code> is reserved for the divider.</p>"},{"location":"objects/camera/#type_12","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#camerapointofinterest","title":"Camera.pointOfInterest","text":"<p><code>thisLayer.cameraOption.pointOfInterest</code></p>"},{"location":"objects/camera/#description_13","title":"Description","text":"<p>Returns the point of interest values of a camera in world space.</p>"},{"location":"objects/camera/#type_13","title":"Type","text":"<p>Array (3 dimensional)</p>"},{"location":"objects/camera/#camerazoom","title":"Camera.zoom","text":"<p><code>thisLayer.cameraOption.zoom</code></p>"},{"location":"objects/camera/#description_14","title":"Description","text":"<p>Returns the zoom values of a camera in pixels.</p>"},{"location":"objects/camera/#type_14","title":"Type","text":"<p>Number</p>"},{"location":"objects/camera/#example","title":"Example","text":"<p>Here's an expression for the Scale property of a layer that maintains the relative size of the layer in frame while changing the z position (depth) of a layer or the Zoom value of a camera:</p> <pre><code>cam = thisComp.activeCamera;\ndistance = length(sub(position, cam.position));\nscale * distance / cam.zoom;\n</code></pre>"},{"location":"objects/comp/","title":"Comp","text":"<p><code>thisComp</code></p> <p><code>comp(\"CompName\")</code></p> <p><code>layer(\"layerName\").source</code></p> <p>These attributes and methods can be called on Comp objects.</p> <p>These are typically accessed in a few ways, most commonly:</p> <ul> <li><code>thisComp</code> to get the Comp object of the active comp the expression is written in,</li> <li><code>comp(\"CompName\")</code> to get a specific comp by name,</li> <li><code>layer(\"layerName\").source</code>, if referring to a precomp layer, to get the targeted precomp layer's source comp</li> </ul> <p>Info</p> <p>On this page, we're going to use <code>thisComp</code> as a sample on how to call these items, however note that any method that returns a Comp will work.</p>"},{"location":"objects/comp/#attributes","title":"Attributes","text":""},{"location":"objects/comp/#compactivecamera","title":"Comp.activeCamera","text":"<p><code>thisComp.activeCamera</code></p>"},{"location":"objects/comp/#description","title":"Description","text":"<p>Returns the Camera object for the camera through which the composition is rendered at the current frame.</p> <p>This camera is not necessarily the camera through which you are looking in the Composition panel.</p>"},{"location":"objects/comp/#type","title":"Type","text":"<p>Camera</p>"},{"location":"objects/comp/#compbgcolor","title":"Comp.bgColor","text":"<p><code>thisComp.bgColor</code></p>"},{"location":"objects/comp/#description_1","title":"Description","text":"<p>Returns the background color of the composition.</p>"},{"location":"objects/comp/#type_1","title":"Type","text":"<p>Array (4-dimensional)</p>"},{"location":"objects/comp/#compdisplaystarttime","title":"Comp.displayStartTime","text":"<p><code>thisComp.displayStartTime</code></p>"},{"location":"objects/comp/#description_2","title":"Description","text":"<p>Returns the composition start time, in seconds.</p>"},{"location":"objects/comp/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compduration","title":"Comp.duration","text":"<p><code>thisComp.duration</code></p>"},{"location":"objects/comp/#description_3","title":"Description","text":"<p>Returns the composition duration, in seconds.</p>"},{"location":"objects/comp/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compframeduration","title":"Comp.frameDuration","text":"<p><code>thisComp.frameDuration</code></p>"},{"location":"objects/comp/#description_4","title":"Description","text":"<p>Returns the duration of a frame, in seconds.</p>"},{"location":"objects/comp/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compheight","title":"Comp.height","text":"<p><code>thisComp.height</code></p>"},{"location":"objects/comp/#description_5","title":"Description","text":"<p>Returns the composition height, in pixels.</p>"},{"location":"objects/comp/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compmarker","title":"Comp.marker","text":"<p><code>thisComp.marker</code></p>"},{"location":"objects/comp/#description_6","title":"Description","text":"<p>Returns a given composition's Marker property.</p> <p>Note</p> <p>You can no longer access a composition marker by marker number.</p> <p>If you have a project created in a previous version of After Effects that uses composition marker numbers in expressions, you must change those calls to use <code>marker.key(name)</code> instead. Because the default name of a composition marker is a number, converting the reference to use the name is often just a matter of surrounding the number with quotation marks.</p>"},{"location":"objects/comp/#type_6","title":"Type","text":"<p>Marker Property</p>"},{"location":"objects/comp/#compname","title":"Comp.name","text":"<p><code>thisComp.name</code></p>"},{"location":"objects/comp/#description_7","title":"Description","text":"<p>Returns the name of the composition.</p>"},{"location":"objects/comp/#type_7","title":"Type","text":"<p>String</p>"},{"location":"objects/comp/#compntscdropframe","title":"Comp.ntscDropFrame","text":"<p><code>thisComp.ntscDropFrame</code></p> <p>Note</p> <p>This functionality was added in After Effects CS5.5</p>"},{"location":"objects/comp/#description_8","title":"Description","text":"<p>Returns <code>true</code> if the timecode is in drop-frame format.</p>"},{"location":"objects/comp/#type_8","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/comp/#compnumlayers","title":"Comp.numLayers","text":"<p><code>thisComp.numLayers</code></p>"},{"location":"objects/comp/#description_9","title":"Description","text":"<p>Returns the number of layers in the composition.</p>"},{"location":"objects/comp/#type_9","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#comppixelaspect","title":"Comp.pixelAspect","text":"<p><code>thisComp.pixelAspect</code></p>"},{"location":"objects/comp/#description_10","title":"Description","text":"<p>Returns the pixel aspect ratio of the composition.</p>"},{"location":"objects/comp/#type_10","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compshutterangle","title":"Comp.shutterAngle","text":"<p><code>thisComp.shutterAngle</code></p>"},{"location":"objects/comp/#description_11","title":"Description","text":"<p>Returns the shutter-angle value of the composition, in degrees.</p>"},{"location":"objects/comp/#type_11","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compshutterphase","title":"Comp.shutterPhase","text":"<p><code>thisComp.shutterPhase</code></p>"},{"location":"objects/comp/#description_12","title":"Description","text":"<p>Returns the shutter phase of the composition, in degrees.</p>"},{"location":"objects/comp/#type_12","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#compwidth","title":"Comp.width","text":"<p><code>thisComp.width</code></p>"},{"location":"objects/comp/#description_13","title":"Description","text":"<p>Returns the composition width, in pixels.</p>"},{"location":"objects/comp/#type_13","title":"Type","text":"<p>Number</p>"},{"location":"objects/comp/#example","title":"Example","text":"<p>Apply the following expression to the Position property of a layer to center the layer in the composition frame:</p> <pre><code>[thisComp.width / 2, thisComp.height / 2];\n</code></pre>"},{"location":"objects/comp/#methods","title":"Methods","text":""},{"location":"objects/comp/#complayer","title":"Comp.layer()","text":"<p><code>thisComp.layer(index)</code></p> <p><code>thisComp.layer(name)</code></p> <p><code>thisComp.layer(otherLayer, relIndex)</code></p>"},{"location":"objects/comp/#description_14","title":"Description","text":"<p>Return the Layer object with the specified <code>index</code> or <code>name</code>.</p> <p>The <code>index</code> value refers to the layer order in the Timeline panel.</p> <p>The <code>name</code> value refers to the user-specified layer name, or the layer source name if there is no layer name.</p> <p>If duplicate names exist, After Effects uses the first (topmost) one in the Timeline panel.</p> <p>If using the <code>otherLayer, relIndex</code> call, this retrieves the layer that is <code>relIndex</code> layers above or below <code>otherLayer</code>.</p>"},{"location":"objects/comp/#parameters","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>index</code></p> <p><code>name</code></p> <p>Number</p> <p>String</p> <p>Layer name or index to get.</p> <p><code>otherLayer</code></p> <p>Layer</p> <p>The \"other\" layer to start getting layers relative to</p> <p><code>relIndex</code></p> <p>Number</p> <p>The number of layers to move above or below the <code>otherLayer</code></p>"},{"location":"objects/comp/#returns","title":"Returns","text":"<p>Layer, Light, or Camera object</p>"},{"location":"objects/comp/#example_1","title":"Example","text":"<p>Get the 3rd layer in the current comp:</p> <pre><code>thisComp.layer(3)\n</code></pre> <p>Get the layer named \"Solid 1\" from the current comp:</p> <pre><code>thisComp.layer(\"Solid 1\")\n</code></pre> <p>Check whether the next layer down in the Timeline panel is active:</p> <pre><code>const nextLayer = thisComp.layer(thisLayer, 1);\nnextLayer.active;\n</code></pre>"},{"location":"objects/comp/#complayerbycomment","title":"Comp.layerByComment()","text":"<p><code>thisComp.layerByComment(comment)</code></p>"},{"location":"objects/comp/#description_15","title":"Description","text":"<p>Retrieves a layer by matching the comment parameter to the value in the layer's Comment column.</p> <p>The matches are simple text matches. They will match partial words, and are case sensitive. Matching does not appear to use regular expressions or wildcards. If duplicate comments exist, After Effects uses the first (topmost) one in the Timeline panel.</p>"},{"location":"objects/comp/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>comment</code> String The comment to find a layer from"},{"location":"objects/comp/#returns_1","title":"Returns","text":"<p>Layer, Light, or Camera object</p>"},{"location":"objects/comp/#example_2","title":"Example","text":"<pre><code>// note this will match a layer with a comment \"Controller\" or \"Motion Control\"\nthisComp.layerByComment(\"Control\");\n</code></pre>"},{"location":"objects/effect/","title":"Effect","text":"<p><code>thisLayer.effect(\"Bulge\")</code></p> <p>This category contains information relating to Effects.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer.effect(\"Bulge\")</code> as a sample on how to call these items, however note that any method that returns an Effect will work.</p>"},{"location":"objects/effect/#attributes","title":"Attributes","text":""},{"location":"objects/effect/#effectactive","title":"Effect.active","text":"<p><code>thisLayer.effect(\"Bulge\").active</code></p>"},{"location":"objects/effect/#description","title":"Description","text":"<p>Returns <code>true</code> if the effect is turned on (the effect switch is selected).</p>"},{"location":"objects/effect/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/effect/#methods","title":"Methods","text":""},{"location":"objects/effect/#effectparam","title":"Effect.param()","text":"<p><code>thisLayer.effect(\"Bulge\").param(name)</code></p> <p><code>thisLayer.effect(\"Bulge\").param(index)</code></p>"},{"location":"objects/effect/#description_1","title":"Description","text":"<p>Returns a property within an effect. Effect control points are always in layer space.</p> <p>This method can be called using either the property's <code>name</code> or its <code>index</code>.</p>"},{"location":"objects/effect/#parameters","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>name</code></p> <p><code>index</code></p> <p>String</p> <p>Number</p> <p>Property name or index to access property by.</p>"},{"location":"objects/effect/#returns","title":"Returns","text":"<p>Property object</p>"},{"location":"objects/effect/#example","title":"Example","text":"<p>To return the \"Bulge Height\" property from the \"Bulge\" effect by name:</p> <pre><code>thisLayer.effect(\"Bulge\").param(\"Bulge Height\");\n</code></pre> <p>To return the \"Bulge Height\" property from the \"Bulge\" effect by index:</p> <pre><code>thisLayer.effect(\"Bulge\").param(4);\n</code></pre>"},{"location":"objects/footage/","title":"Footage","text":"<p><code>footage(\"myFile\")</code></p> <p>To use a footage item from the Project panel as an object in an expression, use the global footage method, as in <code>footage(\"myFile\")</code>.</p> <p>You can also access a footage object using the source attribute on a layer whose source is a footage item (i.e. <code>thisLayer.source</code>)</p> <p>Info</p> <p>On this page, we're going to use <code>footage(\"myFile\")</code> as a sample on how to call these items, however note that any method that returns a Footage object will work.</p>"},{"location":"objects/footage/#attributes","title":"Attributes","text":""},{"location":"objects/footage/#footageduration","title":"Footage.duration","text":"<p><code>footage(\"myFile\").duration</code></p>"},{"location":"objects/footage/#description","title":"Description","text":"<p>Returns the duration of the footage item, in seconds.</p>"},{"location":"objects/footage/#type","title":"Type","text":"<p>Number</p>"},{"location":"objects/footage/#footageframeduration","title":"Footage.frameDuration","text":"<p><code>footage(\"myFile\").frameDuration</code></p>"},{"location":"objects/footage/#description_1","title":"Description","text":"<p>Returns the duration of a frame in the footage item, in seconds.</p>"},{"location":"objects/footage/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/footage/#footageheight","title":"Footage.height","text":"<p><code>footage(\"myFile\").height</code></p>"},{"location":"objects/footage/#description_2","title":"Description","text":"<p>Returns the height of the footage item, in pixels.</p>"},{"location":"objects/footage/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/footage/#footagename","title":"Footage.name","text":"<p><code>footage(\"myFile\").name</code></p>"},{"location":"objects/footage/#description_3","title":"Description","text":"<p>Returns the name of the footage item as shown in the Project panel.</p>"},{"location":"objects/footage/#type_3","title":"Type","text":"<p>String</p>"},{"location":"objects/footage/#footagentscdropframe","title":"Footage.ntscDropFrame","text":"<p><code>footage(\"myFile\").ntscDropFrame</code></p> <p>Note</p> <p>This functionality was added in After Effects CS5.5</p>"},{"location":"objects/footage/#description_4","title":"Description","text":"<p>Returns <code>true</code> if the timecode is in drop-frame format.</p>"},{"location":"objects/footage/#type_4","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/footage/#footagepixelaspect","title":"Footage.pixelAspect","text":"<p><code>footage(\"myFile\").pixelAspect</code></p>"},{"location":"objects/footage/#description_5","title":"Description","text":"<p>Returns the pixel aspect ratio of the footage item.</p>"},{"location":"objects/footage/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"objects/footage/#footagesourcedata","title":"Footage.sourceData","text":"<p><code>footage(\"myFile\").sourceData</code></p>"},{"location":"objects/footage/#description_6","title":"Description","text":"<p>Returns the data of a JSON file as an array of <code>sourceData</code> objects.</p> <p>The structure of the JSON file will determine the size and complexity of the array.</p> <p>Individual data streams can be referenced as hierarchal attributes of the data.</p>"},{"location":"objects/footage/#type_6","title":"Type","text":"<p>An array of <code>sourceData</code> objects; read-only.</p>"},{"location":"objects/footage/#example","title":"Example","text":"<p>Given a data stream named \"Color\", the following will return the value of \"Color\" from the first data object:</p> <pre><code>footage(\"sample.json\").sourceData[0].Color\n</code></pre> <p>Typical use is to assign a JSON file's <code>sourceData</code> to a variable, and then reference the desired data stream. For example:</p> <pre><code>const myData = footage(\"sample.json\").sourceData;\nmyData[0].Color;\n</code></pre>"},{"location":"objects/footage/#footagesourcetext","title":"Footage.sourceText","text":"<p><code>footage(\"myFile\").sourceText</code></p>"},{"location":"objects/footage/#description_7","title":"Description","text":"<p>Returns the contents of a JSON file as a string.</p> <p>The <code>eval()</code> method can be used to convert the string to an array of sourceData objects, identical to the results of the Footage.sourceData attribute, from which the individual data streams can be referenced as hierarchal attributes of the data.</p>"},{"location":"objects/footage/#type_7","title":"Type","text":"<p>String, the contents of the JSON file; read-only.</p>"},{"location":"objects/footage/#example_1","title":"Example","text":"<pre><code>const myData = eval(footage(\"sample.json\").sourceText);\nmyData.sampleValue;\n</code></pre>"},{"location":"objects/footage/#footagewidth","title":"Footage.width","text":"<p><code>footage(\"myFile\").width</code></p>"},{"location":"objects/footage/#description_8","title":"Description","text":"<p>Returns the width of the footage item, in pixels.</p>"},{"location":"objects/footage/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"objects/footage/#methods","title":"Methods","text":""},{"location":"objects/footage/#footagedatakeycount","title":"Footage.dataKeyCount()","text":"<p><code>footage(\"myFile\").dataKeyCount(dataPath)</code></p>"},{"location":"objects/footage/#description_9","title":"Description","text":"<p>Returns the number of samples in a specificed dynamic data stream in a MGJSON file.</p> <p>Accepts a single array value to define the path in the hierarchy to the desired dynamic data stream.</p>"},{"location":"objects/footage/#parameters","title":"Parameters","text":"Parameter Type Description <code>dataPath</code> Array Required. The path in the hierarchy to a static or dynamic data stream."},{"location":"objects/footage/#returns","title":"Returns","text":"<p>The number of samples in the dynamic data stream.</p>"},{"location":"objects/footage/#example_2","title":"Example","text":"<p>To return the count of samples for the first child:</p> <pre><code>footage(\"sample.mgjson\").dataKeyCount([0])\n</code></pre> <p>To return the count of samples for the second group:</p> <pre><code>footage(\"sample.mgjson\").dataKeyCount([1][0])\n</code></pre>"},{"location":"objects/footage/#footagedatakeytimes","title":"Footage.dataKeyTimes()","text":"<p><code>footage(\"myFile\").dataKeyTimes(dataPath[, t0=startTime][, t1=endTime])</code></p>"},{"location":"objects/footage/#description_10","title":"Description","text":"<p>Returns the time in seconds for the samples of a specificed dynamic data stream in a MGJSON file.</p> <p>Optionally specify the time span from which to return samples. By default the time for all samples between <code>startTime</code> and <code>endTime</code> in the dynamicdata stream are returned, as defined by the data stream's <code>samplesTemporalExtent</code> property in the MGJSON file.</p> <p>Accepts a single array value to define the path in the hierarchy to the desired dynamic data stream.</p>"},{"location":"objects/footage/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>dataPath</code> Array Required. The path in the hierarchy to a static or dynamic data stream. <code>t0</code> Number Optional. The start time, in seconds, of the span from which to return samples. Defaults to <code>startTime</code>. <code>t1</code> Number Optional. The end time, in seconds, of the span from which to return samples. Defaults to <code>endTime</code>."},{"location":"objects/footage/#returns_1","title":"Returns","text":"<p>Array of numbers representing the sample times.</p>"},{"location":"objects/footage/#example_3","title":"Example","text":"<p>Return the times of samples between 1 second and 3 seconds for the first child:</p> <pre><code>footage(\"sample.mgjson\").dataKeyTimes([0], 1, 3)\n</code></pre>"},{"location":"objects/footage/#footagedatakeyvalues","title":"Footage.dataKeyValues()","text":"<p><code>footage(\"myFile\").dataKeyValues(dataPath[, t0=startTime][, t1=endTime])</code></p>"},{"location":"objects/footage/#description_11","title":"Description","text":"<p>Returns the values for the samples of a specificed dynamic data stream in a MGJSON file.</p> <p>Optionally specify the time span from which to return samples. By default the time for all samples between startTime and endTime in the dynamicdata stream are returned, as defined by the data stream's <code>samplesTemporalExtent</code> property in the MGJSON file.</p> <p>Accepts a single array value to define the path in the hierarchy to the desired dynamic data stream.</p>"},{"location":"objects/footage/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>dataPath</code> Array Required. The path in the hierarchy to a static or dynamic data stream. <code>t0</code> Number Optional. The start time, in seconds, of the span from which to return samples. Defaults to <code>startTime</code>. <code>t1</code> Number Optional. The end time, in seconds, of the span from which to return samples. Defaults to <code>endTime</code>."},{"location":"objects/footage/#returns_2","title":"Returns","text":"<p>Array of numbers representing the sample values.</p>"},{"location":"objects/footage/#example_4","title":"Example","text":"<p>Return the values of samples between 1 second and 3 seconds for the first child:</p> <pre><code>footage(\"sample.mgjson\").dataKeyValues([0], 1, 3)\n</code></pre>"},{"location":"objects/footage/#footagedatavalue","title":"Footage.dataValue()","text":"<p><code>footage(\"myFile\").dataValue(dataPath)</code></p>"},{"location":"objects/footage/#description_12","title":"Description","text":"<p>Returns the value of specificed static or dynamic data stream in a MGJSON file.</p> <p>Accepts a single array value to define the path in the hierarchy to the desired data stream.</p>"},{"location":"objects/footage/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>dataPath</code> Array Required. The path in the hierarchy to a static or dynamic data stream."},{"location":"objects/footage/#returns_3","title":"Returns","text":"<p>The value of the data stream.</p>"},{"location":"objects/footage/#example_5","title":"Example","text":"<p>To return data of the first child:</p> <pre><code>footage(\"sample.mgjson\").dataValue([0])\n</code></pre> <p>To return data of the first child in the second group:</p> <pre><code>footage(\"sample.mgjson\").dataValue([1][0])\n</code></pre>"},{"location":"objects/key/","title":"Key","text":"<p><code>thisProperty.key(1)</code></p> <p>When you access a Key object, you can get <code>time</code>, <code>index</code>, and <code>value</code> properties from it.</p> <p>Tip</p> <p>In expressions, \"Key\" refers to Keyframes.</p> <p>Info</p> <p>On this page, we're going to use <code>thisProperty.key(1)</code> as a sample on how to call these items, however note that any method that returns a Key will work.</p>"},{"location":"objects/key/#attributes","title":"Attributes","text":""},{"location":"objects/key/#keyindex","title":"Key.index","text":"<p><code>thisProperty.key(1).index</code></p>"},{"location":"objects/key/#description","title":"Description","text":"<p>Returns the index of the keyframe.</p>"},{"location":"objects/key/#type","title":"Type","text":"<p>Number</p>"},{"location":"objects/key/#keytime","title":"Key.time","text":"<p><code>thisProperty.key(1).time</code></p>"},{"location":"objects/key/#description_1","title":"Description","text":"<p>Returns the time of the keyframe.</p>"},{"location":"objects/key/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/key/#keyvalue","title":"Key.value","text":"<p><code>thisProperty.key(1).value</code></p>"},{"location":"objects/key/#description_2","title":"Description","text":"<p>Returns the value of the keyframe.</p>"},{"location":"objects/key/#type_2","title":"Type","text":"<p>A value of the same property type as the property being refrenced.</p>"},{"location":"objects/key/#example","title":"Example","text":"<p>The following expression, when written on an Opacity property with keyframes, ignores the keyframe values and uses only the placement of the keyframes in time to determine where a flash should occur:</p> <pre><code>const d = Math.abs(time - nearestKey(time).time);\neaseOut(d, 0, .1, 100, 0)\n</code></pre> <p>The following expression gives you the value of the third Position keyframe:</p> <pre><code>position.key(3).value;\n</code></pre>"},{"location":"objects/light/","title":"Light","text":"<p><code>thisLayer.lightOption</code></p> <p>This category is for items specific to Light Layers.</p> <p>Info</p> <p>Light is a subclass of the Layer object. All methods and attributes of Layer are available when working with Light, except:</p> <ul> <li><code>source</code></li> <li><code>effect</code></li> <li><code>mask</code></li> <li><code>width</code></li> <li><code>height</code></li> <li><code>anchorPoint</code></li> <li><code>scale</code></li> <li><code>opacity</code></li> <li><code>audioLevels</code></li> <li><code>timeRemap</code></li> <li>all the material properties</li> </ul> <p>Note</p> <p>David Van Brink provides an instructional article and sample project on his omino pixel blog that shows how to use expressions with lights.</p>"},{"location":"objects/light/#attributes","title":"Attributes","text":""},{"location":"objects/light/#lightcastsshadows","title":"Light.castsShadows","text":"<p><code>thisLayer.lightOption.castsShadows</code></p>"},{"location":"objects/light/#description","title":"Description","text":"<p>Returns whether the light casts shadows.</p>"},{"location":"objects/light/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/light/#lightcolor","title":"Light.color","text":"<p><code>thisLayer.lightOption.color</code></p>"},{"location":"objects/light/#description_1","title":"Description","text":"<p>Returns the color value of a light.</p>"},{"location":"objects/light/#type_1","title":"Type","text":"<p>Array (4-dimensional)</p>"},{"location":"objects/light/#lightconeangle","title":"Light.coneAngle","text":"<p><code>thisLayer.lightOption.coneAngle</code></p>"},{"location":"objects/light/#description_2","title":"Description","text":"<p>Returns the cone angle of a light, in degrees.</p>"},{"location":"objects/light/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightconefeather","title":"Light.coneFeather","text":"<p><code>thisLayer.lightOption.coneFeather</code></p>"},{"location":"objects/light/#description_3","title":"Description","text":"<p>Returns the cone feather value of a light as a percentage.</p>"},{"location":"objects/light/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightfalloff","title":"Light.falloff","text":"<p><code>thisLayer.lightOption.falloff</code></p>"},{"location":"objects/light/#description_4","title":"Description","text":"<p>Returns the cone falloff dropdown option.</p>"},{"location":"objects/light/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightfalloffdistance","title":"Light.falloffDistance","text":"<p><code>thisLayer.lightOption.falloffDistance</code></p>"},{"location":"objects/light/#description_5","title":"Description","text":"<p>Returns the falloff distance of a light.</p>"},{"location":"objects/light/#type_5","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightintensity","title":"Light.intensity","text":"<p><code>thisLayer.lightOption.intensity</code></p>"},{"location":"objects/light/#description_6","title":"Description","text":"<p>Returns the intensity values of a light as a percentage.</p>"},{"location":"objects/light/#type_6","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightpointofinterest","title":"Light.pointOfInterest","text":"<p><code>thisLayer.lightOption.pointOfInterest</code></p>"},{"location":"objects/light/#description_7","title":"Description","text":"<p>Returns the point of interest values for a light in world space.</p>"},{"location":"objects/light/#type_7","title":"Type","text":"<p>Array (3-dimensional)</p>"},{"location":"objects/light/#lightradius","title":"Light.radius","text":"<p><code>thisLayer.lightOption.radius</code></p>"},{"location":"objects/light/#description_8","title":"Description","text":"<p>Returns the radius values of a light.</p>"},{"location":"objects/light/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightshadowdarkness","title":"Light.shadowDarkness","text":"<p><code>thisLayer.lightOption.shadowDarkness</code></p>"},{"location":"objects/light/#description_9","title":"Description","text":"<p>Returns the shadow darkness value of a light as a percentage.</p>"},{"location":"objects/light/#type_9","title":"Type","text":"<p>Number</p>"},{"location":"objects/light/#lightshadowdiffusion","title":"Light.shadowDiffusion","text":"<p><code>thisLayer.lightOption.shadowDiffusion</code></p>"},{"location":"objects/light/#description_10","title":"Description","text":"<p>Returns the shadow diffusion value of a light, in pixels.</p>"},{"location":"objects/light/#type_10","title":"Type","text":"<p>Number</p>"},{"location":"objects/marker-property/","title":"Marker Property","text":"<p><code>thisComp.marker</code></p> <p><code>comp(\"CompName\").marker</code></p> <p><code>layer(\"precompName\").source.marker</code></p> <p><code>thisLayer.marker</code></p> <p>The Marker Property is a special version of the Property object specifically for composition &amp; layer markers.</p> <p>It contains a special version of some of the same attributes and methods as the standard Property object, however most elements are not applicable here.</p> <p>Info</p> <p>On this page, we're going to use <code>thisComp.marker</code> as a sample on how to call these items, however note that any method that returns a Marker Property will work.</p>"},{"location":"objects/marker-property/#attributes","title":"Attributes","text":""},{"location":"objects/marker-property/#markernumkeys","title":"Marker.numKeys","text":"<p><code>thisComp.marker.numKeys</code></p>"},{"location":"objects/marker-property/#description","title":"Description","text":"<p>Returns the total number of markers in this composition or layer.</p>"},{"location":"objects/marker-property/#type","title":"Type","text":"<p>Number</p>"},{"location":"objects/marker-property/#methods","title":"Methods","text":""},{"location":"objects/marker-property/#markerkeyindex","title":"Marker.key(index)","text":"<p><code>thisComp.marker.key(index)</code></p> <p><code>thisComp.marker.key(name)</code></p>"},{"location":"objects/marker-property/#description_1","title":"Description","text":"<p>Returns the MarkerKey object of the marker with the specified <code>index</code> or <code>name</code>.</p> <p>The <code>index</code> refers to the order of the marker in composition time, not to the numbered name of the marker.</p> <p>The <code>name</code> value is the name of the marker, as typed in the comment field in the marker dialog box. For example, <code>marker.key(\"1\")</code>.</p> <p>If more than one marker has the same name, this method returns the marker that occurs first in time (in composition or layer time, depending on whether this is a composition or layer marker).</p>"},{"location":"objects/marker-property/#parameters","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>index</code></p> <p>Number</p> <p>The marker index to get</p> <p><code>name</code></p> <p><code>index</code></p> <p>String</p> <p>Number</p> <p>Marker name or index to access marker by.</p>"},{"location":"objects/marker-property/#type_1","title":"Type","text":"<p>MarkerKey</p>"},{"location":"objects/marker-property/#example","title":"Example","text":"<p>Return the time of the first composition marker:</p> <pre><code>thisComp.marker.key(1).time;\n</code></pre> <p>Return the time of the layer marker with the name \"0\":</p> <pre><code>thisLayer.marker.key(\"0\").time;\n</code></pre> <p>On a layer, ramp the value of the property from <code>0</code> to <code>100</code> between two markers identified by name:</p> <pre><code>const m1 = thisLayr.marker.key(\"Start\").time;\nconst m2 = thisLayr.marker.key(\"End\").time;\nlinear(time, m1, m2, 0, 100);\n</code></pre>"},{"location":"objects/marker-property/#markernearestkey","title":"Marker.nearestKey()","text":"<p><code>thisComp.marker.nearestKey(t)</code></p>"},{"location":"objects/marker-property/#description_2","title":"Description","text":"<p>Returns the marker that is nearest in comp or layer time to the provided time <code>t</code>.</p>"},{"location":"objects/marker-property/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>t</code> Number The time to find the nearest marker from"},{"location":"objects/marker-property/#returns","title":"Returns","text":"<p>MarkerKey</p>"},{"location":"objects/marker-property/#example_1","title":"Example","text":"<p>Return the time of the composition marker nearest to the time of 1 second:</p> <pre><code>thisComp.marker.nearestKey(1).time;\n</code></pre> <p>This expression returns the time of the layer marker nearest to the current comp time:</p> <pre><code>thisLayer.marker.nearestKey(time).time;\n</code></pre>"},{"location":"objects/markerkey/","title":"MarkerKey","text":"<p><code>thisComp.marker.key(1)</code></p> <p>You can access values for composition markers and layer markers using the same methods. Access layer markers through the thisLayer.marker object; access composition markers through the Marker Property object.</p> <p>For the purpose of expressions, markers are a special type of Key object, so you can use methods such as <code>nearestKey(time)</code> to access markers, and markers also have <code>time</code> and <code>index</code> attributes. The <code>index</code> attribute is not the number (name) of the marker; it is the keyframe index number, representing the order of the marker in the time ruler.</p> <p>Expressions have access to all the values for a marker that you can set in the Composition Marker or Layer Marker dialog box.</p> <p>Because the XMP metadata in a footage item can be converted into layer markers for a layer based on that item, expressions can interact with XMP metadata. For information, see XMP metadata in After Effects.</p> <p>Dan Ebberts provides a tutorial on the After Effects Developer Center that includes an example of using XMP metadata with expressions.</p> <p>Info</p> <p>On this page, we're going to use <code>thisComp.marker.key(1)</code> as a sample on how to call these items, however note that any method that returns a MarkerKey will work.</p>"},{"location":"objects/markerkey/#attributes","title":"Attributes","text":""},{"location":"objects/markerkey/#markerkeychapter","title":"MarkerKey.chapter","text":"<p><code>thisComp.marker.key(1).chapter</code></p>"},{"location":"objects/markerkey/#description","title":"Description","text":"<p>Contents of Chapter field in marker dialog box.</p>"},{"location":"objects/markerkey/#type","title":"Type","text":"<p>String</p>"},{"location":"objects/markerkey/#markerkeycomment","title":"MarkerKey.comment","text":"<p><code>thisComp.marker.key(1).comment</code></p>"},{"location":"objects/markerkey/#description_1","title":"Description","text":"<p>Contents of Comment field in marker dialog box.</p>"},{"location":"objects/markerkey/#type_1","title":"Type","text":"<p>String</p>"},{"location":"objects/markerkey/#markerkeycuepointname","title":"MarkerKey.cuePointName","text":"<p><code>thisComp.marker.key(1).cuePointName</code></p>"},{"location":"objects/markerkey/#description_2","title":"Description","text":"<p>Contents of cue point Name field in marker dialog box.</p>"},{"location":"objects/markerkey/#type_2","title":"Type","text":"<p>String</p>"},{"location":"objects/markerkey/#markerkeyduration","title":"MarkerKey.duration","text":"<p><code>thisComp.marker.key(1).duration</code></p>"},{"location":"objects/markerkey/#description_3","title":"Description","text":"<p>Duration, in seconds, of marker.</p>"},{"location":"objects/markerkey/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"objects/markerkey/#markerkeyeventcuepoint","title":"MarkerKey.eventCuePoint","text":"<p><code>thisComp.marker.key(1).eventCuePoint</code></p>"},{"location":"objects/markerkey/#description_4","title":"Description","text":"<p>Setting for cue point type in marker dialog box.</p> <p><code>true</code> for Event; <code>false</code> for Navigation.</p>"},{"location":"objects/markerkey/#type_4","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/markerkey/#markerkeyframetarget","title":"MarkerKey.frameTarget","text":"<p><code>thisComp.marker.key(1).frameTarget</code></p>"},{"location":"objects/markerkey/#description_5","title":"Description","text":"<p>Contents of Frame Target field in marker dialog box.</p>"},{"location":"objects/markerkey/#type_5","title":"Type","text":"<p>String</p>"},{"location":"objects/markerkey/#markerkeyparameters","title":"MarkerKey.parameters","text":"<p><code>thisComp.marker.key(1).parameters</code></p>"},{"location":"objects/markerkey/#description_6","title":"Description","text":"<p>Contents of Parameter Name and Parameter Value fields in marker dialog box.</p>"},{"location":"objects/markerkey/#type_6","title":"Type","text":"<p>Associative array of String values</p>"},{"location":"objects/markerkey/#example","title":"Example","text":"<p>If you have a parameter named \"background color\", then you can use the following expression to access its value at the nearest marker:</p> <pre><code>thisComp.marker.nearestKey(time).parameters[\"background color\"];\n</code></pre>"},{"location":"objects/markerkey/#markerkeyprotectedregion","title":"MarkerKey.protectedRegion","text":"<p><code>thisComp.marker.key(1).protectedRegion</code></p> <p>Note</p> <p>This functionality was added in After Effects 16.0</p>"},{"location":"objects/markerkey/#description_7","title":"Description","text":"<p>State of the Protected Region option in the Composition Marker dialog box.</p> <p>When <code>true</code>, the composition marker behaves as a protected region.</p> <p>Will also return <code>true</code> for protected region markers on nested composition layers, but is otherwise not applicable to layer markers.</p>"},{"location":"objects/markerkey/#type_7","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/markerkey/#markerkeyurl","title":"MarkerKey.url","text":"<p><code>thisComp.marker.key(1).url</code></p>"},{"location":"objects/markerkey/#description_8","title":"Description","text":"<p>Contents of URL field in marker dialog box.</p>"},{"location":"objects/markerkey/#type_8","title":"Type","text":"<p>String</p>"},{"location":"objects/markerkey/#example_1","title":"Example","text":"<p>This expression on the Source Text property of a text layer displays the time, duration, index, comment (name), chapter, URL, frame target, and cue point name for the layer marker nearest the current time, and whether the marker is for an event cue point:</p> <pre><code>const m = thisLayer.marker.nearestKey(time);\nconst s = [\n    \"time:\" + timeToCurrentFormat(m.time),\n    \"duration: \" + m.duration,\n    \"key index: \" + m.index,\n    \"comment:\" + m.comment,\n    \"chapter:\" + m.chapter,\n    \"URL:\" + m.url,\n    \"frame target: \" + m.frameTarget,\n    \"cue point name: \" + m.cuePointName,\n    \"Event cue point? \" + m.eventCuePoint,\n    \"\"\n];\n\nfor (let param in m.parameters){\n    s.push(\"parameter: \" + param + \" value: \" + m.parameters[param]);\n}\n\ns.join(\"\\n\");\n</code></pre>"},{"location":"objects/mask/","title":"Mask","text":"<p><code>thisLayer.mask(\"Mask 1\")</code></p> <p>This category contains information relating to mask objects. To manipulate the actual mask path, see Mask Path.</p> <p>Note</p> <p>You can link Mask Path properties to other path properties (paths in a shape layer and brush strokes), but the properties are not accessible for direct numerical manipulation through expressions.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer.mask(\"Mask 1\")</code> as a sample on how to call these items, however note that any method that returns a Mask will work.</p>"},{"location":"objects/mask/#attributes","title":"Attributes","text":""},{"location":"objects/mask/#maskinvert","title":"Mask.invert","text":"<p><code>thisLayer.mask(\"Mask 1\").invert</code></p>"},{"location":"objects/mask/#description","title":"Description","text":"<p>Returns <code>true</code> if the mask is inverted or <code>false</code> if it is not.</p>"},{"location":"objects/mask/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/mask/#maskmaskexpansion","title":"Mask.maskExpansion","text":"<p><code>thisLayer.mask(\"Mask 1\").maskExpansion</code></p>"},{"location":"objects/mask/#description_1","title":"Description","text":"<p>Returns the expansion value of a mask, in pixels.</p>"},{"location":"objects/mask/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/mask/#maskmaskfeather","title":"Mask.maskFeather","text":"<p><code>thisLayer.mask(\"Mask 1\").maskFeather</code></p>"},{"location":"objects/mask/#description_2","title":"Description","text":"<p>Returns the feather value of a mask, in pixels.</p>"},{"location":"objects/mask/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/mask/#maskmaskopacity","title":"Mask.maskOpacity","text":"<p><code>thisLayer.mask(\"Mask 1\").maskOpacity</code></p>"},{"location":"objects/mask/#description_3","title":"Description","text":"<p>Returns the opacity value of a mask as a percentage.</p>"},{"location":"objects/mask/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"objects/mask/#maskmaskpath","title":"Mask.maskPath","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath</code></p>"},{"location":"objects/mask/#description_4","title":"Description","text":"<p>Returns the actual mask Path.</p>"},{"location":"objects/mask/#type_4","title":"Type","text":"<p>Path object</p>"},{"location":"objects/path-property/","title":"Path Property","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath</code></p> <p><code>thisLayer.content(\"Shape 1\").content(\"Path 1\").path;</code></p> <p>Note</p> <p>This functionality was added in After Effects 15.0 (CC)</p> <p>This category contains information relating to mask &amp; shape paths.</p> <p>Info</p> <p>On this page, we're going to use <code>thisLayer.mask(\"Mask 1\").maskPath</code> as a sample on how to call these items, however note that any method that returns a Path will work.</p>"},{"location":"objects/path-property/#attributes","title":"Attributes","text":""},{"location":"objects/path-property/#name","title":"name","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.name</code></p>"},{"location":"objects/path-property/#description","title":"Description","text":"<p>Returns the name of the property.</p>"},{"location":"objects/path-property/#type","title":"Type","text":"<p>String</p>"},{"location":"objects/path-property/#methods","title":"Methods","text":""},{"location":"objects/path-property/#pathpropertycreatepath","title":"PathProperty.createPath()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.createPath(points=[[0,0], [100,0], [100,100], [0,100]], inTangents=[], outTangents=[], is_closed=true)</code></p>"},{"location":"objects/path-property/#description_1","title":"Description","text":"<p>Creates a path object from a set of points and tangents.</p> <p>The <code>points()</code>, <code>inTangents()</code>, <code>outTangents()</code>, and <code>isClosed()</code> methods of a path can be passed into the <code>points</code>, <code>inTangents</code>, <code>outTangents</code>, and <code>is_closed</code> parameters to duplicate a path.</p> <p>The points and tangents of the same path can be passed into <code>createPath()</code> with modifications to generate a different result.</p>"},{"location":"objects/path-property/#parameters","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>points</code></p> <p>Array of number pair arrays</p> <p>Optional. An array of number pair arrays representing the <code>[x, y]</code> coordinates of the points. The array must contain at least 1 item, and can be of any greater length. Defaults to <code>[[0,0], [100,0], [100,100], [0,100]]</code>.</p> <p><code>inTangents</code></p> <p>Array of number pair arrays</p> <p>Optional. An array of number pair arrays representing their <code>[x, y]</code> offset coordinates. The length of this array must be exactly the same as the <code>points</code> parameter. Defaults to <code>[]</code>.</p> <p>Coordinate values are offset relative to the parent point's coordinates. i.e. The value <code>[0, 0]</code> creates no curvature at the incoming tangent.</p> <p><code>outTangents</code> <code>is_closed</code></p> <p>Array of number pair arrays Boolean</p> <p>Optional. See <code>inTangents</code>. Defaults to <code>[]</code>. Optional. Defaults to <code>true</code>.</p>"},{"location":"objects/path-property/#returns","title":"Returns","text":"<p>Path</p>"},{"location":"objects/path-property/#example","title":"Example","text":"<p>For example, the following expression will remove curves from Mask 1 by not passing the inTangents or outTangents parameters:</p> <pre><code>const myMask = mask(\"Mask 1\").path;\nmyMask.createPath(myMask.points());\n</code></pre> <p>The following example passes the points and tangents of Mask 1 and converts it to an open path by setting <code>is_closed</code> to <code>false</code>:</p> <pre><code>const myMask = mask(\"Mask 1\").path;\nmyMask.createPath(myMask.points(), myMask.inTangents(), myMask.outTangents(), false);\n</code></pre>"},{"location":"objects/path-property/#pathpropertyintangents","title":"PathProperty.inTangents()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.inTangents([t=time])</code></p>"},{"location":"objects/path-property/#description_2","title":"Description","text":"<p>Get the <code>[x, y]</code> coordinates of the incoming tangent handle for all points on a path.</p> <p>Tangent coordinate values are offset relative to the parent point's coordinates (i.e. the value <code>[0, 0]</code> creates no curvature at the incoming tangent).</p> <p>This method can be passed into the <code>createPath()</code> method for the <code>inTangents</code> parameter when duplicating a path.</p>"},{"location":"objects/path-property/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The specified time (in comp seconds) to sample the tangents. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_1","title":"Returns","text":"<p>Array of number pair arrays, rounded to the fourth decimal place</p>"},{"location":"objects/path-property/#pathpropertyisclosed","title":"PathProperty.isClosed()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.isClosed()</code></p>"},{"location":"objects/path-property/#description_3","title":"Description","text":"<p>Determines if the path is open or closed. Returns <code>true</code> if the path is closed, <code>false</code> if the path is open.</p> <p>This method can be passed into the <code>createPath()</code> method for the <code>is_closed</code> parameter when duplicating a path.</p>"},{"location":"objects/path-property/#returns_2","title":"Returns","text":"<p>Boolean</p>"},{"location":"objects/path-property/#pathpropertynormalonpath","title":"PathProperty.normalOnPath()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.normalOnPath(percentage=0.5, t=time)</code></p>"},{"location":"objects/path-property/#description_4","title":"Description","text":"<p>Get the calculated <code>[x, y]</code> coordinates of the normal for an arbitrary point along a path.</p> <p>Coordinate values of normals are offset relative to the parent point's coordinates (i.e. the value <code>[0, 0]</code> is the same as the parent point).</p> <p>The normal's parent point is expressed as a percentage of the arc-length of the path. Read the description of the <code>pointOnPath()</code> method for details about arc-length percentage.</p> <p>The linear distance between the parent point's coordinates and <code>normalOnPath()</code> coordinates will always be <code>1</code>.</p>"},{"location":"objects/path-property/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>percentage</code> Number Optional. The percentage along the path at which to sample the normal. Defaults to <code>0.5</code> (50%). <code>t</code> Number Optional. The specified time (in comp seconds) to sample the path. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_3","title":"Returns","text":"<p>A number pair array</p>"},{"location":"objects/path-property/#example_1","title":"Example","text":"<p>Sample a normal and make it longer:</p> <pre><code>myPath.normalOnPath() * 100\n</code></pre>"},{"location":"objects/path-property/#pathpropertyouttangents","title":"PathProperty.outTangents()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.outTangents([t=time])</code></p>"},{"location":"objects/path-property/#description_5","title":"Description","text":"<p>Get the <code>[x, y]</code> coordinates of the outgoing tangent handle for all points on a path.</p> <p>Tangent coordinate values are offset relative to the parent point's coordinates (i.e. the value <code>[0, 0]</code> creates no curvature at the outgoing tangent).</p> <p>This method can be passed into the <code>createPath()</code> method for the <code>outTangents</code> parameter when duplicating a path.</p>"},{"location":"objects/path-property/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The specified time (in comp seconds) to sample the tangents. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_4","title":"Returns","text":"<p>Array of number pair arrays, rounded to the fourth decimal place</p>"},{"location":"objects/path-property/#pathpropertypointonpath","title":"PathProperty.pointOnPath()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.pointOnPath([percentage=0.5][, t=time])</code></p>"},{"location":"objects/path-property/#description_6","title":"Description","text":"<p>Get the <code>[x, y]</code> coordinates of an arbitrary point along a path.</p> <p>The point is expressed as a percentage of the arc-length of the path. <code>0.0</code> (0%) is the first point and <code>1.0</code> (100%) is the last point. When the path is closed, 0% and 100% will return the same coordinates.</p> <p>Info</p> <p>Percentage of arc-length is used to ensure uniform speed along the path.</p> <p>Other than 0% and 100%, percentages do not necessarily correlate with the Bezier points on the path. (i.e., For a path with three points, the second point will not necessarily be at 50%.)</p> <p>This also means that for an open path and closed path with identical points, the percentage along the open path will not return the same coordinates as the closed path due to the additional length of the closed path.</p> Parameter Type Description <code>percentage</code> Number Optional. The percentage along the path at which to sample the point. Defaults to <code>0.5</code> (50%). <code>t</code> Number Optional. The specified time (in comp seconds) to sample the path. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_5","title":"Returns","text":"<p>A number pair array</p>"},{"location":"objects/path-property/#pathpropertypoints","title":"PathProperty.points()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.points([t=time])</code></p>"},{"location":"objects/path-property/#description_7","title":"Description","text":"<p>Get the x,y coordinates of all points on a path.</p> <p>The returned values are relative, depending on the context: - Coordinates for layer mask path points are relative to the layer's origin in its upper-left hand corner. - Coordinates for Bezier shape path points are are relative to the anchor point of the path's shape group     - (ex., \"Transform: Shape 1 &gt; Anchor Point\"). - Coordinates for brush stroke path points are relative to the start of the stroke; the first point is <code>[0,0]</code>.     - This method can be passed into the <code>createPath()</code> method for the points parameter when duplicating a path.</p>"},{"location":"objects/path-property/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>t</code> Number Optional. The specified time (in comp seconds) to sample the path. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_6","title":"Returns","text":"<p>Array of number pair arrays, rounded to the fourth decimal place</p>"},{"location":"objects/path-property/#example_2","title":"Example","text":"<p>Read the coordinates of the first vertex of Mask 1 on Dark Gray Solid 1 and converts them to composition coordinates.</p> <p>Apply this to a 2D point control of an effect, such as Write-on or CC Particle Systems II, to make the effect trace or track the first point of an animated mask.</p> <p>Duplicate the effect and change the path points index value ([0]) to trace or track the other points of the mask.</p> <pre><code>const myLayer = thisComp.layer(\"Dark Gray Solid 1\");\nmyLayer.toComp(myLayer.mask(\"Mask 1\").maskPath.points()[0]);\n</code></pre>"},{"location":"objects/path-property/#pathpropertytangentonpath","title":"PathProperty.tangentOnPath()","text":"<p><code>thisLayer.mask(\"Mask 1\").maskPath.tangentOnPath([percentage=0.5][, t=time])</code></p>"},{"location":"objects/path-property/#description_8","title":"Description","text":"<p>Get the calculated <code>[x, y]</code> coordinates of the outgoing tangent handle for an arbitrary point along a path.</p> <p>Tangent coordinate values are offset relative to the parent point's coordinates (i.e. the value [0, 0] creates no curvature at the outgoing tangent). Values will differ from those returned by <code>outTangents()</code> if a user-defined point also exists at that arc-length pecentage.</p> <p>The incoming tangent handle is the inverse of this value (multiply the <code>[x, y]</code> coordinates by <code>-1</code>).</p> <p>The tangent's parent point is expressed as a percentage of the arc-length of the path. Read the description of the <code>pointOnPath()</code> method for details about arc-length percentage.</p> <p>The linear distance between the parent point's coordinates and <code>tangentOnPath()</code> coordinates will always be <code>1</code>.</p>"},{"location":"objects/path-property/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>percentage</code> Number Optional. The percentage along the path at which to sample the tangent. Defaults to <code>0.5</code> (50%). <code>t</code> Number Optional. The specified time (in comp seconds) to sample the path. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/path-property/#returns_7","title":"Returns","text":"<p>A number pair array</p>"},{"location":"objects/path-property/#example_3","title":"Example","text":"<p>Sample a tangent and make it longer:</p> <pre><code>myPath.tangentOnPath() * 100\n</code></pre>"},{"location":"objects/path-property/#example_4","title":"Example","text":"<p>Writes the list of point and tangent coordinates from Path 1 of Shape 1 on layer Shape Layer 1, at <code>time=0</code>, into a string.</p> <p>Apply this to the source text property of a text layer for a readout of the coordinates and incoming and outgoing tangents of the shape.</p> <pre><code>let pointsList = \"\";\nconst sampleTime = 0;\nconst myShape = thisComp.layer(\"Shape Layer 1\").content(\"Shape 1\").content(\"Path 1\").path;\n\nfor (i = 0; i &lt; myShape.points(sampleTime).length; i++) {\n    pointsList += \"c: \" + myShape.points(sampleTime)[i].toString() + \" i: \" + myShape.inTangents(sampleTime)[i].toString() + \" o: \" + myShape.outTangents(sampleTime)[i].toString() + \"\\n\";\n}\n\npointsList;\n</code></pre>"},{"location":"objects/project/","title":"Project","text":"<p><code>thisProject</code></p> <p>This category holds info related to your current project as a whole -- that is, the current AEP. Thus, changing the corresponding project settings will also update the values that these expressions return.</p>"},{"location":"objects/project/#attributes","title":"Attributes","text":""},{"location":"objects/project/#projectbitsperchannel","title":"Project.bitsPerChannel","text":"<p><code>thisProject.bitsPerChannel</code></p>"},{"location":"objects/project/#description","title":"Description","text":"<p>The color depth of the project in bits per channel (bpc), as set in Project Settings &gt; Color Management</p> <p>They are one of 8, 16, or 32. Equivalent to the scripting project attribute <code>app.project.bitsPerChannel</code>.</p>"},{"location":"objects/project/#type","title":"Type","text":"<p>Number</p>"},{"location":"objects/project/#example","title":"Example","text":"<pre><code>thisProject.bitsPerChannel\n</code></pre>"},{"location":"objects/project/#projectfullpath","title":"Project.fullPath","text":"<p><code>thisProject.fullPath</code></p>"},{"location":"objects/project/#description_1","title":"Description","text":"<p>The platform-specific absolute file path, including the project file name. If the project has not been saved, it returns an empty string.</p>"},{"location":"objects/project/#type_1","title":"Type","text":"<p>String</p>"},{"location":"objects/project/#example_1","title":"Example","text":"<pre><code>thisProject.fullPath\n</code></pre>"},{"location":"objects/project/#projectlinearblending","title":"Project.linearBlending","text":"<p><code>thisProject.linearBlending</code></p>"},{"location":"objects/project/#description_2","title":"Description","text":"<p>The state of the Blend Colors Using 1.0 Gamma option in Project Settings &gt; Color Management.</p> <p>Equivalent to the scripting project attribute <code>app.project.linearBlending</code>.</p>"},{"location":"objects/project/#type_2","title":"Type","text":"<p>Boolean</p>"},{"location":"objects/project/#example_2","title":"Example","text":"<pre><code>thisProject.linearBlending\n</code></pre>"},{"location":"objects/property/","title":"Property","text":"<p>This category holds generic entries relating to generic properties.</p> <p>In expressions, a Property is typically anything that exists in the timeline (even if it can't be keyframed, or hold an expression).</p> Examples of Properties <p>All of the following AE items are actually \"Properties\" for the use of expressions, along with some ways to access those properties by code:</p> <ul> <li>Position (<code>thisLayer.transform.position</code>, <code>layer.position</code>)</li> <li>Scale (<code>thisLayer.transform.scale</code>, <code>layer.scale</code>)</li> <li>A slider effect's actual slider (<code>effect(\"Slider Control\")(\"Slider\")</code>, <code>effect(\"Slider Control\")(1)</code>)</li> <li>A text layer's Text property (<code>thisLayer.text</code>)<ul> <li>Note that in this case, Text also has its own special items, found in the above link.</li> </ul> </li> </ul> <p>Info</p> <p>On this page, we're going to use <code>thisLayer.position</code> as a sample on how to call these items, however note that any method that returns a Property will work.</p>"},{"location":"objects/property/#attributes","title":"Attributes","text":""},{"location":"objects/property/#name","title":"name","text":"<p><code>thisLayer.position.name</code></p>"},{"location":"objects/property/#description","title":"Description","text":"<p>Returns the name of the property or property group.</p>"},{"location":"objects/property/#type","title":"Type","text":"<p>String</p>"},{"location":"objects/property/#numkeys","title":"numKeys","text":"<p><code>thisLayer.position.numKeys</code></p>"},{"location":"objects/property/#description_1","title":"Description","text":"<p>Returns the number of keyframes on a property, or the number of markers on a marker property.</p> <p>Note</p> <p>If you use the Separate Dimensions command to separate the dimensions of the Position property into individual components, the number of keyframes changes, so the value returned by this method changes.</p>"},{"location":"objects/property/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/property/#propertyindex","title":"propertyIndex","text":"<p><code>thisLayer.position.propertyIndex</code></p>"},{"location":"objects/property/#description_2","title":"Description","text":"<p>Returns the index of a property relative to other properties in its property group, including property groups within masks, effects, text animators, selectors, shapes, trackers, and track points.</p>"},{"location":"objects/property/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/property/#speed","title":"speed","text":"<p><code>thisLayer.position.speed</code></p>"},{"location":"objects/property/#description_3","title":"Description","text":"<p>Returns a 1-dimensional, positive speed value equal to the speed at which the property is changing at the default time.</p> <p>Note</p> <p>This can be used only for spatial properties.</p>"},{"location":"objects/property/#type_3","title":"Type","text":"<p>Number</p>"},{"location":"objects/property/#value","title":"value","text":"<p><code>thisLayer.position.value</code></p>"},{"location":"objects/property/#description_4","title":"Description","text":"<p>Returns the value of a property at the current time.</p>"},{"location":"objects/property/#type_4","title":"Type","text":"<p>Number, Array, or String</p>"},{"location":"objects/property/#velocity","title":"velocity","text":"<p><code>thisLayer.position.velocity</code></p>"},{"location":"objects/property/#description_5","title":"Description","text":"<p>Returns the temporal velocity value at the current time. For spatial properties, such as Position, it returns the tangent vector value. The result is the same dimension as the property.</p>"},{"location":"objects/property/#type_5","title":"Type","text":"<p>Number or Array</p>"},{"location":"objects/property/#methods","title":"Methods","text":""},{"location":"objects/property/#key","title":"key()","text":"<p><code>thisLayer.position.key(index)</code></p>"},{"location":"objects/property/#description_6","title":"Description","text":"<p>Returns the Key or MarkerKey object by index number.</p>"},{"location":"objects/property/#parameters","title":"Parameters","text":"Parameter Type Description <code>index</code> Number The key (or MarkerKey) index number"},{"location":"objects/property/#returns","title":"Returns","text":"<p>Key or MarkerKey</p>"},{"location":"objects/property/#example","title":"Example","text":"<p>To retrieve the first keyframe on a property:</p> <pre><code>thisLayer.scale.key(1);\n</code></pre> <p>To retrieve the last keyframe on a property:</p> <pre><code>thisLayer.rotation.key(thisLayer.rotation.numKeys);\n</code></pre>"},{"location":"objects/property/#key_1","title":"key()","text":"<p><code>thisLayer.position.key(markerName)</code></p>"},{"location":"objects/property/#description_7","title":"Description","text":"<p>Returns the MarkerKey object with this name.</p> <p>Note</p> <p>This can be used only on marker properties.</p>"},{"location":"objects/property/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>markerName</code> String The name of the marker to return the matching key of."},{"location":"objects/property/#returns_1","title":"Returns","text":"<p>MarkerKey</p>"},{"location":"objects/property/#loopin","title":"loopIn()","text":"<p><code>thisLayer.position.loopIn([type=\"cycle\"][, numKeyframes=0])</code></p>"},{"location":"objects/property/#description_8","title":"Description","text":"<p>Loops a segment of time that is measured from the first keyframe on the layer forward toward the Out point of the layer. The loop plays from the In point of the layer.</p> <p>You can use keyframe-looping methods to repeat a series of keyframes. You can use these methods on most properties. Exceptions include:     - properties that can't be expressed by simple numeric values in the Timeline panel, such as:         - the Source Text property,         - path shape properties, and         - the Histogram property for the Levels effect.</p> <p>Keyframes or duration values that are too large are clipped to the maximum allowable value. Values that are too small result in a constant loop.</p>"},{"location":"objects/property/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>type</code> Predefined string as defined in Loop Types Optional. The loop type to use. Defaults to <code>\"cycle\"</code> <code>numKeyframes</code> Number Optional. The segment to loop, from keyframe #1 to keyframe #<code>numKeyframes + 1</code>. If unspecified (or <code>0</code>), all keyframes loop. Defaults to <code>0</code>."},{"location":"objects/property/#returns_2","title":"Returns","text":"<p>A looped value of the same property type as this current property.</p>"},{"location":"objects/property/#example_1","title":"Example","text":"<p>To loop the segment bounded by the first and fourth keyframes:</p> <pre><code>loopIn(\"cycle\", 3);\n</code></pre> <p>To loop forward and backward indefinitely from your current keyframes:</p> <pre><code>loopIn(\"continue\") + loopOut(\"continue\") - value;\n</code></pre> <p>Note that we need to subtract <code>value</code>, because both <code>loopIn()</code> and <code>loopOut()</code> include the current value; by adding them, we have two copies of the current value, and need to remove one (the <code>- value</code>) to get back to the proper keyframe value.</p>"},{"location":"objects/property/#loopinduration","title":"loopInDuration()","text":"<p><code>thisLayer.position.loopInDuration([type=\"cycle\"][, duration=0])</code></p>"},{"location":"objects/property/#description_9","title":"Description","text":"<p>Loops a segment of time that is measured from the first keyframe on the layer forward toward the Out point of the layer.</p>"},{"location":"objects/property/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>type</code> Predefined string as defined in Loop Types Optional. The loop type to use. Defaults to <code>\"cycle\"</code> <code>duration</code> Number Optional. The number of composition seconds in a segment to loop, measured from the first keyframe. If unspecified (or <code>0</code>), the segment to loop begins at the layer Out point. Defaults to <code>0</code>."},{"location":"objects/property/#returns_3","title":"Returns","text":"<p>A looped value of the same property type as this current property.</p>"},{"location":"objects/property/#example_2","title":"Example","text":"<p>To loop the first second of the entire animation:</p> <pre><code>loopInDuration(\"cycle\", 1);\n</code></pre>"},{"location":"objects/property/#loopout","title":"loopOut()","text":"<p><code>thisLayer.position.loopOut([type=\"cycle\"][, numKeyframes=0])</code></p>"},{"location":"objects/property/#description_10","title":"Description","text":"<p>Loops a segment of time that is measured from the last keyframe on the layer back toward the In point of the layer. The loop plays until the Out point of the layer.</p> <p>Info</p> <p>David Van Brink provides an instructional article and sample project on his omino pixel blog that show how to use the Echo effect, the Particle Playground effect, and the <code>loopOut()</code> method to animate a swarm of stylized swimming bacteria.</p>"},{"location":"objects/property/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>type</code> Predefined string as defined in Loop Types Optional. The loop type to use. Defaults to <code>\"cycle\"</code> <code>numKeyframes</code> Number Optional. The segment to loop, measured backward from the last keyframe. If unspecified (or <code>0</code>), all keyframes loop. Defaults to <code>0</code>."},{"location":"objects/property/#returns_4","title":"Returns","text":"<p>A looped value of the same property type as this current property.</p>"},{"location":"objects/property/#example_3","title":"Example","text":"<p>To loop the segment bounded by the last keyframe and second-to-last keyframe:</p> <pre><code>loopOut(\"cycle\", 1);\n</code></pre>"},{"location":"objects/property/#loopoutduration","title":"loopOutDuration()","text":"<p><code>thisLayer.position.loopOutDuration([type=\"cycle\"][, duration=0])</code></p>"},{"location":"objects/property/#description_11","title":"Description","text":"<p>Loops a segment of time that is measured from the last keyframe on the layer back toward the In point of the layer. The loop plays until the Out point of the layer.</p>"},{"location":"objects/property/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>type</code> Predefined string as defined in Loop Types Optional. The loop type to use. Defaults to <code>\"cycle\"</code> <code>duration</code> Number Optional. The number of composition seconds in a segment to loop, measured backward from the last keyframe. If unspecified (or <code>0</code>), the segment to loop begins at the layer In point. Defaults to <code>0</code>."},{"location":"objects/property/#returns_5","title":"Returns","text":"<p>A looped value of the same property type as this current property.</p>"},{"location":"objects/property/#example_4","title":"Example","text":"<p>To loop the last second of the entire animation:</p> <pre><code>loopOutDuration(\"cycle\", 1);\n</code></pre>"},{"location":"objects/property/#nearestkey","title":"nearestKey()","text":"<p><code>thisLayer.position.nearestKey(t)</code></p>"},{"location":"objects/property/#description_12","title":"Description","text":"<p>Returns the Key or MarkerKey object nearest to a designated time <code>t</code>.</p>"},{"location":"objects/property/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>t</code> Number The time to find the nearest key from"},{"location":"objects/property/#returns_6","title":"Returns","text":"<p>Key or MarkerKey</p>"},{"location":"objects/property/#example_5","title":"Example","text":"<p>Get the nearest keyframe to the 2-second time in the comp:</p> <pre><code>const twoSecondKey = thisLayer.scale.nearestKey(2);\n\n// and then, to get the value of that key:\ntwoSecondKey.value;\n</code></pre>"},{"location":"objects/property/#propertygroup","title":"propertyGroup()","text":"<p><code>thisLayer.position.propertyGroup([countUp=1])</code></p>"},{"location":"objects/property/#description_13","title":"Description","text":"<p>Returns a group of properties relative to the property on which the expression is written.</p> <p>For example, if you add the <code>propertyGroup(1)</code> expression to the Rotation property of a brush stroke, the expression targets the Transform property group, which contains the Rotation property. If you add <code>propertyGroup(2)</code> instead, the expression targets the Brush property group.</p> <p>This method lets you establish name-independent relationships in the property hierarchy. It is especially useful when duplicating properties that contain expressions.The <code>numProperties</code> method for <code>propertyGroup</code> returns the number of properties in the property group.</p>"},{"location":"objects/property/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>countUp</code> Number Optional. The number of property groups \"up\" the hierarchy to climb. Defaults to <code>1</code>."},{"location":"objects/property/#returns_7","title":"Returns","text":"<p>PropertyGroup object</p>"},{"location":"objects/property/#example_6","title":"Example","text":"<p>Return the number of properties in the group that contains the property on which this expression is written:</p> <pre><code>thisProperty.propertyGroup(1).numProperties;\n</code></pre>"},{"location":"objects/property/#smooth","title":"smooth()","text":"<p><code>thisLayer.position.smooth([width=.2][, samples=5][, t=time])</code></p>"},{"location":"objects/property/#description_14","title":"Description","text":"<p>Smooths the property values over time, converting large, brief deviations in the value to smaller, more evenly distributed deviations. This smoothing is accomplished by applying a box filter to the value of the property at the specified time.</p>"},{"location":"objects/property/#parameters_8","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>width</code></p> <p>Number</p> <p>Optional. The range of time (in seconds) over which the filter is averaged. Defaults to <code>0.2</code>.</p> <p><code>samples</code></p> <p>Number</p> <p>Optional. The number of discrete samples evenly spaced over time. Use a larger value for greater smoothness (but decreased performance). Defaults to <code>5</code>.</p> <p>Generally, you'll want samples to be an odd number so that the value at the current time is included in the average.</p> <p><code>t</code></p> <p>Number</p> <p>Optional. The specified time (in comp seconds) to apply the smoothing filter to. Defaults to <code>time</code> (the current comp time, in seconds).</p>"},{"location":"objects/property/#returns_8","title":"Returns","text":"<p>Number or Array</p>"},{"location":"objects/property/#example_7","title":"Example","text":"<p>To smooth a position property's animation:</p> <pre><code>position.smooth(0.1, 5)\n</code></pre>"},{"location":"objects/property/#speedattime","title":"speedAtTime()","text":"<p><code>thisLayer.position.speedAtTime(t)</code></p>"},{"location":"objects/property/#description_15","title":"Description","text":"<p>Returns the spatial speed value at the specified time.</p>"},{"location":"objects/property/#parameters_9","title":"Parameters","text":"Parameter Type Description <code>t</code> Number The specified time at which to get the spatial speed value."},{"location":"objects/property/#returns_9","title":"Returns","text":"<p>Number</p>"},{"location":"objects/property/#temporalwiggle","title":"temporalWiggle()","text":"<p><code>thisLayer.position.temporalWiggle(freq, amp[, octaves=1][, amp_mult=0.5][, t=time])</code></p>"},{"location":"objects/property/#description_16","title":"Description","text":"<p>Samples the property at a wiggled time.</p> <p>For this function to be meaningful, the property it samples must be animated, because the function alters only the time of sampling, not the value.</p>"},{"location":"objects/property/#parameters_10","title":"Parameters","text":"Parameter Type Description <code>freq</code> Number The frequency, in wiggles per second. <code>amp</code> Number The amplitude, in units of the property to which it is applied. <code>octaves</code> Number Optional. The number of octaves of noise to add together. Defaults to <code>1</code>. <code>amp_mult</code> Number Optional. The amount that <code>amp</code> is multiplied by for each octave. Defaults to <code>0.5</code>. <code>t</code> Number Optional. The base start time. Defaults to <code>time</code> (the current comp time, in seconds)."},{"location":"objects/property/#returns_10","title":"Returns","text":"<p>Number or Array</p>"},{"location":"objects/property/#example_8","title":"Example","text":"<p>To add a temporal wiggle to scale:</p> <pre><code>scale.temporalWiggle(5, 0.2)\n</code></pre>"},{"location":"objects/property/#valueattime","title":"valueAtTime()","text":"<p><code>thisLayer.position.valueAtTime(t)</code></p>"},{"location":"objects/property/#description_17","title":"Description","text":"<p>Returns the value of a property at the specified time, in seconds.</p> <p>Note</p> <p>Dan Ebberts provides more examples and techniques for using the <code>valueAtTime</code> and <code>velocityAtTime</code> methods on MotionScript.</p>"},{"location":"objects/property/#parameters_11","title":"Parameters","text":"Parameter Type Description <code>t</code> Number The time, in seconds, to get the value from"},{"location":"objects/property/#returns_11","title":"Returns","text":"<p>Number or Array</p>"},{"location":"objects/property/#example_9","title":"Example","text":"<p>For example, to have a property value for each frame chosen randomly from a set of four values, set your four values as keyframes at <code>0</code>, <code>1</code>, <code>2</code>, and <code>3</code> seconds, and then apply the following expression to the property:</p> <pre><code>valueAtTime(random(4))\n</code></pre>"},{"location":"objects/property/#velocityattime","title":"velocityAtTime()","text":"<p><code>thisLayer.position.velocityAtTime(t)</code></p>"},{"location":"objects/property/#description_18","title":"Description","text":"<p>Returns the temporal velocity value at the specified time.</p>"},{"location":"objects/property/#parameters_12","title":"Parameters","text":"Parameter Type Description <code>t</code> Number The time, in seconds, to get the temporal velocity from"},{"location":"objects/property/#returns_12","title":"Returns","text":"<p>Number or Array</p>"},{"location":"objects/property/#wiggle","title":"wiggle()","text":"<p><code>thisLayer.position.wiggle(freq, amp[, octaves=1][, amp_mult=0.5][, t=time])</code></p>"},{"location":"objects/property/#description_19","title":"Description","text":"<p>Randomly shakes (wiggles) the value of the property.</p> <p>Note</p> <p>Dan Ebberts provides an example expression and a detailed explanation on his website that shows how to use the time parameter of the wiggle method to create a looping animation.</p>"},{"location":"objects/property/#parameters_13","title":"Parameters","text":"<p>Parameter</p> <p>Type</p> <p>Description</p> <p><code>freq</code></p> <p>Number</p> <p>Frequency, in wiggles per second.</p> <p><code>amp</code></p> <p>Number</p> <p>Amplitude, in units of the property to which it is applied.</p> <p><code>octaves</code></p> <p>Number</p> <p>Optional. Number of octaves of noise to add together. This value controls how much detail is in the wiggle.</p> <p>Make this value higher than the default to include higher frequencies or lower to include amplitude harmonics in the wiggle. Defaults to <code>1</code>.</p> <p><code>amp_mult</code></p> <p>Number</p> <p>Optional. Amount that <code>amp</code> is multiplied by for each octave. This value controls how fast the harmonics drop off.</p> <p>Make this value closer to <code>1</code> to have the harmonics added at the same amplitude as the base frequency, or closer to <code>0</code> to add in less detail. Defaults to <code>0.5</code>.</p> <p><code>t</code></p> <p>Number</p> <p>Optional. Base start time. This value defaults to the current time. Use this parameter if you want the output to be a wiggle of the property value sampled at a different time. Defaults to <code>time</code> (the current comp time, in seconds).</p>"},{"location":"objects/property/#returns_13","title":"Returns","text":"<p>Number or Array</p>"},{"location":"objects/property/#example_10","title":"Example","text":"<p>This produces about <code>5</code> wiggles per second with an average size of about 20 pixels. In addition to the main wiggle, two more levels of detailed wiggles occur with a frequency of <code>10</code> and <code>20</code> wiggles per second, and sizes of <code>10</code> and <code>5</code> pixels, respectively:</p> <pre><code>position.wiggle(5, 20, 3, 0.5);\n</code></pre> <p>This example, on a two-dimensional property such as Scale, wiggles both dimensions by the same amount:</p> <pre><code>const v = wiggle(5, 10);\n\n[v[0], v[0]];\n</code></pre> <p>This example, on a two-dimensional property, wiggles only along the y-axis:</p> <pre><code>const freq = 3;\nconst amp = 50;\nconst w = wiggle(freq,amp);\n\n[value[0], w[1]];\n</code></pre>"},{"location":"objects/property/#loop-types","title":"Loop Types","text":"<p>The following loop types are predefined strings used in the \"type\" parameter for:</p> <ul> <li>loopIn()</li> <li>loopInDuration()</li> <li>loopOut()</li> <li>loopOutDuration()</li> </ul> <p>Type</p> <p>Behaviour</p> <p><code>\"cycle\"</code></p> <p>Default. Repeats the specified segment.</p> <p><code>\"pingpong\"</code></p> <p>Repeats the specified segment, alternating between forward and backward.</p> <p><code>\"offset\"</code></p> <p>Repeats the specified segment, but offsets each cycle by the difference in the value of the property at the start and end of the segment, multiplied by the number of times the segment has looped.</p> <p><code>\"continue\"</code></p> <p>Does not repeat the specified segment, but continues to animate a property based on the velocity at the first or last keyframe.</p> <p>For example, if the last keyframe of a Scale property of a layer is <code>100%</code>, the layer continues to scale from <code>100%</code> to the Out point, instead of looping directly back to the Out point. This type does not accept a keyframes or duration argument.</p>"},{"location":"objects/propertygroup/","title":"PropertyGroup","text":"<p><code>thisLayer(\"ADBE Effect Parade\")</code></p> <p>All properties in the Timeline are organized into groups, which share some attributes of properties like <code>name</code> and <code>propertyIndex</code>.</p> <p>Property Groups can have a fixed number of properties (e.g. an individual effect whose properties don't change) or a variable number of properties (e.g. the \"Effects\" group itself which can have any number of effect within it).</p>"},{"location":"objects/propertygroup/#top-level-groups-in-a-layer","title":"Top-level groups in a Layer","text":"<ul> <li>Motion Trackers</li> <li>Text</li> <li>Contents</li> <li>Masks</li> <li>Effects</li> <li>Transform</li> <li>Layer Styles</li> <li>Geometry Options</li> <li>Material Options</li> <li>Audio</li> <li>Data</li> <li>Essential Properties</li> </ul>"},{"location":"objects/propertygroup/#nested-groups","title":"Nested groups","text":"<ul> <li>Individual effects</li> <li>Individual masks</li> <li>Shape groups</li> <li>Text Animators</li> </ul> <p>Info</p> <p>On this page, we're going to use <code>thisLayer(\"ADBE Effect Parade\")</code> (the \"Effects\" group) as a sample on how to call these items, however note that any method that returns a PropertyGroup will work.</p>"},{"location":"objects/propertygroup/#attributes","title":"Attributes","text":""},{"location":"objects/propertygroup/#propertygroupname","title":"PropertyGroup.name","text":"<p><code>thisLayer(\"ADBE Effect Parade\").name</code></p>"},{"location":"objects/propertygroup/#description","title":"Description","text":"<p>Returns the name of the property group.</p>"},{"location":"objects/propertygroup/#type","title":"Type","text":"<p>String</p>"},{"location":"objects/propertygroup/#propertygroupnumproperties","title":"PropertyGroup.numProperties","text":"<p><code>thisLayer(\"ADBE Effect Parade\").numProperties</code></p>"},{"location":"objects/propertygroup/#description_1","title":"Description","text":"<p>Returns the number of properties or groups directly within a group.</p> <p>Note</p> <p>This does not include properties nested inside child groups.</p>"},{"location":"objects/propertygroup/#type_1","title":"Type","text":"<p>Number</p>"},{"location":"objects/propertygroup/#example","title":"Example","text":"<p>To find the number of effects applied to a layer:</p> <pre><code>thisLayer(\"ADBE Effect Parade\").numProperties\n</code></pre>"},{"location":"objects/propertygroup/#propertygrouppropertyindex","title":"PropertyGroup.propertyIndex","text":"<p><code>thisLayer(\"ADBE Effect Parade\").propertyIndex</code></p>"},{"location":"objects/propertygroup/#description_2","title":"Description","text":"<p>Returns the index of a property group relative to other properties or groups in its property group.</p>"},{"location":"objects/propertygroup/#type_2","title":"Type","text":"<p>Number</p>"},{"location":"objects/propertygroup/#methods","title":"Methods","text":""},{"location":"objects/propertygroup/#propertygrouppropertygroup","title":"PropertyGroup.propertyGroup()","text":"<p><code>propertyGroup([countUp=1])</code></p>"},{"location":"objects/propertygroup/#description_3","title":"Description","text":"<p>Returns a higher-level property group relative to the property group on which the method is called.</p> <p>See <code>propertyGroup()</code> for additional details.</p>"},{"location":"objects/propertygroup/#parameters","title":"Parameters","text":"Parameter Type Description <code>countUp</code> Number Optional. The number of property groups \"up\" the hierarchy to climb. Defaults to <code>1</code>."},{"location":"objects/propertygroup/#returns","title":"Returns","text":"<p>PropertyGroup object</p>"},{"location":"text/sourcetext/","title":"Source Text","text":"<p><code>text.sourceText</code></p> <p>These functions are accessible on the Text.sourceText object in AE 17.0 and later.</p>"},{"location":"text/sourcetext/#attributes","title":"Attributes","text":""},{"location":"text/sourcetext/#sourcetextishorizontaltext","title":"SourceText.isHorizontalText","text":"<p><code>text.sourceText.isHorizontalText</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/sourcetext/#description","title":"Description","text":"<p>Returns <code>true</code> if the Text layer is horizontal and <code>false</code> if it is vertical.</p>"},{"location":"text/sourcetext/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"text/sourcetext/#sourcetextisparagraphtext","title":"SourceText.isParagraphText","text":"<p><code>text.sourceText.isParagraphText</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/sourcetext/#description_1","title":"Description","text":"<p>Returns <code>true</code> if a Text layer is Paragraph text. If the Text layer is a Point text, it returns <code>false</code>.</p>"},{"location":"text/sourcetext/#type_1","title":"Type","text":"<p>Boolean</p>"},{"location":"text/sourcetext/#sourcetextispointtext","title":"SourceText.isPointText","text":"<p><code>text.sourceText.isPointText</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/sourcetext/#description_2","title":"Description","text":"<p>Returns <code>true</code> if a Text layer is Point text. If the Text layer is Paragraph text, it returns <code>false</code>.</p>"},{"location":"text/sourcetext/#type_2","title":"Type","text":"<p>Boolean</p>"},{"location":"text/sourcetext/#sourcetextisverticaltext","title":"SourceText.isVerticalText","text":"<p><code>text.sourceText.isVerticalText</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/sourcetext/#description_3","title":"Description","text":"<p>Returns <code>true</code> if the Text layer is vertical and <code>false</code> if it is horizontal.</p>"},{"location":"text/sourcetext/#type_3","title":"Type","text":"<p>Boolean</p>"},{"location":"text/sourcetext/#sourcetextstyle","title":"SourceText.style","text":"<p><code>text.sourceText.style</code></p>"},{"location":"text/sourcetext/#description_4","title":"Description","text":"<p>Returns the Text Style object for a given <code>sourceText</code> property.</p>"},{"location":"text/sourcetext/#type_4","title":"Type","text":"<p>Text Style object</p>"},{"location":"text/sourcetext/#methods","title":"Methods","text":""},{"location":"text/sourcetext/#sourcetextcreatestyle","title":"SourceText.createStyle()","text":"<p><code>text.sourceText.createStyle()</code></p>"},{"location":"text/sourcetext/#description_5","title":"Description","text":"<p>Used to initialize an empty Text Style object in which you'd manually bake in specific values.</p>"},{"location":"text/sourcetext/#returns","title":"Returns","text":"<p>Empty Text Style object.</p>"},{"location":"text/sourcetext/#example","title":"Example","text":"<p>To create a new style with font size 300 and the font Impact:</p> <pre><code>text.sourceText\n    .createStyle()\n    .setFontSize(300)\n    .setFont(\"Impact\");\n</code></pre>"},{"location":"text/sourcetext/#sourcetextgetstyleat","title":"SourceText.getStyleAt()","text":"<p><code>text.sourceText.getStyleAt(charIndex[, time])</code></p>"},{"location":"text/sourcetext/#description_6","title":"Description","text":"<p>This function returns the Text Style object of a particular character at a specific time.</p> <p>In case the style is keyframed and changes over time, use the second <code>time</code> parameter to specify the target time to get the style at.</p> <p>Note</p> <p>Using SourceText.style is the same as using <code>text.sourceText.getStyleAt(0,0)</code></p>"},{"location":"text/sourcetext/#parameters","title":"Parameters","text":"Parameter Type Description <code>index</code> Number The index of the letter or character whose style is needed <code>time</code> Number Optional. The time within the composition to get the style from. Defaults to <code>time</code>."},{"location":"text/sourcetext/#returns_1","title":"Returns","text":"<p>Text Style object</p>"},{"location":"text/sourcetext/#example_1","title":"Example","text":"<p>To get the style of the first character at the beginning of the timeline:</p> <pre><code>text.sourceText.getStyleAt(0,0);\n</code></pre>"},{"location":"text/style/","title":"Text Style","text":"<p><code>text.sourceText.style</code></p> <p>Most of these functions are accessible from the SourceText.style object in AE 17.0 and later. Where noted, additional methods were added in AE 25.0. The ability to control percharacter styling was also added in 25.0. Use the second and third arguments (when available) to control per-character styling.</p> <p>Note</p> <p>When using per-character styling, line breaks and spaces are also considered characters and must be accounted for (or skipped, if desired) when calcuating character indexes.</p> <p>For more info on working with text styles, see:</p> <ul> <li>Use Expressions to Edit and Access Text Properties on helpx.adobe.com</li> <li>After Effects 2020: Express Yourself (and Your Text) on blog.adobe.com</li> </ul>"},{"location":"text/style/#chaining","title":"Chaining","text":"<p>All the methods for Text Style will return a Text Style object, so you can call them in a chain, e.g.:</p> <pre><code>text.sourceText.style.setFont(\"Times New Roman\").setFontSize(42).setText(\"New Text\");\n</code></pre> <p>Tip</p> <p>You can also format this chain with line breaks to make it easier to read: <pre><code>text.sourceText.style\n    .setFont(\"Times New Roman\")\n    .setFontSize(42)\n    .setText(\"New Text\");\n</code></pre></p>"},{"location":"text/style/#attributes","title":"Attributes","text":""},{"location":"text/style/#textstyleapplyfill","title":"TextStyle.applyFill","text":"<p><code>text.sourceText.style.applyFill</code></p>"},{"location":"text/style/#description","title":"Description","text":"<p>Returns whether Fill Color is enabled.</p>"},{"location":"text/style/#type","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleapplystroke","title":"TextStyle.applyStroke","text":"<p><code>text.sourceText.style.applyStroke</code></p>"},{"location":"text/style/#description_1","title":"Description","text":"<p>Returns whether Stroke is enabled.</p>"},{"location":"text/style/#type_1","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstylebaselinedirection","title":"TextStyle.baselineDirection","text":"<p><code>text.sourceText.style.baselineDirection</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_2","title":"Description","text":"<p>Returns the Baseline Direction for a Text layer.</p>"},{"location":"text/style/#type_2","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"default\"</code></li> <li><code>\"rotated\"</code></li> <li><code>\"tate-chuu-yoko\"</code></li> </ul>"},{"location":"text/style/#textstylebaselineoption","title":"TextStyle.baselineOption","text":"<p><code>text.sourceText.style.baselineOption</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_3","title":"Description","text":"<p>Returns the Baseline Option Type for a Text layer.</p>"},{"location":"text/style/#type_3","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"default\"</code></li> <li><code>\"subscript\"</code></li> <li><code>\"superscript\"</code></li> </ul>"},{"location":"text/style/#textstylebaselineshift","title":"TextStyle.baselineShift","text":"<p><code>text.sourceText.style.baselineShift</code></p>"},{"location":"text/style/#description_4","title":"Description","text":"<p>Returns the value of Baseline Shift for a Text layer.</p>"},{"location":"text/style/#type_4","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstyledigitset","title":"TextStyle.digitSet","text":"<p><code>text.sourceText.style.digitSet</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_5","title":"Description","text":"<p>Returns the Digit Set for a Text layer.</p>"},{"location":"text/style/#type_5","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"default\"</code></li> <li><code>\"hindidigits\"</code></li> </ul>"},{"location":"text/style/#textstyledirection","title":"TextStyle.direction","text":"<p><code>text.sourceText.style.direction</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_6","title":"Description","text":"<p>Returns the value of Direction of the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_6","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"left-to-right\"</code></li> <li><code>\"right-to-left\"</code></li> </ul>"},{"location":"text/style/#textstylefillcolor","title":"TextStyle.fillColor","text":"<p><code>text.sourceText.style.fillColor</code></p>"},{"location":"text/style/#description_7","title":"Description","text":"<p>Returns the text Fill Color as RGB values on a scale from 0 - 1.0.</p>"},{"location":"text/style/#type_7","title":"Type","text":"<p>Array of Numbers.</p>"},{"location":"text/style/#textstylefirstlineindent","title":"TextStyle.firstLineIndent","text":"<p><code>text.sourceText.style.firstLineIndent</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_8","title":"Description","text":"<p>Returns the value of First Line Indent of the first line of the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_8","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylefont","title":"TextStyle.font","text":"<p><code>text.sourceText.style.font</code></p>"},{"location":"text/style/#description_9","title":"Description","text":"<p>Returns the font name for a Text layer.</p>"},{"location":"text/style/#type_9","title":"Type","text":"<p>String</p>"},{"location":"text/style/#textstylefontsize","title":"TextStyle.fontSize","text":"<p><code>text.sourceText.style.fontSize</code></p>"},{"location":"text/style/#description_10","title":"Description","text":"<p>Returns the value of Font Size for a Text layer.</p>"},{"location":"text/style/#type_10","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylehorizontalscaling","title":"TextStyle.horizontalScaling","text":"<p><code>text.sourceText.style.horizontalScaling</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_11","title":"Description","text":"<p>Returns the Horizontal Scaling for a Text layer.</p>"},{"location":"text/style/#type_11","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstyleisallcaps","title":"TextStyle.isAllCaps","text":"<p><code>text.sourceText.style.isAllCaps</code></p>"},{"location":"text/style/#description_12","title":"Description","text":"<p>Returns whether All Caps is enabled.</p>"},{"location":"text/style/#type_12","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleisautoleading","title":"TextStyle.isAutoLeading","text":"<p><code>text.sourceText.style.isAutoLeading</code></p>"},{"location":"text/style/#description_13","title":"Description","text":"<p>Returns whether Auto Leading is enabled.</p>"},{"location":"text/style/#type_13","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleiseverylinecomposer","title":"TextStyle.isEveryLineComposer","text":"<p><code>text.sourceText.style.isEveryLineComposer</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_14","title":"Description","text":"<p>Returns <code>true</code> if the Text layer if Every-Line Composer is set for the first paragraph of a Text layer and <code>false</code> if Single-Line Composer is set for the first paragraph of a Text layer</p>"},{"location":"text/style/#type_14","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleisfauxbold","title":"TextStyle.isFauxBold","text":"<p><code>text.sourceText.style.isFauxBold</code></p>"},{"location":"text/style/#description_15","title":"Description","text":"<p>Returns whether Faux Bold is enabled.</p>"},{"location":"text/style/#type_15","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleisfauxitalic","title":"TextStyle.isFauxItalic","text":"<p><code>text.sourceText.style.isFauxItalic</code></p>"},{"location":"text/style/#description_16","title":"Description","text":"<p>Returns whether Faux Italics are enabled.</p>"},{"location":"text/style/#type_16","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleishangingroman","title":"TextStyle.isHangingRoman","text":"<p><code>text.sourceText.style.isHangingRoman</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_17","title":"Description","text":"<p>Whether Hanging Roman Punctuation is set for the entire Text layer.</p>"},{"location":"text/style/#type_17","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleisligature","title":"TextStyle.isLigature","text":"<p><code>text.sourceText.style.isLigature</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_18","title":"Description","text":"<p>Returns whether ligatures are enabled.</p>"},{"location":"text/style/#type_18","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstyleissmallcaps","title":"TextStyle.isSmallCaps","text":"<p><code>text.sourceText.style.isSmallCaps</code></p>"},{"location":"text/style/#description_19","title":"Description","text":"<p>Returns whether Small Caps is enabled.</p>"},{"location":"text/style/#type_19","title":"Type","text":"<p>Boolean</p>"},{"location":"text/style/#textstylejustification","title":"TextStyle.justification","text":"<p><code>text.sourceText.style.justification</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_20","title":"Description","text":"<p>Returns the value of Justification of the first paragraph of a Text layer.</p> <p>Warning</p> <p>The left and right values for alignment/justification will be reversed if the Text layer's TextStyle.direction is set to use right-to-left. You can control this using the Property or Paragraph panel, or via TextStyle.setDirection().</p>"},{"location":"text/style/#type_20","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"alignCenter\"</code></li> <li><code>\"alignLeft\"</code></li> <li><code>\"alignRight\"</code></li> <li><code>\"justifyFull\"</code></li> <li><code>\"justifyLastCenter\"</code></li> <li><code>\"justifyLastLeft\"</code></li> <li><code>\"justifyLastRight\"</code></li> </ul>"},{"location":"text/style/#textstylekerning","title":"TextStyle.kerning","text":"<p><code>text.sourceText.style.kerning</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_21","title":"Description","text":"<p>Returns the Kerning Value for a Text Layer.</p> <p>For this value to be returned as anything other than zero, the KerningType must not be set.</p>"},{"location":"text/style/#type_21","title":"Type","text":"<p>Number. Read-only.</p>"},{"location":"text/style/#textstylekerningtype","title":"TextStyle.kerningType","text":"<p><code>text.sourceText.style.kerningType</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_22","title":"Description","text":"<p>Returns the Kerning Type for a Text layer.</p>"},{"location":"text/style/#type_22","title":"Type","text":"<p>Read-only. Predefined string. One of:</p> <ul> <li><code>\"manual\"</code></li> <li><code>\"metrics\"</code></li> <li><code>\"optical\"</code></li> </ul>"},{"location":"text/style/#textstyleleading","title":"TextStyle.leading","text":"<p><code>text.sourceText.style.leading</code></p>"},{"location":"text/style/#description_23","title":"Description","text":"<p>Returns the value of Leading for a Text layer.</p>"},{"location":"text/style/#type_23","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstyleleadingtype","title":"TextStyle.leadingType","text":"<p><code>text.sourceText.style.leadingType</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_24","title":"Description","text":"<p>Returns the value of Leading Type for the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_24","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"bottom-to-bottom\"</code></li> <li><code>\"top-to-top\"</code></li> </ul>"},{"location":"text/style/#textstyleleftmargin","title":"TextStyle.leftMargin","text":"<p><code>text.sourceText.style.leftMargin</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_25","title":"Description","text":"<p>Returns the value of Left Margin of the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_25","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylelinejoin","title":"TextStyle.lineJoin","text":"<p><code>text.sourceText.style.lineJoin</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_26","title":"Description","text":"<p>Returns the Line Join Type for a Text layer.</p>"},{"location":"text/style/#type_26","title":"Type","text":"<p>Predefined string. One of:</p> <ul> <li><code>\"bevel\"</code></li> <li><code>\"miter\"</code></li> <li><code>\"round\"</code></li> </ul>"},{"location":"text/style/#textstylerightmargin","title":"TextStyle.rightMargin","text":"<p><code>text.sourceText.style.rightMargin</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_27","title":"Description","text":"<p>Returns the value of Right Margin of the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_27","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylespaceafter","title":"TextStyle.spaceAfter","text":"<p><code>text.sourceText.style.spaceAfter</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_28","title":"Description","text":"<p>Returns the value of the Space After the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_28","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylespacebefore","title":"TextStyle.spaceBefore","text":"<p><code>text.sourceText.style.spaceBefore</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_29","title":"Description","text":"<p>Returns the value of the Space Before the first paragraph of a Text layer.</p>"},{"location":"text/style/#type_29","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstylestrokecolor","title":"TextStyle.strokeColor","text":"<p><code>text.sourceText.style.strokeColor</code></p>"},{"location":"text/style/#description_30","title":"Description","text":"<p>Returns the Stroke Color as RGB values on a scale from 0 - 1.0.</p>"},{"location":"text/style/#type_30","title":"Type","text":"<p>Array of numbers</p>"},{"location":"text/style/#textstylestrokewidth","title":"TextStyle.strokeWidth","text":"<p><code>text.sourceText.style.strokeWidth</code></p>"},{"location":"text/style/#description_31","title":"Description","text":"<p>Returns the Stroke Width value for a Text layer.</p>"},{"location":"text/style/#type_31","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstyletracking","title":"TextStyle.tracking","text":"<p><code>text.sourceText.style.tracking</code></p>"},{"location":"text/style/#description_32","title":"Description","text":"<p>Returns the value of Tracking for a Text layer.</p>"},{"location":"text/style/#type_32","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#textstyletsume","title":"TextStyle.tsume","text":"<p><code>text.sourceText.style.tsume</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_33","title":"Description","text":"<p>Returns the Tsume value for a Text layer.</p>"},{"location":"text/style/#type_33","title":"Type","text":"<p>Number (between <code>0</code> and <code>1</code>).</p>"},{"location":"text/style/#textstyleverticalscaling","title":"TextStyle.verticalScaling","text":"<p><code>text.sourceText.style.verticalScaling</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_34","title":"Description","text":"<p>Returns the Vertical Scaling for a Text layer.</p>"},{"location":"text/style/#type_34","title":"Type","text":"<p>Number</p>"},{"location":"text/style/#methods","title":"Methods","text":""},{"location":"text/style/#textstylereplacetext","title":"TextStyle.replaceText()","text":"<p><code>text.sourceText.style.replaceText(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_35","title":"Description","text":"<p>This is used when you want to define (or inherit) a Text Style, while setting the content for a substring of the text.</p>"},{"location":"text/style/#parameters","title":"Parameters","text":"Parameter Type Description <code>value</code> String Required. The text to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#example","title":"Example","text":"<p>To create a custom style and then set a substring of the text within the expression:</p> <pre><code>// assume the value of the source text is \"Old Text\"\nconst referenceText = thisComp.layer(\"Source Layer Name\").text.sourceText;\nconst style = referenceText.getStyleAt(0,0);\n\n// This will change the text from \"Old Text\" to \"NewText\" as the first 4 characters are replaced.\nstyle.replaceText(\"New\", 0, 4);\n</code></pre>"},{"location":"text/style/#textstylesetallcaps","title":"TextStyle.setAllCaps()","text":"<p><code>text.sourceText.style.setAllCaps(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_36","title":"Description","text":"<p>Used to set the All Caps status.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_1","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable All Caps. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_1","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetapplyfill","title":"TextStyle.setApplyFill()","text":"<p><code>text.sourceText.style.setApplyFill(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_37","title":"Description","text":"<p>Used to set whether Fill Color is enabled.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_2","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Fill. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_2","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetapplystroke","title":"TextStyle.setApplyStroke()","text":"<p><code>text.sourceText.style.setApplyStroke(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_38","title":"Description","text":"<p>Used to set whether Stroke is enabled.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_3","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Stroke. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_3","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetautoleading","title":"TextStyle.setAutoLeading()","text":"<p><code>text.sourceText.style.setAutoLeading(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_39","title":"Description","text":"<p>Used to set the Auto Leading status.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_4","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Auto Leading. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_4","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetbaselinedirection","title":"TextStyle.setBaselineDirection()","text":"<p><code>text.sourceText.style.setBaselineDirection(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_40","title":"Description","text":"<p>Used to set the Baseline Direction.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_5","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in BaselineDirection The value to set for Baseline Direction. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_5","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetbaselineshift","title":"TextStyle.setBaselineShift()","text":"<p><code>text.sourceText.style.setBaselineShift(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_41","title":"Description","text":"<p>Used to set the Baseline Shift to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_6","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The Baseline Shift value to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_6","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetbaselineoption","title":"TextStyle.setBaselineOption()","text":"<p><code>text.sourceText.style.setBaselineOption(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_42","title":"Description","text":"<p>Used to set the baseline option.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_7","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in BaselineOption Required. The value to set for Baseline Option. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_7","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetdigitset","title":"TextStyle.setDigitSet()","text":"<p><code>text.sourceText.style.setDigitSet(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_43","title":"Description","text":"<p>Used to set the Digit Set.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_8","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in DigitSet Required. The value to use for Digit Set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_8","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetdirection","title":"TextStyle.setDirection()","text":"<p><code>text.sourceText.style.setDirection(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_44","title":"Description","text":"<p>Used to set the Direction for the entire Text layer, either <code>left-to-right</code> or <code>right-to-left</code>.</p>"},{"location":"text/style/#parameters_9","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in Direction The desired value for Direction."},{"location":"text/style/#returns_9","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstyleseteverylinecomposer","title":"TextStyle.setEveryLineComposer()","text":"<p><code>text.sourceText.style.setEveryLineComposer(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_45","title":"Description","text":"<p>Used to enable or disable the Every-Line Composer for the entire Text layer.</p>"},{"location":"text/style/#parameters_10","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Whether to enable or disable Every-Line Composer."},{"location":"text/style/#returns_10","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfauxbold","title":"TextStyle.setFauxBold()","text":"<p><code>text.sourceText.style.setFauxBold(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_46","title":"Description","text":"<p>Used to set the Faux Bold status.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_11","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Faux Bold. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_11","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfauxitalic","title":"TextStyle.setFauxItalic()","text":"<p><code>text.sourceText.style.setFauxItalic(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_47","title":"Description","text":"<p>Used to set the Faux Italics status.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_12","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Faux Italics. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_12","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfillcolor","title":"TextStyle.setFillColor()","text":"<p><code>text.sourceText.style.setFillColor(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_48","title":"Description","text":"<p>Used to set the text Fill Color.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p> <p>Keep in mind that TextStyle.applyFill must be <code>true</code> in order for the fill color to show up. You can set it to <code>true</code> by enabling Fill in the Properties or Character panel, or by using TextStyle.setApplyFill().</p>"},{"location":"text/style/#parameters_13","title":"Parameters","text":"Parameter Type Description <code>value</code> Array of numbers Required. <code>[R, G, B]</code> with each value between <code>0.0</code> and <code>1.0</code>. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_13","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfirstlineindent","title":"TextStyle.setFirstLineIndent()","text":"<p><code>text.sourceText.style.setFirstLineIndent(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_49","title":"Description","text":"<p>Used to set the First Line Indent of a Text layer to a specified value.</p>"},{"location":"text/style/#parameters_14","title":"Parameters","text":"Parameter Type Description <code>value</code> Number The desired value for First Line Indent."},{"location":"text/style/#returns_14","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfont","title":"TextStyle.setFont()","text":"<p><code>text.sourceText.style.setFont(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_50","title":"Description","text":"<p>Used to set the font to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_15","title":"Parameters","text":"Parameter Type Description <code>value</code> String Required. The font to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_15","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetfontsize","title":"TextStyle.setFontSize()","text":"<p><code>text.sourceText.style.setFontSize(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_51","title":"Description","text":"<p>Used to set the Font Size to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_16","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The Font Size to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_16","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesethangingroman","title":"TextStyle.setHangingRoman()","text":"<p><code>text.sourceText.style.setHangingRoman(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_52","title":"Description","text":"<p>Used to enable or disable Hanging Roman Punctuation for the entire Text layer.</p>"},{"location":"text/style/#parameters_17","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Whether to enable or disable Roman Hanging Punctuation."},{"location":"text/style/#returns_17","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesethorizontalscaling","title":"TextStyle.setHorizontalScaling()","text":"<p><code>text.sourceText.style.setHorizontalScaling(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_53","title":"Description","text":"<p>Used to set the Horizontal Scaling to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_18","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The value to set the Horizontal Scaling. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_18","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetjustification","title":"TextStyle.setJustification()","text":"<p><code>text.sourceText.style.setJustification(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_54","title":"Description","text":"<p>Used to set the Justification for the entire Text layer.</p> <p>Warning</p> <p>The left and right values for alignment/justification will be reversed if the Text layer's TextStyle.direction is set to use right-to-left. You can control this using the Property or Paragraph panel, or via TextStyle.setDirection().</p>"},{"location":"text/style/#parameters_19","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in Justification The desired value for the Justification."},{"location":"text/style/#returns_19","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetkerning","title":"TextStyle.setKerning()","text":"<p><code>text.sourceText.style.setKerning(value, characterIndex)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_55","title":"Description","text":"<p>Used to set the Kerning Value at the specifed character index.</p> <p>This will only affect the Text layer when KerningType is not set for the character index.</p>"},{"location":"text/style/#parameters_20","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The value to set the Kerning Value. <code>characterIndex</code> Number Required. The character index for the substring to be applied."},{"location":"text/style/#returns_20","title":"Returns","text":"<p>None</p>"},{"location":"text/style/#textstylesetkerningtype","title":"TextStyle.setKerningType()","text":"<p><code>text.sourceText.style.setKerningType(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_56","title":"Description","text":"<p>Used to set the Kerning Type.</p> <p>The value will be applied to the entire Text layer unless a start index and number of characters are specified.</p> <p>Note</p> <p><code>manual</code> is not a valid value for this method. To set manual kerning, use TextStyle.setKerning().</p> <p>Also, note that automatic kerning will take a precendence over manual kerning.</p>"},{"location":"text/style/#parameters_21","title":"Parameters","text":"Parameter Type Description <code>value</code> <code>metrics</code> or <code>optical</code>, as defined in KerningType. Required. The value to set for Kerning Type. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be changed. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_21","title":"Returns","text":"<p>None</p>"},{"location":"text/style/#textstylesetleading","title":"TextStyle.setLeading()","text":"<p><code>text.sourceText.style.setLeading(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_57","title":"Description","text":"<p>Used to set the Leading to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p> <p>Keep in mind that TextStyle.isAutoLeading must be <code>false</code> in order for <code>setLeading()</code> to have any visible affect. You can set Leading to a value other than Auto in the Properties or Character panel, or via TextStyle.setAutoLeading().</p>"},{"location":"text/style/#parameters_22","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The Leading value to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_22","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetleadingtype","title":"TextStyle.setLeadingType()","text":"<p><code>text.sourceText.style.setLeadingType(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_58","title":"Description","text":"<p>Used to set the Leading Type for the entire Text layer.</p>"},{"location":"text/style/#parameters_23","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in LeadingType The desired value for Leading Type."},{"location":"text/style/#returns_23","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetleftmargin","title":"TextStyle.setLeftMargin()","text":"<p><code>text.sourceText.style.setLeftMargin(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_59","title":"Description","text":"<p>Used to set the Left Margin of a Text layer to a specified value.</p>"},{"location":"text/style/#parameters_24","title":"Parameters","text":"Parameter Type Description <code>value</code> Number The desired value for Left Margin."},{"location":"text/style/#returns_24","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetligature","title":"TextStyle.setLigature()","text":"<p><code>text.sourceText.style.setLigature(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_60","title":"Description","text":"<p>Used to enable or disable ligatures.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_25","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable ligatures. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_25","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetlinejoin","title":"TextStyle.setLineJoin()","text":"<p><code>text.sourceText.style.setLineJoin(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_61","title":"Description","text":"<p>Used to set the Line Join Type to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_26","title":"Parameters","text":"Parameter Type Description <code>value</code> Predefined string as defined in LineJoin Required. The value to set for Line Join Type. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_26","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetrightmargin","title":"TextStyle.setRightMargin()","text":"<p><code>text.sourceText.style.setRightMargin(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_62","title":"Description","text":"<p>Used to set the Right Margin of a Text layer to a specified value.</p>"},{"location":"text/style/#parameters_27","title":"Parameters","text":"Parameter Type Description <code>value</code> Number The desired value for Right Margin."},{"location":"text/style/#returns_27","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetsmallcaps","title":"TextStyle.setSmallCaps()","text":"<p><code>text.sourceText.style.setSmallCaps(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_63","title":"Description","text":"<p>Used to set the Small Caps status.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_28","title":"Parameters","text":"Parameter Type Description <code>value</code> Boolean Required. Whether to enable or disable Small Caps. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_28","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetspaceafter","title":"TextStyle.setSpaceAfter()","text":"<p><code>text.sourceText.style.setSpaceAfter(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_64","title":"Description","text":"<p>Used to set the Space After attribute of a Text layer to a specified value.</p>"},{"location":"text/style/#parameters_29","title":"Parameters","text":"Parameter Type Description <code>value</code> Number The desired value for the Space After attribute."},{"location":"text/style/#returns_29","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetspacebefore","title":"TextStyle.setSpaceBefore()","text":"<p><code>text.sourceText.style.setSpaceBefore(value)</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p> <p>Warning</p> <p>This method must be called after TextStyle.setText() if both are being used.</p>"},{"location":"text/style/#description_65","title":"Description","text":"<p>Used to set the Space Before attribute of a Text layer to a specified value.</p>"},{"location":"text/style/#parameters_30","title":"Parameters","text":"Parameter Type Description <code>value</code> Number The desired value for the Space Before attribute."},{"location":"text/style/#returns_30","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetstrokecolor","title":"TextStyle.setStrokeColor()","text":"<p><code>text.sourceText.style.setStrokeColor(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_66","title":"Description","text":"<p>Used to set the Stroke Color.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p> <p>Keep in mind that TextStyle.applyStroke must be <code>true</code> and TextStyle.strokeWidth must be greater than zero in order for any stroke color to be shown. You can set these by enabling Stroke or increasing Stroke Width in the Properties or Character panel, or by using TextStyle.setApplyStroke() and TextStyle.setStrokeWidth(), respectively.</p>"},{"location":"text/style/#parameters_31","title":"Parameters","text":"Parameter Type Description <code>value</code> Array of numbers Required. <code>[R, G, B]</code> with each value between <code>0.0</code> and <code>1.0</code>. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_31","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesetstrokewidth","title":"TextStyle.setStrokeWidth()","text":"<p><code>text.sourceText.style.setStrokeWidth(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_67","title":"Description","text":"<p>Used to set the Stroke Width to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p> <p>Keep in mind that TextStyle.applyStroke must be <code>true</code> in order to see any change in stroke width. You can set this either by enabling Stroke in the Properties or Character panel, or via TextStyle.setApplyStroke().</p>"},{"location":"text/style/#parameters_32","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The value to set the Stroke Width. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_32","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesettext","title":"TextStyle.setText()","text":"<p><code>text.sourceText.style.setText(value)</code></p>"},{"location":"text/style/#description_68","title":"Description","text":"<p>This is used when you want to define (or inherit) a Text Style while setting the text content separately.</p>"},{"location":"text/style/#parameters_33","title":"Parameters","text":"Parameter Type Description <code>value</code> String The text to set."},{"location":"text/style/#returns_33","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#examples","title":"Examples","text":"<p>To inherit the style and content from another layer:</p> <pre><code>const referenceText = thisComp.layer(\"Source Layer Name\").text.sourceText;\n\nconst style = referenceText.getStyleAt(0, 0);\nstyle.setText(referenceText);\n</code></pre> <p>To create a custom style and then set the text within the expression:</p> <pre><code>text.sourceText\n    .createStyle()\n    .setFontSize(300)\n    .setFont(\"Impact\")\n    .setText(\"Hello world!\");\n</code></pre>"},{"location":"text/style/#textstylesettracking","title":"TextStyle.setTracking()","text":"<p><code>text.sourceText.style.setTracking(value[, startIndex, numOfCharacters])</code></p>"},{"location":"text/style/#description_69","title":"Description","text":"<p>Used to set the Tracking to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_34","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The Tracking value to set. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_34","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/style/#textstylesettsume","title":"TextStyle.setTsume()","text":"<p><code>text.sourceText.style.setTsume(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_70","title":"Description","text":"<p>Used to set the Tsume to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_35","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The value to set the Tsume, between <code>0</code> and <code>100</code>. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_35","title":"Returns","text":"<p>None</p>"},{"location":"text/style/#textstylesetverticalscaling","title":"TextStyle.setVerticalScaling()","text":"<p><code>text.sourceText.style.setVerticalScaling(value[, startIndex, numOfCharacters])</code></p> <p>Note</p> <p>This functionality was added in After Effects 25.0.</p>"},{"location":"text/style/#description_71","title":"Description","text":"<p>Used to set the Vertical Scaling to a specified value.</p> <p>The value will be set for the entire Text layer unless <code>startIndex</code> and <code>numOfCharacters</code> are specified.</p>"},{"location":"text/style/#parameters_36","title":"Parameters","text":"Parameter Type Description <code>value</code> Number Required. The value to set the Vertical Scaling. <code>startIndex</code> Number Optional. The start index for the substring to be replaced. Defaults to <code>0</code>. <code>numOfCharacters</code> Number Optional. The length of the substring to be replaced. Defaults to the number of characters until end of the string."},{"location":"text/style/#returns_36","title":"Returns","text":"<p>A TextStyle object.</p>"},{"location":"text/text/","title":"Text","text":"<p><code>text</code></p> <p>This category holds generic text-related entries for text layers.</p>"},{"location":"text/text/#attributes","title":"Attributes","text":""},{"location":"text/text/#textsourcetext","title":"Text.sourceText","text":"<p><code>text.sourceText</code></p>"},{"location":"text/text/#description","title":"Description","text":"<p>Returns the text content of a text layer.</p> <p>Note</p> <p>As of After Effects 17.0, this property returns the Source Text object to access text style properties. If no style properties are specified, this returns the text content as expected.</p>"},{"location":"text/text/#type","title":"Type","text":"<p>String of text content, or Source Text (AE 17.0+)</p>"},{"location":"text/text/#textfont","title":"Text.Font...","text":""},{"location":"text/text/#description_1","title":"Description","text":"<p>Note</p> <p>This isn't actually an expression method! Instead, it's a button from the expression fly-out menu.</p> <p>Launches a dialog window for the user to specify a font name and weight.</p> <p>Upon selection, the internal font name is injected into the expression editor as a string.</p>"},{"location":"text/text/#type_1","title":"Type","text":"<p>String</p>"}]}